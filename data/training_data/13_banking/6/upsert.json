[
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('1', 'John', 'Doe', 'john.doe@example.com', 100.50, '2021-10-15 08:00:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('2', 'Jane', 'Smith', 'jane.smith@example.com', 200.75, '2021-10-16 10:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('3', 'Alice', 'Johnson', 'alice.johnson@example.com', 150.25, '2021-10-17 12:45:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('4', 'Robert', 'Brown', 'robert.brown@example.com', 75.90, '2021-10-18 15:20:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('5', 'Emily', 'Davis', 'emily.davis@example.com', 120.00, '2021-10-19 17:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('6', 'Michael', 'Martinez', 'michael.martinez@example.com', 90.50, '2021-10-20 20:15:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('7', 'Olivia', 'Garcia', 'olivia.garcia@example.com', 180.25, '2021-10-21 22:45:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('8', 'James', 'White', 'james.white@example.com', 130.75, '2021-10-22 08:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('9', 'Sophia', 'Thomas', 'sophia.thomas@example.com', 95.20, '2021-10-23 11:00:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('10', 'Daniel', 'Hernandez', 'daniel.hernandez@example.com', 200.00, '2021-10-24 14:20:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('11', 'Ava', 'Lopez', 'ava.lopez@example.com', 110.50, '2021-10-25 16:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('12', 'Ethan', 'Gonzalez', 'ethan.gonzalez@example.com', 75.75, '2021-10-26 19:45:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('13', 'Mia', 'Rodriguez', 'mia.rodriguez@example.com', 160.25, '2021-10-27 21:00:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('14', 'Benjamin', 'Perez', 'benjamin.perez@example.com', 85.90, '2021-10-28 09:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('15', 'Harper', 'Ramirez', 'harper.ramirez@example.com', 130.00, '2021-10-29 12:40:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('16', 'Evelyn', 'Taylor', 'evelyn.taylor@example.com', 70.50, '2021-10-30 15:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('17', 'Mason', 'Martinez', 'mason.martinez@example.com', 190.25, '2021-10-31 18:20:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('18', 'Aria', 'Gomez', 'aria.gomez@example.com', 115.75, '2021-11-01 21:10:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('19', 'Elijah', 'Davis', 'elijah.davis@example.com', 95.20, '2021-11-02 11:45:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('20', 'Scarlett', 'Martinez', 'scarlett.martinez@example.com', 180.00, '2021-11-03 14:30:00')",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('1', 'John', 'Doe', 'john.doe@example.com', 100.50, '2022-05-01') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('2', 'Alice', 'Smith', 'alice.smith@example.com', 200.75, '2022-06-15') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('3', 'Bob', 'Johnson', 'bob.johnson@example.com', 150.25, '2022-04-10') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('4', 'Mary', 'Brown', 'mary.brown@example.com', 300.35, '2022-03-20') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('5', 'Emily', 'Wilson', 'emily.wilson@example.com', 250.60, '2022-02-05') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('6', 'David', 'Miller', 'david.miller@example.com', 180.45, '2022-07-10') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('7', 'Sarah', 'Jones', 'sarah.jones@example.com', 120.30, '2022-01-15') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('8', 'Michael', 'Davis', 'michael.davis@example.com', 280.50, '2022-08-20') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('9', 'Karen', 'Martinez', 'karen.martinez@example.com', 220.70, '2022-10-05') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('10', 'Peter', 'Garcia', 'peter.garcia@example.com', 190.75, '2022-09-10') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('11', 'Linda', 'Lopez', 'linda.lopez@example.com', 260.80, '2022-12-01') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('12', 'Mark', 'Rodriguez', 'mark.rodriguez@example.com', 150.90, '2022-11-15') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('13', 'Julia', 'Perez', 'julia.perez@example.com', 180.25, '2022-05-20') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('14', 'Chris', 'Torres', 'chris.torres@example.com', 210.35, '2022-07-25') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('15', 'Megan', 'Hernandez', 'megan.hernandez@example.com', 230.45, '2022-09-30') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('16', 'Steven', 'Gonzalez', 'steven.gonzalez@example.com', 280.55, '2022-11-05') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('17', 'Hannah', 'Ramos', 'hannah.ramos@example.com', 310.70, '2022-12-10') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('18', 'Ryan', 'Sanchez', 'ryan.sanchez@example.com', 330.80, '2022-01-20') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('19', 'Nicole', 'Morales', 'nicole.morales@example.com', 370.90, '2022-02-25') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customer_spending_patterns (\n    customer_id UUID,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    email VARCHAR,\n    total_spending DECIMAL,\n    last_purchase_date TIMESTAMP\n)\n\n### STATEMENT\n\nINSERT INTO customer_spending_patterns (customer_id, first_name, last_name, email, total_spending, last_purchase_date) VALUES ('20', 'Jacob', 'Gomez', 'jacob.gomez@example.com', 390.95, '2022-03-30') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, total_spending = excluded.total_spending, last_purchase_date = excluded.last_purchase_date",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (1, 'Alice', 'alice@example.com', 1000.00, '2022-01-01') ON CONFLICT (customer_id) DO UPDATE SET name = 'Alice', email = 'alice@example.com', account_balance = 1000.00, last_transaction_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (2, 'Bob', 'bob@example.com', 2000.00, '2022-01-02') ON CONFLICT (customer_id) DO UPDATE SET name = 'Bob', email = 'bob@example.com', account_balance = 2000.00, last_transaction_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (3, 'Charlie', 'charlie@example.com', 3000.00, '2022-01-03') ON CONFLICT (customer_id) DO UPDATE SET name = 'Charlie', email = 'charlie@example.com', account_balance = 3000.00, last_transaction_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (4, 'David', 'david@example.com', 4000.00, '2022-01-04') ON CONFLICT (customer_id) DO UPDATE SET name = 'David', email = 'david@example.com', account_balance = 4000.00, last_transaction_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (5, 'Eve', 'eve@example.com', 5000.00, '2022-01-05') ON CONFLICT (customer_id) DO UPDATE SET name = 'Eve', email = 'eve@example.com', account_balance = 5000.00, last_transaction_date = '2022-01-05';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (6, 'Frank', 'frank@example.com', 6000.00, '2022-01-06') ON CONFLICT (customer_id) DO UPDATE SET name = 'Frank', email = 'frank@example.com', account_balance = 6000.00, last_transaction_date = '2022-01-06';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (7, 'Grace', 'grace@example.com', 7000.00, '2022-01-07') ON CONFLICT (customer_id) DO UPDATE SET name = 'Grace', email = 'grace@example.com', account_balance = 7000.00, last_transaction_date = '2022-01-07';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (8, 'Henry', 'henry@example.com', 8000.00, '2022-01-08') ON CONFLICT (customer_id) DO UPDATE SET name = 'Henry', email = 'henry@example.com', account_balance = 8000.00, last_transaction_date = '2022-01-08';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (9, 'Ivy', 'ivy@example.com', 9000.00, '2022-01-09') ON CONFLICT (customer_id) DO UPDATE SET name = 'Ivy', email = 'ivy@example.com', account_balance = 9000.00, last_transaction_date = '2022-01-09';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (10, 'Jack', 'jack@example.com', 10000.00, '2022-01-10') ON CONFLICT (customer_id) DO UPDATE SET name = 'Jack', email = 'jack@example.com', account_balance = 10000.00, last_transaction_date = '2022-01-10';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (11, 'Kate', 'kate@example.com', 11000.00, '2022-01-11') ON CONFLICT (customer_id) DO UPDATE SET name = 'Kate', email = 'kate@example.com', account_balance = 11000.00, last_transaction_date = '2022-01-11';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (12, 'Liam', 'liam@example.com', 12000.00, '2022-01-12') ON CONFLICT (customer_id) DO UPDATE SET name = 'Liam', email = 'liam@example.com', account_balance = 12000.00, last_transaction_date = '2022-01-12';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (13, 'Mia', 'mia@example.com', 13000.00, '2022-01-13') ON CONFLICT (customer_id) DO UPDATE SET name = 'Mia', email = 'mia@example.com', account_balance = 13000.00, last_transaction_date = '2022-01-13';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (14, 'Noah', 'noah@example.com', 14000.00, '2022-01-14') ON CONFLICT (customer_id) DO UPDATE SET name = 'Noah', email = 'noah@example.com', account_balance = 14000.00, last_transaction_date = '2022-01-14';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (15, 'Olivia', 'olivia@example.com', 15000.00, '2022-01-15') ON CONFLICT (customer_id) DO UPDATE SET name = 'Olivia', email = 'olivia@example.com', account_balance = 15000.00, last_transaction_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (16, 'Peter', 'peter@example.com', 16000.00, '2022-01-16') ON CONFLICT (customer_id) DO UPDATE SET name = 'Peter', email = 'peter@example.com', account_balance = 16000.00, last_transaction_date = '2022-01-16';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (17, 'Quinn', 'quinn@example.com', 17000.00, '2022-01-17') ON CONFLICT (customer_id) DO UPDATE SET name = 'Quinn', email = 'quinn@example.com', account_balance = 17000.00, last_transaction_date = '2022-01-17';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (18, 'Ryan', 'ryan@example.com', 18000.00, '2022-01-18') ON CONFLICT (customer_id) DO UPDATE SET name = 'Ryan', email = 'ryan@example.com', account_balance = 18000.00, last_transaction_date = '2022-01-18';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (19, 'Sarah', 'sarah@example.com', 19000.00, '2022-01-19') ON CONFLICT (customer_id) DO UPDATE SET name = 'Sarah', email = 'sarah@example.com', account_balance = 19000.00, last_transaction_date = '2022-01-19';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (20, 'Tom', 'tom@example.com', 20000.00, '2022-01-20') ON CONFLICT (customer_id) DO UPDATE SET name = 'Tom', email = 'tom@example.com', account_balance = 20000.00, last_transaction_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (1, 'Alice', 'alice@example.com', 1000.00, '2022-01-01') ON DUPLICATE KEY UPDATE name = 'Alice', email = 'updated@example.com', account_balance = account_balance + 500.00, last_transaction_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (2, 'Bob', 'bob@example.com', 2000.00, '2022-01-02') ON DUPLICATE KEY UPDATE name = 'Bob', email = 'updated@example.com', account_balance = account_balance + 1000.00, last_transaction_date = '2022-02-02';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) VALUES (3, 'Charlie', 'charlie@example.com', 3000.00, '2022-01-03') ON DUPLICATE KEY UPDATE name = 'Charlie', email = 'updated@example.com', account_balance = account_balance + 1500.00, last_transaction_date = '2022-02-03';",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    name VARCHAR(50), \n    email VARCHAR(50), \n    account_balance DECIMAL(10, 2), \n    last_transaction_date DATE \n)\n\nCREATE TABLE transactions ( \n    transaction_id INT PRIMARY KEY, \n    customer_id INT, \n    transaction_amount DECIMAL(10, 2), \n    transaction_date DATE, \n    category VARCHAR(50) \n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, name, email, account_balance, last_transaction_date) ...",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (1, 'Alice', 'alice@example.com', 30) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (2, 'Bob', 'bob@example.com', 25) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (3, 'Charlie', 'charlie@example.com', 35) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (4, 'David', 'david@example.com', 28) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (5, 'Eve', 'eve@example.com', 32) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (6, 'Frank', 'frank@example.com', 27) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (7, 'Grace', 'grace@example.com', 29) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (8, 'Henry', 'henry@example.com', 31) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (9, 'Ivy', 'ivy@example.com', 26) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (10, 'Joe', 'joe@example.com', 33) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (11, 'Kate', 'kate@example.com', 34) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (12, 'Liam', 'liam@example.com', 23) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (13, 'Mia', 'mia@example.com', 40) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (14, 'Noah', 'noah@example.com', 22) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (15, 'Olivia', 'olivia@example.com', 37) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (16, 'Peter', 'peter@example.com', 29) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (17, 'Queenie', 'queenie@example.com', 31) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (18, 'Ryan', 'ryan@example.com', 26) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (19, 'Sarah', 'sarah@example.com', 30) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (20, 'Tom', 'tom@example.com', 28) ON CONFLICT (customer_id) DO UPDATE SET customer_name=excluded.customer_name, customer_email=excluded.customer_email, customer_age=excluded.customer_age;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (1, 'Alice', 'alice@example.com', 30) ON DUPLICATE KEY UPDATE customer_name = 'Alice', customer_email = 'alice@example.com', customer_age = 30;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (2, 'Bob', 'bob@example.com', 35) ON DUPLICATE KEY UPDATE customer_name = 'Bob', customer_email = 'bob@example.com', customer_age = 35;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (1, 1, 100.00, '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE amount = 100.00, transaction_date = '2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (2, 2, 150.50, '2022-01-02 15:30:00') ON DUPLICATE KEY UPDATE amount = 150.50, transaction_date = '2022-01-02 15:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (1, 1, 'Great customer!', '2022-01-05 12:00:00') ON DUPLICATE KEY UPDATE recommendation_text = 'Great customer!', recommendation_date = '2022-01-05 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (2, 2, 'Excellent service!', '2022-01-10 09:30:00') ON DUPLICATE KEY UPDATE recommendation_text = 'Excellent service!', recommendation_date = '2022-01-10 09:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (3, 'Charlie', 'charlie@example.com', 25) ON DUPLICATE KEY UPDATE customer_name = 'Charlie', customer_email = 'charlie@example.com', customer_age = 25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (4, 'David', 'david@example.com', 40) ON DUPLICATE KEY UPDATE customer_name = 'David', customer_email = 'david@example.com', customer_age = 40;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (3, 1, 75.25, '2022-01-15 08:45:00') ON DUPLICATE KEY UPDATE amount = 75.25, transaction_date = '2022-01-15 08:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (4, 2, 200.75, '2022-01-20 14:20:00') ON DUPLICATE KEY UPDATE amount = 200.75, transaction_date = '2022-01-20 14:20:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (3, 1, 'Highly recommended!', '2022-01-25 11:10:00') ON DUPLICATE KEY UPDATE recommendation_text = 'Highly recommended!', recommendation_date = '2022-01-25 11:10:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (4, 2, 'Wonderful experience!', '2022-01-30 10:00:00') ON DUPLICATE KEY UPDATE recommendation_text = 'Wonderful experience!', recommendation_date = '2022-01-30 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (5, 'Eve', 'eve@example.com', 28) ON DUPLICATE KEY UPDATE customer_name = 'Eve', customer_email = 'eve@example.com', customer_age = 28;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (6, 'Frank', 'frank@example.com', 32) ON DUPLICATE KEY UPDATE customer_name = 'Frank', customer_email = 'frank@example.com', customer_age = 32;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (5, 1, 120.00, '2022-02-05 09:15:00') ON DUPLICATE KEY UPDATE amount = 120.00, transaction_date = '2022-02-05 09:15:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, customer_id, amount, transaction_date) VALUES (6, 2, 180.25, '2022-02-10 13:45:00') ON DUPLICATE KEY UPDATE amount = 180.25, transaction_date = '2022-02-10 13:45:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (5, 1, 'Amazing service!', '2022-02-15 14:30:00') ON DUPLICATE KEY UPDATE recommendation_text = 'Amazing service!', recommendation_date = '2022-02-15 14:30:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO recommendations (recommendation_id, customer_id, recommendation_text, recommendation_date) VALUES (6, 2, 'Top notch!', '2022-02-20 16:00:00') ON DUPLICATE KEY UPDATE recommendation_text = 'Top notch!', recommendation_date = '2022-02-20 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (7, 'Grace', 'grace@example.com', 35) ON DUPLICATE KEY UPDATE customer_name = 'Grace', customer_email = 'grace@example.com', customer_age = 35;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    customer_age INT\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT,\n    recommendation_date TIMESTAMP,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email, customer_age) VALUES (8, 'Henry', 'henry@example.com', 42) ON DUPLICATE KEY UPDATE customer_name = 'Henry', customer_email = 'henry@example.com', customer_age = 42;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (1, 'John Doe', 25, 'Male', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name='John Doe', age=25, gender='Male', email='john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (2, 'Jane Smith', 30, 'Female', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', age=30, gender='Female', email='jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (3, 'Alice Johnson', 22, 'Female', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', age=22, gender='Female', email='alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (4, 'Bob Brown', 40, 'Male', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name='Bob Brown', age=40, gender='Male', email='bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (5, 'Eva Williams', 35, 'Female', 'eva.williams@example.com') ON DUPLICATE KEY UPDATE customer_name='Eva Williams', age=35, gender='Female', email='eva.williams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (6, 'Michael Lee', 28, 'Male', 'michael.lee@example.com') ON DUPLICATE KEY UPDATE customer_name='Michael Lee', age=28, gender='Male', email='michael.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (7, 'Sarah Davis', 45, 'Female', 'sarah.davis@example.com') ON DUPLICATE KEY UPDATE customer_name='Sarah Davis', age=45, gender='Female', email='sarah.davis@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (8, 'Alex Miller', 33, 'Male', 'alex.miller@example.com') ON DUPLICATE KEY UPDATE customer_name='Alex Miller', age=33, gender='Male', email='alex.miller@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (9, 'Olivia White', 29, 'Female', 'olivia.white@example.com') ON DUPLICATE KEY UPDATE customer_name='Olivia White', age=29, gender='Female', email='olivia.white@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (10, 'William Clark', 50, 'Male', 'william.clark@example.com') ON DUPLICATE KEY UPDATE customer_name='William Clark', age=50, gender='Male', email='william.clark@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (11, 'Sophia Garcia', 27, 'Female', 'sophia.garcia@example.com') ON DUPLICATE KEY UPDATE customer_name='Sophia Garcia', age=27, gender='Female', email='sophia.garcia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (12, 'Daniel Martinez', 32, 'Male', 'daniel.martinez@example.com') ON DUPLICATE KEY UPDATE customer_name='Daniel Martinez', age=32, gender='Male', email='daniel.martinez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (13, 'Emma Taylor', 38, 'Female', 'emma.taylor@example.com') ON DUPLICATE KEY UPDATE customer_name='Emma Taylor', age=38, gender='Female', email='emma.taylor@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (14, 'Henry Anderson', 42, 'Male', 'henry.anderson@example.com') ON DUPLICATE KEY UPDATE customer_name='Henry Anderson', age=42, gender='Male', email='henry.anderson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (15, 'Grace Hernandez', 31, 'Female', 'grace.hernandez@example.com') ON DUPLICATE KEY UPDATE customer_name='Grace Hernandez', age=31, gender='Female', email='grace.hernandez@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (16, 'Nathan Young', 26, 'Male', 'nathan.young@example.com') ON DUPLICATE KEY UPDATE customer_name='Nathan Young', age=26, gender='Male', email='nathan.young@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (17, 'Lily Robinson', 41, 'Female', 'lily.robinson@example.com') ON DUPLICATE KEY UPDATE customer_name='Lily Robinson', age=41, gender='Female', email='lily.robinson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (18, 'Kevin Moore', 34, 'Male', 'kevin.moore@example.com') ON DUPLICATE KEY UPDATE customer_name='Kevin Moore', age=34, gender='Male', email='kevin.moore@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (19, 'Lucy Adams', 37, 'Female', 'lucy.adams@example.com') ON DUPLICATE KEY UPDATE customer_name='Lucy Adams', age=37, gender='Female', email='lucy.adams@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (20, 'Tom Wilson', 44, 'Male', 'tom.wilson@example.com') ON DUPLICATE KEY UPDATE customer_name='Tom Wilson', age=44, gender='Male', email='tom.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (1, 'Alice', 30, 'Female', 'alice@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice', age = 30, gender = 'Female', email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (2, 'Bob', 35, 'Male', 'bob@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob', age = 35, gender = 'Male', email = 'bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (3, 'Charlie', 25, 'Male', 'charlie@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Charlie', age = 25, gender = 'Male', email = 'charlie@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (4, 'David', 28, 'Male', 'david@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'David', age = 28, gender = 'Male', email = 'david@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (5, 'Eve', 22, 'Female', 'eve@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Eve', age = 22, gender = 'Female', email = 'eve@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (6, 'Frank', 40, 'Male', 'frank@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Frank', age = 40, gender = 'Male', email = 'frank@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (7, 'Grace', 32, 'Female', 'grace@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Grace', age = 32, gender = 'Female', email = 'grace@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (8, 'Harry', 45, 'Male', 'harry@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Harry', age = 45, gender = 'Male', email = 'harry@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (9, 'Ivy', 27, 'Female', 'ivy@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Ivy', age = 27, gender = 'Female', email = 'ivy@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (10, 'Jack', 33, 'Male', 'jack@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jack', age = 33, gender = 'Male', email = 'jack@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (11, 'Kelly', 29, 'Female', 'kelly@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Kelly', age = 29, gender = 'Female', email = 'kelly@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (12, 'Leo', 36, 'Male', 'leo@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Leo', age = 36, gender = 'Male', email = 'leo@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (13, 'Mia', 24, 'Female', 'mia@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Mia', age = 24, gender = 'Female', email = 'mia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (14, 'Nathan', 41, 'Male', 'nathan@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Nathan', age = 41, gender = 'Male', email = 'nathan@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (15, 'Olivia', 31, 'Female', 'olivia@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Olivia', age = 31, gender = 'Female', email = 'olivia@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (16, 'Peter', 38, 'Male', 'peter@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Peter', age = 38, gender = 'Male', email = 'peter@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (17, 'Quinn', 26, 'Female', 'quinn@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Quinn', age = 26, gender = 'Female', email = 'quinn@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (18, 'Ryan', 34, 'Male', 'ryan@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Ryan', age = 34, gender = 'Male', email = 'ryan@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (19, 'Sam', 39, 'Male', 'sam@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sam', age = 39, gender = 'Male', email = 'sam@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n  customer_id INT PRIMARY KEY,\n  customer_name VARCHAR(50),\n  age INT,\n  gender VARCHAR(10),\n  email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  customer_id INT REFERENCES customers(customer_id),\n  amount DECIMAL(10,2),\n  date DATE\n)\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(50)\n)\n\nCREATE TABLE customer_categories (\n  customer_id INT REFERENCES customers(customer_id),\n  category_id INT REFERENCES categories(category_id)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, age, gender, email) VALUES (20, 'Tina', 28, 'Female', 'tina@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Tina', age = 28, gender = 'Female', email = 'tina@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (1, 'Alice', 30, 'Female', 'alice@example.com') ON DUPLICATE KEY UPDATE customer_name='Alice', customer_age=30, customer_gender='Female', customer_email='alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (1, 1, '2022-01-01', 100.00, 'Groceries') ON DUPLICATE KEY UPDATE customer_id=1, transaction_date='2022-01-01', amount=100.00, category='Groceries';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (1, 'Food') ON DUPLICATE KEY UPDATE category_name='Food';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO recommendations (recommendation_id, customer_id, recommendation_text) VALUES (1, 1, 'Try our new product!') ON DUPLICATE KEY UPDATE customer_id=1, recommendation_text='Try our new product!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO finances (finance_id, customer_id, total_savings, total_investments) VALUES (1, 1, 5000.00, 10000.00) ON DUPLICATE KEY UPDATE customer_id=1, total_savings=5000.00, total_investments=10000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (2, 'Bob', 35, 'Male', 'bob@example.com') ON DUPLICATE KEY UPDATE customer_name='Bob', customer_age=35, customer_gender='Male', customer_email='bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (2, 2, '2022-01-02', 50.00, 'Clothing') ON DUPLICATE KEY UPDATE customer_id=2, transaction_date='2022-01-02', amount=50.00, category='Clothing';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (2, 'Clothing') ON DUPLICATE KEY UPDATE category_name='Clothing';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO recommendations (recommendation_id, customer_id, recommendation_text) VALUES (2, 2, 'Check out our special offers!') ON DUPLICATE KEY UPDATE customer_id=2, recommendation_text='Check out our special offers!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO finances (finance_id, customer_id, total_savings, total_investments) VALUES (2, 2, 8000.00, 15000.00) ON DUPLICATE KEY UPDATE customer_id=2, total_savings=8000.00, total_investments=15000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (3, 'Carol', 25, 'Female', 'carol@example.com') ON DUPLICATE KEY UPDATE customer_name='Carol', customer_age=25, customer_gender='Female', customer_email='carol@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (3, 3, '2022-01-03', 200.00, 'Electronics') ON DUPLICATE KEY UPDATE customer_id=3, transaction_date='2022-01-03', amount=200.00, category='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (3, 'Electronics') ON DUPLICATE KEY UPDATE category_name='Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO recommendations (recommendation_id, customer_id, recommendation_text) VALUES (3, 3, 'Explore our latest products!') ON DUPLICATE KEY UPDATE customer_id=3, recommendation_text='Explore our latest products!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO finances (finance_id, customer_id, total_savings, total_investments) VALUES (3, 3, 6000.00, 12000.00) ON DUPLICATE KEY UPDATE customer_id=3, total_savings=6000.00, total_investments=12000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (1, 'Alice', 30, 'Female', 'alice@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice', customer_age = 30, customer_gender = 'Female', customer_email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (1, 1, '2022-01-01', 100.00, 'Groceries') ON DUPLICATE KEY UPDATE transaction_date = '2022-01-01', amount = 100.00, category = 'Groceries';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (1, 'Food') ON DUPLICATE KEY UPDATE category_name = 'Food';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO recommendations (recommendation_id, customer_id, recommendation_text) VALUES (1, 1, 'Try our new products!') ON DUPLICATE KEY UPDATE recommendation_text = 'Try our new products!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO finances (finance_id, customer_id, total_savings, total_investments) VALUES (1, 1, 5000.00, 10000.00) ON DUPLICATE KEY UPDATE total_savings = 5000.00, total_investments = 10000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (2, 'Bob', 35, 'Male', 'bob@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob', customer_age = 35, customer_gender = 'Male', customer_email = 'bob@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (2, 2, '2022-01-02', 50.00, 'Shopping') ON DUPLICATE KEY UPDATE transaction_date = '2022-01-02', amount = 50.00, category = 'Shopping';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (2, 'Clothing') ON DUPLICATE KEY UPDATE category_name = 'Clothing';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO recommendations (recommendation_id, customer_id, recommendation_text) VALUES (2, 2, 'Enjoy our special discounts!') ON DUPLICATE KEY UPDATE recommendation_text = 'Enjoy our special discounts!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO finances (finance_id, customer_id, total_savings, total_investments) VALUES (2, 2, 7000.00, 12000.00) ON DUPLICATE KEY UPDATE total_savings = 7000.00, total_investments = 12000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (3, 'Charlie', 40, 'Male', 'charlie@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Charlie', customer_age = 40, customer_gender = 'Male', customer_email = 'charlie@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (3, 3, '2022-01-03', 75.00, 'Dining') ON DUPLICATE KEY UPDATE transaction_date = '2022-01-03', amount = 75.00, category = 'Dining';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (3, 'Restaurant') ON DUPLICATE KEY UPDATE category_name = 'Restaurant';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO recommendations (recommendation_id, customer_id, recommendation_text) VALUES (3, 3, 'Discover new dining experiences!') ON DUPLICATE KEY UPDATE recommendation_text = 'Discover new dining experiences!';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO finances (finance_id, customer_id, total_savings, total_investments) VALUES (3, 3, 6000.00, 15000.00) ON DUPLICATE KEY UPDATE total_savings = 6000.00, total_investments = 15000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_age, customer_gender, customer_email) VALUES (4, 'David', 45, 'Male', 'david@example.com') ON DUPLICATE KEY UPDATE customer_name = 'David', customer_age = 45, customer_gender = 'Male', customer_email = 'david@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, amount, category) VALUES (4, 4, '2022-01-04', 120.00, 'Electronics') ON DUPLICATE KEY UPDATE transaction_date = '2022-01-04', amount = 120.00, category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_age INT,\n    customer_gender VARCHAR(10),\n    customer_email VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date DATE,\n    amount DECIMAL(10,2),\n    category VARCHAR(50)\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(50)\n)\n\nCREATE TABLE recommendations (\n    recommendation_id INT PRIMARY KEY,\n    customer_id INT,\n    recommendation_text TEXT\n)\n\nCREATE TABLE finances (\n    finance_id INT PRIMARY KEY,\n    customer_id INT,\n    total_savings DECIMAL(10,2),\n    total_investments DECIMAL(10,2)\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (4, 'Technology') ON DUPLICATE KEY UPDATE category_name = 'Technology';"
]