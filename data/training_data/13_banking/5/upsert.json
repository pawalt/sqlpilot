[
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (1, 1001, '2022-01-01', 'Purchase 1', 50.00, 1000.00);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (2, 1002, '2022-01-02', 'Purchase 2', 70.50, 800.50);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (3, 1003, '2022-01-03', 'Purchase 3', 35.75, 200.25);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (4, 1004, '2022-01-04', 'Purchase 4', 90.20, 1200.45);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (5, 1005, '2022-01-05', 'Purchase 5', 25.50, 500.50);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (6, 1001, '2022-02-01', 'Purchase 6', 60.00, 940.00);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (7, 1002, '2022-02-02', 'Purchase 7', 40.75, 759.75);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (8, 1003, '2022-02-03', 'Purchase 8', 80.90, 281.15);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (9, 1004, '2022-02-04', 'Purchase 9', 15.25, 1215.20);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (10, 1005, '2022-02-05', 'Purchase 10', 70.00, 570.50);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (11, 1001, '2022-03-01', 'Purchase 11', 90.50, 849.50);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (12, 1002, '2022-03-02', 'Purchase 12', 45.25, 714.50);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (13, 1003, '2022-03-03', 'Purchase 13', 30.00, 311.15);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (14, 1004, '2022-03-04', 'Purchase 14', 55.75, 1271.95);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (15, 1005, '2022-03-05', 'Purchase 15', 20.25, 590.25);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (16, 1001, '2022-04-01', 'Purchase 16', 35.20, 814.30);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (17, 1002, '2022-04-02', 'Purchase 17', 75.00, 639.50);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (18, 1003, '2022-04-03', 'Purchase 18', 65.75, 245.40);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (19, 1004, '2022-04-04', 'Purchase 19', 40.25, 1311.20);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (20, 1005, '2022-04-05', 'Purchase 20', 50.00, 640.25);",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (1, 101, '2022-01-01', 'Purchase at Store', 100.00, 900.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 101, month_year = '2022-01-01', transaction_description = 'Purchase at Store', transaction_amount = 100.00, account_balance = 900.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (2, 102, '2022-01-02', 'Online Payment', 50.00, 950.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 102, month_year = '2022-01-02', transaction_description = 'Online Payment', transaction_amount = 50.00, account_balance = 950.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (3, 103, '2022-01-03', 'Utility Bill Payment', 80.00, 920.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 103, month_year = '2022-01-03', transaction_description = 'Utility Bill Payment', transaction_amount = 80.00, account_balance = 920.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (4, 104, '2022-01-04', 'Salary Deposit', 1500.00, 2420.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 104, month_year = '2022-01-04', transaction_description = 'Salary Deposit', transaction_amount = 1500.00, account_balance = 2420.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (5, 105, '2022-01-05', 'Grocery Shopping', 75.00, 2345.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 105, month_year = '2022-01-05', transaction_description = 'Grocery Shopping', transaction_amount = 75.00, account_balance = 2345.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (6, 101, '2022-02-01', 'Dining Out', 45.00, 190.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 101, month_year = '2022-02-01', transaction_description = 'Dining Out', transaction_amount = 45.00, account_balance = 190.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (7, 102, '2022-02-02', 'Entertainment Expenses', 120.00, 830.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 102, month_year = '2022-02-02', transaction_description = 'Entertainment Expenses', transaction_amount = 120.00, account_balance = 830.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (8, 103, '2022-02-03', 'Clothing Purchase', 60.00, 730.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 103, month_year = '2022-02-03', transaction_description = 'Clothing Purchase', transaction_amount = 60.00, account_balance = 730.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (9, 104, '2022-02-04', 'Car Fuel Refill', 40.00, 1380.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 104, month_year = '2022-02-04', transaction_description = 'Car Fuel Refill', transaction_amount = 40.00, account_balance = 1380.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (10, 105, '2022-02-05', 'Movie Tickets', 25.00, 2320.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 105, month_year = '2022-02-05', transaction_description = 'Movie Tickets', transaction_amount = 25.00, account_balance = 2320.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (11, 101, '2022-03-01', 'House Rent Payment', 800.00, 1000.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 101, month_year = '2022-03-01', transaction_description = 'House Rent Payment', transaction_amount = 800.00, account_balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (12, 102, '2022-03-02', 'Mobile Phone Bill', 30.00, 860.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 102, month_year = '2022-03-02', transaction_description = 'Mobile Phone Bill', transaction_amount = 30.00, account_balance = 860.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (13, 103, '2022-03-03', 'Gym Membership Renewal', 50.00, 680.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 103, month_year = '2022-03-03', transaction_description = 'Gym Membership Renewal', transaction_amount = 50.00, account_balance = 680.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (14, 104, '2022-03-04', 'Travel Expenses', 120.00, 1490.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 104, month_year = '2022-03-04', transaction_description = 'Travel Expenses', transaction_amount = 120.00, account_balance = 1490.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (15, 105, '2022-03-05', 'Online Shopping', 70.00, 2250.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 105, month_year = '2022-03-05', transaction_description = 'Online Shopping', transaction_amount = 70.00, account_balance = 2250.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (16, 101, '2022-04-01', 'Medical Expenses', 90.00, 910.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 101, month_year = '2022-04-01', transaction_description = 'Medical Expenses', transaction_amount = 90.00, account_balance = 910.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (17, 102, '2022-04-02', 'Home Improvement Costs', 150.00, 710.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 102, month_year = '2022-04-02', transaction_description = 'Home Improvement Costs', transaction_amount = 150.00, account_balance = 710.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (18, 103, '2022-04-03', 'School Fees Payment', 200.00, 480.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 103, month_year = '2022-04-03', transaction_description = 'School Fees Payment', transaction_amount = 200.00, account_balance = 480.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (19, 104, '2022-04-04', 'Electronics Purchase', 300.00, 1190.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 104, month_year = '2022-04-04', transaction_description = 'Electronics Purchase', transaction_amount = 300.00, account_balance = 1190.00;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT,\n    month_year DATE,\n    transaction_description TEXT,\n    transaction_amount DECIMAL,\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, customer_id, month_year, transaction_description, transaction_amount, account_balance) VALUES (20, 105, '2022-04-05', 'Gift Shopping', 50.00, 2200.00) ON CONFLICT (statement_id) DO UPDATE SET customer_id = 105, month_year = '2022-04-05', transaction_description = 'Gift Shopping', transaction_amount = 50.00, account_balance = 2200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'Alice', 'alice@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Bob', 'bob@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Charlie', 'charlie@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'David', 'david@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (5, 'Eve', 'eve@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (6, 'Frank', 'frank@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (7, 'Grace', 'grace@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (8, 'Henry', 'henry@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (9, 'Ivy', 'ivy@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (10, 'Jack', 'jack@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (11, 'Kelly', 'kelly@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (12, 'Liam', 'liam@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (13, 'Mia', 'mia@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (14, 'Nora', 'nora@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (15, 'Owen', 'owen@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (16, 'Penny', 'penny@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (17, 'Quinn', 'quinn@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (18, 'Ryan', 'ryan@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (19, 'Sara', 'sara@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (20, 'Tom', 'tom@example.com')",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email) VALUES (2, 'Alice Smith', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith', customer_email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email) VALUES (3, 'Bob Johnson', 'bob.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob Johnson', customer_email = 'bob.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email) VALUES (4, 'Emily Brown', 'emily.brown@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Emily Brown', customer_email = 'emily.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT NOT NULL,\n    transaction_date DATE NOT NULL,\n    transaction_type VARCHAR(50) NOT NULL,\n    transaction_amount DECIMAL(10,2) NOT NULL,\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_nam...",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Alice Smith', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith', customer_email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob Brown', customer_email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'Lisa Johnson', 'lisa.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Lisa Johnson', customer_email = 'lisa.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (5, 'Mike Wilson', 'mike.wilson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Mike Wilson', customer_email = 'mike.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nUPS...]}  # I will now generate 20 example UPSERT SQL statements for the given database schema. Let's start with a few examples. 1. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john.doe@example.com'; 2. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Alice Smith', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alice Smith', customer_email = 'alice.smith@example.com'; 3. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Bob Brown', customer_email = 'bob.brown@example.com'; 4. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'Lisa Johnson', 'lisa.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Lisa Johnson', customer_email = 'lisa.johnson@example.com'; 5. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (5, 'Mike Wilson', 'mike.wilson@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Mike Wilson', customer_email = 'mike.wilson@example.com'; 6. UPS...  (Truncated) 7. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (7, 'Sarah Davis', 'sarah.davis@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Sarah Davis', customer_email = 'sarah.davis@example.com'; 8. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (8, 'Chris Lee', 'chris.lee@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Chris Lee', customer_email = 'chris.lee@example.com'; 9. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (9, 'Emily Clark', 'emily.clark@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Emily Clark', customer_email = 'emily.clark@example.com'; 10. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (10, 'Eric Adams', 'eric.adams@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Eric Adams', customer_email = 'eric.adams@example.com';... (Truncated) 11. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (11, 'Alex Turner', 'alex.turner@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alex Turner', customer_email = 'alex.turner@example.com'; 12. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (12, 'Grace Moore', 'grace.moore@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Grace Moore', customer_email = 'grace.moore@example.com'; 13. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (13, 'Kevin Hill', 'kevin.hill@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Kevin Hill', customer_email = 'kevin.hill@example.com'; 14. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (14, 'Hannah Baker', 'hannah.baker@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Hannah Baker', cu... (Truncated) 15. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (15, 'Steve Miller', 'steve.miller@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Steve Miller', customer_email = 'steve.miller@example.com'; 16. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (16, 'Olivia Davis', 'olivia.davis@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Olivia Davis', customer_email = 'olivia.davis@example.com'; 17. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (17, 'Peter Young', 'peter.young@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Peter Young', customer_email = 'peter.young@example.com'; 18. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (18, 'Julia Roberts', 'julia.roberts@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Julia Roberts', customer_email = 'julia.roberts@example.com'; 19. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (19, 'Michael Adams', 'michael.adams@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Michael Adams', customer_email = 'michael.adams@example.com'; 20. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (20, 'Amanda Collins', 'amanda.collins@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Amanda Collins', customer_email = 'amanda.collins@example.com';  Let me know if you need any modifications or more examples.  So, these are 20 example UPSERT SQL statements for the 'customers' table in the given database schema. Each statement attempts to insert a new record into the 'customers' table, and if a conflict occurs on the primary key (customer_id), it updates the existing record with the specified values. If you have any specific requirements or need more examples, feel free to let me know.  Would you like to see examples for the 'transactions' or 'account_balances' tables as well?  If you have any specific requirements or need more examples, feel free to let me know.  Would you like to see examples for the 'transactions' or 'account_balances' tables as well?  Feel free to ask!  So, these are 20 example UPSERT SQL statements for the 'customers' table in the given database schema. Each statement attempts to insert a new record into the 'customers' table, and if a conflict occurs on the primary key (customer_id), it updates the existing record with the specified values. If you have any specific requirements or need more examples, feel free to let me know.  Would you like to see examples for the 'transactions' or 'account_balances' tables as well?  Feel free to ask!  Would you like to see examples for the 'transactions' or 'account_balances' tables as well?  Feel free to ask!  Let me know if you need any modifications or more examples.  So, these are 20 example UPSERT SQL statements for the 'customers' table in the given database schema. Each statement attempts to insert a... (Truncated) 11. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (11, 'Alex Turner', 'alex.turner@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Alex Turner', customer_email = 'alex.turner@example.com'; 12. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (12, 'Grace Moore', 'grace.moore@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Grace Moore', customer_email = 'grace.moore@example.com'; 13. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (13, 'Kevin Hill', 'kevin.hill@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Kevin Hill', customer_email = 'kevin.hill@example.com'; 14. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (14, 'Hannah Baker', 'hannah.baker@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Hannah Baker', cu... (Truncated) 15. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (15, 'Steve Miller', 'steve.miller@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Steve Miller', customer_email = 'steve.miller@example.com'; 16. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (16, 'Olivia Davis', 'olivia.davis@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Olivia Davis', customer_email = 'olivia.davis@example.com'; 17. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (17, 'Peter Young', 'peter.young@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Peter Young', customer_email = 'peter.young@example.com'; 18. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (18, 'Julia Roberts', 'julia.roberts@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Julia Roberts', customer_email = 'julia.roberts@example.com'; 19. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (19, 'Michael Adams', 'michael.ad... (Truncated) 20. UPSERT INTO customers (customer_id, customer_name, customer_email) VALUES (20, 'Amanda Collins', 'amanda.collins@example.com') ON DUPLICATE KEY UPDATE customer_name = 'Amanda Collins', customer_email = 'amanda.collins@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', customer_email='jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', customer_email='alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'Bob Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE customer_name='Bob Brown', customer_email='bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (5, 'Sarah Lee', 'sarah.lee@example.com') ON DUPLICATE KEY UPDATE customer_name='Sarah Lee', customer_email='sarah.lee@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (1, 1, '2023-05-10 08:00:00', 100.50) ON DUPLICATE KEY UPDATE transaction_date='2023-05-10 08:00:00', transaction_amount=100.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (2, 2, '2023-05-11 09:00:00', 75.25) ON DUPLICATE KEY UPDATE transaction_date='2023-05-11 09:00:00', transaction_amount=75.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (3, 3, '2023-05-12 10:00:00', 150.75) ON DUPLICATE KEY UPDATE transaction_date='2023-05-12 10:00:00', transaction_amount=150.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (4, 4, '2023-05-13 11:00:00', 200.00) ON DUPLICATE KEY UPDATE transaction_date='2023-05-13 11:00:00', transaction_amount=200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (5, 5, '2023-05-14 12:00:00', 50.00) ON DUPLICATE KEY UPDATE transaction_date='2023-05-14 12:00:00', transaction_amount=50.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (customer_id, account_balance) VALUES (1, 1000.00) ON DUPLICATE KEY UPDATE account_balance=1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (customer_id, account_balance) VALUES (2, 750.50) ON DUPLICATE KEY UPDATE account_balance=750.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (customer_id, account_balance) VALUES (3, 1500.75) ON DUPLICATE KEY UPDATE account_balance=1500.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (customer_id, account_balance) VALUES (4, 2000.25) ON DUPLICATE KEY UPDATE account_balance=2000.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT,\n    transaction_date TIMESTAMP,\n    transaction_amount DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\nCREATE TABLE account_balances (\n    customer_id INT PRIMARY KEY,\n    account_balance DECIMAL(10, 2),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (customer_id, account_balance) VALUES (5, 500.00) ON DUPLICATE KEY UPDATE account_balance=500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, customer_address) VALUES (1, 'Alice', 'alice@example.com', '123 Main St') ON DUPLICATE KEY UPDATE customer_name = 'Alice', customer_email = 'alice@example.com', customer_address = '123 Main St'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, customer_id, account_balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id = 1, account_balance = 1000.00",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_id, transaction_date, transaction_amount, transaction_type) VALUES (1, 1, '2022-01-01', 100.00, 'DEPOSIT') ON DUPLICATE KEY UPDATE account_id = 1, transaction_date = '2022-01-01', transaction_amount = 100.00, transaction_type = 'DEPOSIT'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO monthly_statements (statement_id, account_id, statement_date, statement_details) VALUES (1, 1, '2022-01-01', 'Statement details for January 2022') ON DUPLICATE KEY UPDATE account_id = 1, statement_date = '2022-01-01', statement_details = 'Statement details for January 2022'",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email, customer_address) VALUES (1, 'John Doe', 'john.doe@example.com', '123 Main St') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com', customer_address = '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO accounts(account_id, customer_id, account_balance) VALUES (1, 1, 1000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 1, account_balance = 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO transactions(transaction_id, account_id, transaction_date, transaction_amount, transaction_type) VALUES (1, 1, '2022-01-01', 100.00, 'Credit') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 1, transaction_date = '2022-01-01', transaction_amount = 100.00, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO monthly_statements(statement_id, account_id, statement_date, statement_details) VALUES (1, 1, '2022-01-01', 'Monthly statement details') ON CONFLICT (statement_id) DO UPDATE SET account_id = 1, statement_date = '2022-01-01', statement_details = 'Monthly statement details';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email, customer_address) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '456 Elm St') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', customer_email = 'jane.smith@example.com', customer_address = '456 Elm St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO accounts(account_id, customer_id, account_balance) VALUES (2, 2, 1500.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 2, account_balance = 1500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO transactions(transaction_id, account_id, transaction_date, transaction_amount, transaction_type) VALUES (2, 2, '2022-01-02', 200.00, 'Debit') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 2, transaction_date = '2022-01-02', transaction_amount = 200.00, transaction_type = 'Debit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO monthly_statements(statement_id, account_id, statement_date, statement_details) VALUES (2, 2, '2022-01-02', 'Monthly statement details') ON CONFLICT (statement_id) DO UPDATE SET account_id = 2, statement_date = '2022-01-02', statement_details = 'Monthly statement details';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email, customer_address) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '789 Oak St') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', customer_email = 'alice.johnson@example.com', customer_address = '789 Oak St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO accounts(account_id, customer_id, account_balance) VALUES (3, 3, 2000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 3, account_balance = 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO transactions(transaction_id, account_id, transaction_date, transaction_amount, transaction_type) VALUES (3, 3, '2022-01-03', 300.00, 'Credit') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 3, transaction_date = '2022-01-03', transaction_amount = 300.00, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO monthly_statements(statement_id, account_id, statement_date, statement_details) VALUES (3, 3, '2022-01-03', 'Monthly statement details') ON CONFLICT (statement_id) DO UPDATE SET account_id = 3, statement_date = '2022-01-03', statement_details = 'Monthly statement details';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email, customer_address) VALUES (4, 'Michael Brown', 'michael.brown@example.com', '321 Pine St') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Brown', customer_email = 'michael.brown@example.com', customer_address = '321 Pine St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO accounts(account_id, customer_id, account_balance) VALUES (4, 4, 2500.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 4, account_balance = 2500.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO transactions(transaction_id, account_id, transaction_date, transaction_amount, transaction_type) VALUES (4, 4, '2022-01-04', 400.00, 'Debit') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 4, transaction_date = '2022-01-04', transaction_amount = 400.00, transaction_type = 'Debit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO monthly_statements(statement_id, account_id, statement_date, statement_details) VALUES (4, 4, '2022-01-04', 'Monthly statement details') ON CONFLICT (statement_id) DO UPDATE SET account_id = 4, statement_date = '2022-01-04', statement_details = 'Monthly statement details';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers(customer_id, customer_name, customer_email, customer_address) VALUES (5, 'Sarah Wilson', 'sarah.wilson@example.com', '654 Maple St') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Wilson', customer_email = 'sarah.wilson@example.com', customer_address = '654 Maple St';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO accounts(account_id, customer_id, account_balance) VALUES (5, 5, 3000.00) ON CONFLICT (account_id) DO UPDATE SET customer_id = 5, account_balance = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO transactions(transaction_id, account_id, transaction_date, transaction_amount, transaction_type) VALUES (5, 5, '2022-01-05', 500.00, 'Credit') ON CONFLICT (transaction_id) DO UPDATE SET account_id = 5, transaction_date = '2022-01-05', transaction_amount = 500.00, transaction_type = 'Credit';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    customer_email VARCHAR(50),\n    customer_address VARCHAR(100)\n)\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_balance DECIMAL(10,2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_date DATE,\n    transaction_amount DECIMAL(10,2),\n    transaction_type VARCHAR(10)\n)\n\nCREATE TABLE monthly_statements (\n    statement_id INT PRIMARY KEY,\n    account_id INT,\n    statement_date DATE,\n    statement_details TEXT\n)\n\n### STATEMENT\n\nINSERT INTO monthly_statements(statement_id, account_id, statement_date, statement_details) VALUES (5, 5, '2022-01-05', 'Monthly statement details') ON CONFLICT (statement_id) DO UPDATE SET account_id = 5, statement_date = '2022-01-05', statement_details = 'Monthly statement details';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe', customer_email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith', customer_email = 'jane.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson', customer_email = 'alice.johnson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'Bob Brown', 'bob.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Bob Brown', customer_email = 'bob.brown@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (5, 'Sarah Wilson', 'sarah.wilson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Sarah Wilson', customer_email = 'sarah.wilson@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (1, 1, '2022-07-15', 100.50) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 1, transaction_date = '2022-07-15', transaction_amount = 100.50;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (2, 2, '2022-07-16', 75.25) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 2, transaction_date = '2022-07-16', transaction_amount = 75.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (3, 3, '2022-07-17', 200.00) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 3, transaction_date = '2022-07-17', transaction_amount = 200.00;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (4, 4, '2022-07-18', 150.75) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 4, transaction_date = '2022-07-18', transaction_amount = 150.75;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (5, 5, '2022-07-19', 300.25) ON CONFLICT (transaction_id) DO UPDATE SET customer_id = 5, transaction_date = '2022-07-19', transaction_amount = 300.25;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (1, 1, '2022-07-15') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 1, statement_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (2, 2, '2022-07-16') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 2, statement_date = '2022-07-16';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (3, 3, '2022-07-17') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 3, statement_date = '2022-07-17';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (4, 4, '2022-07-18') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 4, statement_date = '2022-07-18';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (5, 5, '2022-07-19') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 5, statement_date = '2022-07-19';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (1, 500.25, '2022-07-15') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 500.25, balance_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (2, 350.00, '2022-07-16') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 350.00, balance_date = '2022-07-16';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (3, 800.50, '2022-07-17') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 800.50, balance_date = '2022-07-17';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (4, 600.75, '2022-07-18') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 600.75, balance_date = '2022-07-18';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (5, 1000.25, '2022-07-19') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 1000.25, balance_date = '2022-07-19';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (1, 1, 'Initial history entry', '2022-07-15') ON CONFLICT (history_id) DO UPDATE SET customer_id = 1, description = 'Initial history entry', history_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (2, 2, 'Second history entry', '2022-07-16') ON CONFLICT (history_id) DO UPDATE SET customer_id = 2, description = 'Second history entry', history_date = '2022-07-16';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (3, 3, 'Third history entry', '2022-07-17') ON CONFLICT (history_id) DO UPDATE SET customer_id = 3, description = 'Third history entry', history_date = '2022-07-17';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (4, 4, 'Fourth history entry', '2022-07-18') ON CONFLICT (history_id) DO UPDATE SET customer_id = 4, description = 'Fourth history entry', history_date = '2022-07-18';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (5, 5, 'Fifth history entry', '2022-07-19') ON CONFLICT (history_id) DO UPDATE SET customer_id = 5, description = 'Fifth history entry', history_date = '2022-07-19';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (1, 'John Doe', 'john.doe@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'John Doe Updated', customer_email = 'john.doe.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (1, 1, '2022-01-01', 100.50) ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (1, 1, '2022-01-01') ON CONFLICT (customer_id, statement_date) DO UPDATE SET statement_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (1, 500.00, '2022-01-01') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 500.00, balance_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (1, 1, 'Transaction History', '2022-01-01') ON CONFLICT (history_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (2, 'Jane Smith', 'jane.smith@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Jane Smith Updated', customer_email = 'jane.smith.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (2, 2, '2022-01-02', 200.75) ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (2, 2, '2022-01-02') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (2, 750.00, '2022-01-02') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 750.00, balance_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (2, 2, 'Balance History', '2022-01-02') ON CONFLICT (customer_id) DO UPDATE SET history_date = '2022-01-02';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Alice Johnson Updated', customer_email = 'alice.johnson.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (3, 3, '2022-01-03', 150.25) ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (3, 3, '2022-01-03') ON CONFLICT (customer_id, statement_date) DO UPDATE SET statement_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (3, 600.00, '2022-01-03') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 600.00, balance_date = '2022-01-03';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (3, 3, 'Account History', '2022-01-03') ON CONFLICT (history_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email) VALUES (4, 'Michael Brown', 'michael.brown@example.com') ON CONFLICT (customer_id) DO UPDATE SET customer_name = 'Michael Brown Updated', customer_email = 'michael.brown.updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, customer_id, transaction_date, transaction_amount) VALUES (4, 4, '2022-01-04', 300.50) ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO statements (statement_id, customer_id, statement_date) VALUES (4, 4, '2022-01-04') ON CONFLICT (statement_id) DO UPDATE SET customer_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO balances (customer_id, balance_amount, balance_date) VALUES (4, 900.00, '2022-01-04') ON CONFLICT (customer_id) DO UPDATE SET balance_amount = 900.00, balance_date = '2022-01-04';",
  "### TABLEDATA\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    customer_email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    transaction_date DATE NOT NULL,\n    transaction_amount DECIMAL(10, 2) NOT NULL\n);\n\nCREATE TABLE statements (\n    statement_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    statement_date DATE NOT NULL\n);\n\nCREATE TABLE balances (\n    customer_id INT PRIMARY KEY REFERENCES customers(customer_id),\n    balance_amount DECIMAL(10, 2) NOT NULL,\n    balance_date DATE NOT NULL\n);\n\nCREATE TABLE history (\n    history_id INT PRIMARY KEY,\n    customer_id INT REFERENCES customers(customer_id),\n    description TEXT NOT NULL,\n    history_date DATE NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO history (history_id, customer_id, description, history_date) VALUES (4, 4, 'Transaction History', '2022-01-04') ON CONFLICT (history_id) DO NOTHING;"
]