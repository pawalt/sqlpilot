[
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate BETWEEN 0.2 AND 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, AVG(interest_rate) AS avg_interest FROM Interest GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_interests FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, MAX(interest_rate) AS max_interest FROM Interest WHERE account_id >= 10;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(interest_rate) AS total_interest FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT account_id FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest ORDER BY account_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(interest_rate) AS avg_interest_rate FROM Interest WHERE account_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, MIN(interest_rate) AS min_interest FROM Interest WHERE interest_rate < 0.3;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE account_id > 5 ORDER BY account_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT count(*) AS number_of_records FROM Interest WHERE account_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE account_id < 10;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.3 AND account_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate = (SELECT MAX(interest_rate) FROM Interest WHERE account_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(interest_rate) AS total_interest FROM Interest WHERE account_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE account_id = 10 OR account_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate = (SELECT AVG(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(interest_rate) AS highest_interest_rate FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(interest_rate) AS avg_interest_rate FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest ORDER BY interest_rate DESC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_records FROM Interest WHERE interest_rate < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate = (SELECT MAX(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id IN (SELECT account_id FROM AnotherTable);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id = (SELECT MAX(account_id) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(interest_rate) AS total_interest FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate BETWEEN 0.2 AND 0.8;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, AVG(interest_rate) AS avg_interest_rate FROM Interest GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate > (SELECT AVG(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate = (SELECT MIN(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, COUNT(*) AS total_records FROM Interest GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate < (SELECT MIN(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id = ANY (SELECT account_id FROM AnotherTable);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    account_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate = (SELECT AVG(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE account_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT * FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT Interest.account_id, SavingsAccount.balance FROM Interest JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance FROM SavingsAccount WHERE account_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance FROM SavingsAccount WHERE balance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance FROM SavingsAccount WHERE accrued_interest < 50;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE account_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance > 500 AND accrued_interest < 200;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance BETWEEN 1000 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance >= 1500 OR accrued_interest <= 100;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance = 2000 AND accrued_interest = 100;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(balance) AS total_balance FROM SavingsAccount GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, AVG(accrued_interest) AS avg_interest FROM SavingsAccount GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, MAX(balance) AS max_balance FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, MIN(accrued_interest) AS min_interest FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_accounts FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance > 1000 AND accrued_interest > 500;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM SavingsAccount WHERE accrued_interest < 100;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount ORDER BY balance DESC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE account_id IN (SELECT account_id FROM SavingsAccount WHERE balance > 1000);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(accrued_interest) AS total_accrued_interest FROM SavingsAccount GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate, balance FROM Interest LEFT JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate, balance FROM Interest RIGHT JOIN SavingsAccount ON Interest.account_id = SavingsAccount.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE balance > 1000 ORDER BY accrued_interest ASC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate > (SELECT AVG(interest_rate) FROM Interest);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE accrued_interest BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE interest_rate NOT IN (SELECT interest_rate FROM SavingsAccount);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, MAX(balance) AS max_balance FROM SavingsAccount GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE account_id = (SELECT MAX(account_id) FROM SavingsAccount);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM SavingsAccount WHERE account_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(balance) AS total_balance FROM SavingsAccount GROUP BY account_id HAVING SUM(balance) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate, balance FROM Interest CROSS JOIN SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate, accrued_interest FROM Interest JOIN SavingsAccount USING (account_id);",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  account_id INT PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\n\nCREATE TABLE SavingsAccount (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL(10,2) NOT NULL,\n  accrued_interest DECIMAL(10,2) NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES Interest(account_id)\n);\n\n### STATEMENT\n\nSELECT account_id, interest_rate FROM Interest WHERE account_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, account_holder FROM Savings_Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, balance FROM Savings_Accounts WHERE balance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest_Rates;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT interest_id, interest_rate FROM Interest_Rates WHERE interest_rate < 3.5;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Interest_Accrual;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, accrued_interest FROM Interest_Accrual WHERE accrued_interest > 50;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT Savings_Accounts.account_holder, Interest_Accrual.accrued_interest FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT Savings_Accounts.account_holder, Interest_Rates.interest_rate FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id JOIN Interest_Rates ON Interest_Accrual.interest_id = Interest_Rates.interest_id;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(balance) FROM Savings_Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(balance) FROM Savings_Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Savings_Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_interest_accruals FROM Interest_Accrual;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, accrued_interest FROM Interest_Accrual WHERE accrued_interest BETWEEN 10 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, accrued_interest FROM Interest_Accrual ORDER BY accrued_interest DESC;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, accrued_interest FROM Interest_Accrual ORDER BY account_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, SUM(accrued_interest) FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id GROUP BY account_holder;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, COUNT(*) AS num_accruals FROM Savings_Accounts JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id GROUP BY account_holder HAVING COUNT(*) > 3;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, AVG(balance) AS avg_balance FROM Savings_Accounts GROUP BY account_holder HAVING AVG(balance) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, balance, accrued_interest FROM Savings_Accounts LEFT JOIN Interest_Accrual ON Savings_Accounts.account_id = Interest_Accrual.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts WHERE balance > 1000",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, balance FROM Savings_Accounts WHERE balance >= 5000",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Savings_Accounts",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, SUM(balance) AS total_balance FROM Savings_Accounts GROUP BY account_holder",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, balance FROM Savings_Accounts WHERE account_holder LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_id, balance FROM Savings_Accounts WHERE balance BETWEEN 1000 AND 5000",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts WHERE account_holder = 'Alice'",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts WHERE balance < (SELECT AVG(balance) FROM Savings_Accounts)",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT IRA.interest_rate, SA.balance FROM Interest_Rates IRA INNER JOIN Savings_Accounts SA ON IRA.interest_id = SA.account_id",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT SA.account_holder, IA.accrued_interest FROM Savings_Accounts SA INNER JOIN Interest_Accrual IA ON SA.account_id = IA.account_id",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts WHERE account_id IN (SELECT account_id FROM Interest_Accrual)",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(balance) FROM Savings_Accounts",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(interest_rate) FROM Interest_Rates",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, BALANCE FROM Savings_Accounts ORDER BY balance DESC",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts WHERE account_holder = 'Bob' AND balance <= 2000",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, SUM(accrued_interest) FROM Interest_Accrual GROUP BY account_holder HAVING SUM(accrued_interest) > 100",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, balance FROM Savings_Accounts UNION SELECT 'Unknown' AS account_holder, SUM(balance) AS balance FROM Savings_Accounts",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Savings_Accounts WHERE balance = (SELECT MAX(balance) FROM Savings_Accounts)",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT account_holder, balance, interest_rate FROM Savings_Accounts SA LEFT JOIN Interest_Rates IR ON SA.account_id = IR.interest_id",
  "### TABLEDATA\n\nCREATE TABLE Savings_Accounts (\n    account_id SERIAL PRIMARY KEY,\n    account_holder VARCHAR(50) NOT NULL,\n    balance DECIMAL(10, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Rates (\n    interest_id SERIAL PRIMARY KEY,\n    interest_rate DECIMAL(5, 2) NOT NULL\n);\n\n\nCREATE TABLE Interest_Accrual (\n    accrual_id SERIAL PRIMARY KEY,\n    account_id INT REFERENCES Savings_Accounts(account_id),\n    interest_id INT REFERENCES Interest_Rates(interest_id),\n    accrued_interest DECIMAL(10, 2) NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT account_holder FROM Savings_Accounts WHERE balance > 5000",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT interest_id, interest_rate FROM Interest WHERE interest_rate > 0.05;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_id, account_holder, balance FROM SavingsAccount WHERE balance >= 1000;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Transaction;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, account_id, transaction_amount FROM Transaction WHERE transaction_amount < 0;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InterestAccrual;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT accrual_id, account_id, accrual_amount FROM InterestAccrual WHERE accrual_amount >= 10;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT interest_id, interest_rate, COUNT(*) FROM Interest GROUP BY interest_id, interest_rate;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(balance) FROM SavingsAccount GROUP BY account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, AVG(balance) FROM SavingsAccount GROUP BY account_holder;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_date, SUM(transaction_amount) FROM Transaction GROUP BY transaction_date;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT a.account_holder, SUM(t.transaction_amount) FROM SavingsAccount a JOIN Transaction t ON a.account_id = t.account_id GROUP BY a.account_holder;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT acc.accrual_date, SUM(acc.accrual_amount) FROM InterestAccrual acc JOIN SavingsAccount s ON acc.account_id = s.account_id GROUP BY acc.accrual_date;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT interest_id, MAX(interest_rate) FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_id, MIN(balance) FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, AVG(transaction_amount) FROM Transaction;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(accrual_amount) FROM InterestAccrual;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Transaction;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM InterestAccrual;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, balance FROM SavingsAccount",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_id, transaction_id, transaction_amount, transaction_date FROM Transaction",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT accrual_id, account_id, accrual_amount, accrual_date FROM InterestAccrual",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, balance, interest_rate FROM SavingsAccount JOIN Interest ON SavingsAccount.interest_id = Interest.interest_id",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(balance) AS total_balance FROM SavingsAccount",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(interest_rate) AS avg_interest_rate FROM Interest",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, balance FROM SavingsAccount WHERE balance > 1000",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM Transaction WHERE transaction_amount < 0",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM SavingsAccount ORDER BY balance DESC",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate > 0.05",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, balance FROM SavingsAccount WHERE balance BETWEEN 1000 AND 5000",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, balance, transaction_amount FROM SavingsAccount JOIN Transaction ON SavingsAccount.account_id = Transaction.account_id",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_transactions FROM Transaction",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, SUM(transaction_amount) AS total_transactions FROM SavingsAccount JOIN Transaction ON SavingsAccount.account_id = Transaction.account_id GROUP BY account_holder",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT account_holder, avg(accrual_amount) AS avg_accrual FROM SavingsAccount JOIN InterestAccrual ON SavingsAccount.account_id = InterestAccrual.account_id GROUP BY account_holder",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n    interest_id INT PRIMARY KEY,\n    interest_rate DECIMAL\n);\n\nCREATE TABLE SavingsAccount (\n    account_id INT PRIMARY KEY,\n    account_holder VARCHAR(255),\n    balance DECIMAL,\n    interest_id INT REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transaction (\n    transaction_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    transaction_amount DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE InterestAccrual (\n    accrual_id INT PRIMARY KEY,\n    account_id INT REFERENCES SavingsAccount(account_id),\n    accrual_amount DECIMAL,\n    accrual_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT account_id FROM Transaction",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT interest_id, interest_rate FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT account_id, account_holder_name, balance FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT account_id, balance, interest_id FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT transaction_id, account_id, transaction_type, amount, transaction_date FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Address;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT address_id, customer_id, address_line, city, state, zip_code FROM Address;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT SavingsAccount.account_id, SavingsAccount.balance, Interest.interest_rate FROM SavingsAccount JOIN Interest ON SavingsAccount.interest_id = Interest.interest_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT Customer.customer_name, Address.address_line, Address.city, Address.state, Address.zip_code FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT Transactions.account_id, Transactions.transaction_type, Transactions.amount, Transactions.transaction_date, SavingsAccount.balance FROM Transactions JOIN SavingsAccount ON Transactions.account_id = SavingsAccount.account_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT Customer.customer_name, Address.address_line, Address.city, Address.state, Address.zip_code, SavingsAccount.balance FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.interest_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest WHERE interest_rate > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM SavingsAccount WHERE balance > 10000;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'Deposit';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Customer WHERE customer_name LIKE 'John%';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Address WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions ORDER BY transaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Customer ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT account_id, account_holder_name, balance, interest_rate FROM SavingsAccount JOIN Interest ON SavingsAccount.interest_id = Interest.interest_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_type, amount, transaction_date FROM Transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customer WHERE LENGTH(customer_name) > 10;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT address_id, address_line, city, state, zip_code FROM Address WHERE state = 'California';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT account_id, account_holder_name, balance, interest_rate FROM SavingsAccount WHERE balance > 10000 ORDER BY balance DESC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_holder_name, balance FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id WHERE balance < 0;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, address_line, city FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(balance) AS total_balance FROM SavingsAccount GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM Customer;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(interest_rate) AS avg_interest_rate FROM Interest;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT MAX(balance) AS max_balance FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT MIN(amount) AS min_transaction_amount FROM Transactions WHERE transaction_type = 'withdrawal';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_holder_name, transaction_date, amount FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id JOIN Transactions ON SavingsAccount.account_id = Transactions.account_id WHERE transaction_type = 'deposit' ORDER BY transaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, address_line, city, zip_code FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id WHERE city LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT AVG(balance) AS avg_balance, MAX(balance) AS max_balance, MIN(balance) AS min_balance FROM SavingsAccount;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM Transactions WHERE transaction_type = 'transfer';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_holder_name, balance, transaction_date FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id JOIN Transactions ON SavingsAccount.account_id = Transactions.account_id WHERE balance < 0;",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, address_line, city, zip_code FROM Customer JOIN Address ON Customer.customer_id = Address.customer_id WHERE zip_code LIKE '%34';",
  "### TABLEDATA\n\nCREATE TABLE Interest (\n  interest_id UUID PRIMARY KEY,\n  interest_rate DECIMAL(5,2) NOT NULL\n);\n\nCREATE TABLE SavingsAccount (\n  account_id UUID PRIMARY KEY,\n  account_holder_name VARCHAR(50) NOT NULL,\n  balance DECIMAL(10,2) NOT NULL,\n  interest_id UUID,\n  FOREIGN KEY (interest_id) REFERENCES Interest(interest_id)\n);\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL(10,2) NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  FOREIGN KEY (account_id) REFERENCES SavingsAccount(account_id)\n);\n\nCREATE TABLE Customer (\n  customer_id UUID PRIMARY KEY,\n  customer_name VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Address (\n  address_id UUID PRIMARY KEY,\n  customer_id UUID,\n  address_line VARCHAR(100) NOT NULL,\n  city VARCHAR(50) NOT NULL,\n  state VARCHAR(50) NOT NULL,\n  zip_code VARCHAR(10) NOT NULL,\n  FOREIGN KEY (customer_id) REFERENCES Customer(customer_id)\n);\n\n### STATEMENT\n\nSELECT customer_name, account_holder_name, transaction_type, amount FROM Customer JOIN SavingsAccount ON Customer.customer_id = SavingsAccount.account_id JOIN Transactions ON SavingsAccount.account_id = Transactions.account_id WHERE amount > 5000;"
]