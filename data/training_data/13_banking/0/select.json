[
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, contact_number FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Customers WHERE customer_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM Customers WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE contact_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SUM(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, COUNT(*) FROM Customers GROUP BY name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT address, COUNT(*) FROM Customers GROUP BY address;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM Customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Customers WHERE address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE contact_number LIKE '%1234%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, address, contact_number FROM Customers WHERE name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, address, contact_number FROM Customers WHERE name = 'Bob' AND address = '123 Main St';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, address, contact_number FROM Customers WHERE address LIKE '%Ave%' ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM Customers WHERE customer_id = 5 OR customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name LIKE '%e%' AND address LIKE '%Ave%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = (SELECT MAX(customer_id) FROM Customers);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, COUNT(*) FROM Customers GROUP BY name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT address, COUNT(*) FROM Customers GROUP BY address HAVING COUNT(*) > 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    address VARCHAR(255),\n    contact_number VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name = 'Alice' UNION SELECT * FROM Customers WHERE name = 'Bob';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, address, contact_number FROM Customers WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT order_id, order_date FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM Orders WHERE customer_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.order_date FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.total_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id WHERE c.customer_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, SUM(o.total_amount) AS total_spent FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(o.order_id) AS total_orders FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, MAX(o.total_amount) AS max_order_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, MIN(o.total_amount) AS min_order_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, AVG(o.total_amount) AS avg_order_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, COUNT(o.order_id) AS total_orders, SUM(o.total_amount) AS total_spent FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.order_date FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.order_date FROM Customers c RIGHT JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.order_date FROM Customers c FULL JOIN Orders o ON c.customer_id = o.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.total_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ORDER BY o.total_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.order_date FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id ORDER BY o.order_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT c.name, o.total_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id WHERE c.name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT name, address FROM Customers WHERE address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT name, contact_number FROM Customers WHERE contact_number LIKE '%123%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE contact_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT order_id, total_amount FROM Orders WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT Customers.name, SUM(total_amount) AS total_spent FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, total_amount FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, total_amount FROM Customers RIGHT JOIN Orders ON Customers.customer_id = Orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT customer_id, name, total_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name LIKE '%John%' OR address LIKE '%Main Street%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address LIKE '%Ave%' AND contact_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address NOT LIKE '%Ave%' OR contact_number NOT LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Orders ORDER BY order_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_customers FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address TEXT,\n    contact_number VARCHAR(15)\n);\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT,\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT AVG(total_amount) AS avg_amount FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT order_id, customer_id, order_date FROM Orders;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Payments;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT payment_id, order_id, payment_date FROM Payments;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, address FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.total_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, payment_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Payments ON Orders.order_id = Payments.order_id WHERE Payments.payment_amount > 50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, order_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, payment_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Payments ON Orders.order_id = Payments.order_id WHERE Payments.payment_date >= '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers WHERE name LIKE '%B%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers WHERE address IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, order_date FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.total_amount < 50;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, payment_amount FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Payments ON Orders.order_id = Payments.order_id WHERE Payments.payment_amount < 20;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers WHERE customer_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT name, total_amount FROM Customers WHERE customer_id NOT IN (2, 4, 6);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, name, address FROM Customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT customer_id, name, contact_number FROM Customers WHERE contact_number LIKE '123%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Orders WHERE order_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT order_id, order_date, total_amount FROM Orders WHERE total_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.name, Orders.total_amount FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, SUM(Payments.payment_amount) AS total_payments FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Payments ON Orders.order_id = Payments.order_id GROUP BY Customers.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Orders.order_id, Orders.total_amount, Payments.payment_amount FROM Orders LEFT JOIN Payments ON Orders.order_id = Payments.order_id WHERE Payments.payment_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, Orders.order_date, Payments.payment_date FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Payments ON Orders.order_id = Payments.order_id WHERE Orders.order_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT DISTINCT Customers.name FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id INNER JOIN Payments ON Orders.order_id = Payments.order_id WHERE Payments.payment_amount BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Orders.order_id, Customers.name, Orders.total_amount FROM Orders INNER JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Orders.total_amount > (SELECT AVG(total_amount) FROM Orders);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, MAX(total_amount) AS max_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name HAVING MAX(total_amount) > 2000;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, COUNT(Orders.order_id) AS order_count FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name HAVING order_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, MIN(total_amount) AS min_amount, MAX(total_amount) AS max_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, AVG(total_amount) AS avg_amount FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, COUNT(Payments.payment_id) AS payment_count FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Payments ON Orders.order_id = Payments.order_id GROUP BY Customers.name;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, Orders.order_date, Payments.payment_date FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Payments ON Orders.order_id = Payments.order_id WHERE Orders.order_date IS NULL OR Payments.payment_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, Orders.order_date, Payments.payment_date FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Payments ON Orders.order_id = Payments.order_id WHERE Orders.order_id IS NULL OR Payments.payment_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, Orders.order_date, Payments.payment_date FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Payments ON Orders.order_id = Payments.order_id WHERE Orders.order_id IS NOT NULL AND Payments.payment_id IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\nCREATE TABLE Orders (\n    order_id INT PRIMARY KEY,\n    customer_id INT REFERENCES Customers(customer_id),\n    order_date DATE,\n    total_amount DECIMAL(10, 2)\n)\n\nCREATE TABLE Payments (\n    payment_id INT PRIMARY KEY,\n    order_id INT REFERENCES Orders(order_id),\n    payment_date DATE,\n    payment_amount DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT Customers.name, Orders.order_date, Payments.payment_date FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id LEFT JOIN Payments ON Orders.order_id = Payments.order_id WHERE Orders.order_id IS NULL AND Payments.payment_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, contact_number FROM Customers WHERE customer_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_id, address FROM Customers WHERE contact_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, contact_number FROM Customers WHERE address LIKE '%Street%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers ORDER BY customer_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers ORDER BY customer_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers WHERE customer_name = 'Jane';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers WHERE customer_id > 5 AND address LIKE '%Ave%';",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT DISTINCT address FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT MAX(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT MIN(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT AVG(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT SUM(customer_id) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_name) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_id, address FROM Customers WHERE customer_id IN (1, 3, 5);",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_name IN ('Alice', 'Bob');",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address LIKE '%Street%'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name FROM Customers WHERE address LIKE '%' AND contact_number LIKE '123%'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT DISTINCT customer_name FROM Customers WHERE address = '123 Main St'",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address FROM Customers WHERE customer_id BETWEEN 100 AND 200",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_id, customer_name, address FROM Customers WHERE contact_number IN ('1234567890', '9876543210')",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = (SELECT MAX(customer_id) FROM Customers)",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers ORDER BY customer_name ASC",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers ORDER BY customer_name DESC",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_customers FROM Customers GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, AVG(customer_id) AS avg_customer_id FROM Customers GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, MAX(customer_id) FROM Customers GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, MIN(customer_id) FROM Customers GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, COUNT(DISTINCT address) AS unique_addresses FROM Customers GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, SUM(customer_id) AS total_customer_id FROM Customers GROUP BY customer_name",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 1 UNION SELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 2",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 1 INTERSECT SELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 2",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 1 EXCEPT SELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 2",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 1 OR customer_id = 2",
  "### TABLEDATA\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    address VARCHAR(100),\n    contact_number VARCHAR(15)\n)\n\n### STATEMENT\n\nSELECT customer_name, address, contact_number FROM Customers WHERE customer_id = 1 AND address LIKE '%Street%'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE city = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, phone_number FROM Customers WHERE state = 'California';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE zip_code = '12345';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT city, state FROM Customers WHERE customer_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address LIKE '%Street';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, city FROM Customers WHERE state = 'Texas' AND zip_code = '54321';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE state IN ('Florida', 'Georgia');",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, phone_number FROM Customers WHERE city = 'Los Angeles' AND state = 'California';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE zip_code LIKE '12%';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT city, state, zip_code FROM Customers WHERE first_name = 'John' AND last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, address FROM Customers WHERE city = 'Chicago' OR city = 'Houston';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, city, state FROM Customers WHERE address NOT LIKE '%Apt%';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE address = '123 Main St' AND city = 'Boston';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, phone_number FROM Customers WHERE state = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE zip_code = '54321' OR zip_code = '65432';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, phone_number FROM Customers WHERE address LIKE '%Ave%' AND city = 'Seattle';",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address, city FROM Customers WHERE state = 'California' AND zip_code LIKE '9%' LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE city = 'New York' ORDER BY last_name ASC",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, first_name, phone_number FROM Customers WHERE city = 'Los Angeles' AND first_name ILIKE 'J%'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT DISTINCT city FROM Customers WHERE state = 'Texas'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_name, address FROM Customers WHERE state = 'Florida' AND zip_code <> '33333'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, phone_number FROM Customers WHERE state = 'Washington' AND city = 'Seattle'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE zip_code LIKE '2%' AND address IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customers WHERE state = 'California'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, city, state FROM Customers WHERE zip_code IN ('12345', '67890')",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM Customers WHERE state = 'New York' ORDER BY first_name DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, city, phone_number FROM Customers WHERE state = 'California' AND city <> 'San Francisco'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT DISTINCT state FROM Customers WHERE city = 'Chicago'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE state = 'Illinois' OR state = 'Michigan'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, city FROM Customers WHERE zip_code BETWEEN '10000' AND '19999'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, last_name, phone_number FROM Customers WHERE state = 'Texas' OR state = 'Florida' AND zip_code LIKE '3%'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE state = 'Washington' AND city IN ('Bellevue', 'Redmond')",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, address FROM Customers WHERE zip_code = '54321'",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT customer_id, city, state FROM Customers WHERE state = 'California' AND zip_code IN ('98765', '43210')",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT first_name, city, phone_number FROM Customers WHERE state = 'Texas' AND city = 'Dallas' ORDER BY last_name ASC",
  "### TABLEDATA\n\nCREATE TABLE Customers(\n    customer_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    address VARCHAR(100),\n    city VARCHAR(50),\n    state VARCHAR(50),\n    zip_code VARCHAR(10),\n    phone_number VARCHAR(15)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE state = 'Massachusetts' AND city <> 'Boston'"
]