[
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM Transactions WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions ORDER BY transaction_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(amount) FROM Transactions WHERE transaction_type = 'refund';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'payment' AND amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT transaction_type FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type LIKE 'p%';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions WHERE transaction_type = 'purchase';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount < 50 OR amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT transaction_type) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount = (SELECT MAX(amount) FROM Transactions);",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'payment' ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount > 1000 AND transaction_type = 'deposit'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM Transactions WHERE transaction_type = 'withdrawal'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_transaction_amount FROM Transactions WHERE transaction_type = 'deposit'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions ORDER BY transaction_time DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MAX(amount) AS max_transaction_amount FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT MIN(amount) AS min_transaction_amount FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_type, COUNT(*) AS transaction_count FROM Transactions GROUP BY transaction_type",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_type, EXTRACT(MONTH FROM transaction_time) AS transaction_month FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE EXTRACT(YEAR FROM transaction_time) = 2021",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_transaction_amount FROM Transactions WHERE EXTRACT(DAY FROM transaction_time) = 15",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_type, SUM(amount) AS total_amount FROM Transactions GROUP BY transaction_type",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_type, SUM(amount) AS total_amount FROM Transactions WHERE EXTRACT(YEAR FROM transaction_time) = 2022 GROUP BY transaction_type",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_transaction_amount FROM Transactions WHERE EXTRACT(MONTH FROM transaction_time) = 6",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time BETWEEN '2022-01-01' AND '2022-03-31'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_type, MIN(transaction_time) AS earliest_transaction FROM Transactions GROUP BY transaction_type",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT transaction_type FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount BETWEEN 500 AND 1000",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type LIKE 'deposit%'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  amount DECIMAL,\n  transaction_type VARCHAR(10),\n  transaction_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time > '2022-06-15'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM Transactions WHERE transaction_type='debit';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM ATM WHERE is_active=true;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ATM WHERE location='New York';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions ORDER BY transaction_time DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM Transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ATM WHERE is_active=false;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT transaction_type) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions WHERE transaction_type='credit';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(transaction_time) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT atm_id, location FROM ATM;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Transactions WHERE transaction_type='debit';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ATM ORDER BY location ASC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_type, COUNT(*) FROM Transactions GROUP BY transaction_type HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount > 100",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM Transactions WHERE transaction_type = 'purchase'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_amount FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ATM WHERE is_active = TRUE",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT atm_id, location FROM ATM WHERE location LIKE '%mall%'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions JOIN ATM ON Transactions.transaction_id = ATM.atm_id",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_amount FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT location, COUNT(transaction_id) AS transaction_count FROM Transactions JOIN ATM ON Transactions.transaction_id = ATM.atm_id GROUP BY location",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_type, SUM(amount) AS total_amount FROM Transactions GROUP BY transaction_type",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount IN (SELECT amount FROM Transactions WHERE transaction_type = 'withdrawal')",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT location, AVG(amount) AS average_amount FROM Transactions JOIN ATM ON Transactions.transaction_id = ATM.atm_id GROUP BY location",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ATM WHERE atm_id IN (SELECT DISTINCT transaction_id FROM Transactions WHERE amount > 500)",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_time > now() - INTERVAL '1 day'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_amount, EXTRACT(MONTH FROM transaction_time) AS month FROM Transactions GROUP BY EXTRACT(MONTH FROM transaction_time)",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM ATM WHERE atm_id NOT IN (SELECT atm_id FROM Transactions)",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_time + INTERVAL '3 hours' AS new_time FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n  transaction_id SERIAL PRIMARY KEY,\n  transaction_type VARCHAR(10) NOT NULL,\n  amount DECIMAL NOT NULL,\n  transaction_time TIMESTAMP NOT NULL\n);\nCREATE TABLE ATM (\n  atm_id SERIAL PRIMARY KEY,\n  location VARCHAR(100) NOT NULL,\n  is_active BOOLEAN NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE EXTRACT(DOW FROM transaction_time) = 1",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_type FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT amount, timestamp FROM Transactions WHERE transaction_type = 'Deposit';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_number, account_balance FROM Accounts WHERE account_balance > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM ATMs WHERE bank_name = 'ABC Bank';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount, timestamp FROM Transactions WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, account_number FROM Accounts WHERE account_balance < 0;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT atm_id, bank_name FROM ATMs WHERE location LIKE '%New York%';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(amount) FROM Transactions WHERE transaction_type = 'Withdrawal';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(account_balance) FROM Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(account_balance) FROM Accounts;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT bank_name FROM ATMs;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM Transactions ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Accounts ORDER BY account_balance ASC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, account_number, account_balance FROM Accounts LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT atm_id, location FROM ATMs ORDER BY atm_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type IN ('Deposit', 'Withdrawal');",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'Deposit' AND amount > 100",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Accounts WHERE account_balance < 0",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT atm_id, location FROM ATMs WHERE bank_name = 'ABC Bank'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT t1.account_id, t1.account_number, t2.transaction_id FROM Accounts t1 JOIN Transactions t2 ON t1.account_id = t2.transaction_id",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT t1.*, t2.amount FROM Transactions t1 LEFT JOIN Accounts t2 ON t1.transaction_id = t2.account_id",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(timestamp) FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions ORDER BY timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT t1.*, t2.location FROM Accounts t1 INNER JOIN ATMs t2 ON t1.account_id = t2.atm_id",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(account_balance) FROM Accounts",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT transaction_type, COUNT(*) FROM Transactions GROUP BY transaction_type",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT t1.*, t2.bank_name FROM ATMs t1 JOIN Accounts t2 ON t1.atm_id = t2.account_id",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT account_balance FROM Accounts",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT transaction_id) FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(account_balance) FROM Accounts",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT MIN(amount) FROM Transactions",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT t1.transaction_id, t2.amount FROM Transactions t1 RIGHT JOIN Accounts t2 ON t1.transaction_id = t2.account_id",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM ATMs WHERE location LIKE '%City%'",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(10),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMs (\n    atm_id INT PRIMARY KEY,\n    location VARCHAR(50),\n    bank_name VARCHAR(50)\n);\n\nCREATE TABLE Accounts (\n    account_id INT PRIMARY KEY,\n    account_number VARCHAR(20),\n    account_balance DECIMAL\n);\n\n### STATEMENT\n\nSELECT account_id, SUM(amount) FROM Transactions GROUP BY account_id HAVING SUM(amount) > 1000",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_type FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT withdrawal_id, user_id, amount FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(amount) FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM ATMDeposits WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM ATMDeposits;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_type, amount FROM Transactions WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'deposit';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, amount FROM ATMWithdrawals WHERE amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(amount) FROM ATMDeposits WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT timestamp FROM Transactions ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(amount) FROM ATMWithdrawals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_amount FROM ATMWithdrawals WHERE user_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_type, amount FROM Transactions WHERE timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_amount FROM ATMDeposits;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) FROM ATMWithdrawals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount > 1000 AND timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_type FROM Transactions WHERE transaction_type = 'purchase' ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE username LIKE '%john%' AND email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions JOIN ATMWithdrawals ON Transactions.transaction_id = ATMWithdrawals.withdrawal_id WHERE amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM Users JOIN ATMDeposits ON Users.user_id = ATMDeposits.user_id WHERE amount >= 1000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_amount FROM Transactions WHERE timestamp > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_amount FROM Transactions WHERE transaction_type = 'deposit';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_deposits FROM ATMDeposits GROUP BY user_id HAVING total_deposits > 3;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_withdrawals FROM ATMWithdrawals GROUP BY user_id ORDER BY total_withdrawals DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_transactions FROM Transactions GROUP BY user_id HAVING total_transactions BETWEEN 10 AND 50;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_withdrawn FROM ATMWithdrawals GROUP BY user_id HAVING total_withdrawn > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT username, timestamp FROM Users JOIN ATMWithdrawals ON Users.user_id = ATMWithdrawals.user_id WHERE amount BETWEEN 100 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) AS max_withdrawal FROM ATMWithdrawals GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(amount) AS min_deposit FROM ATMDeposits GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS average_deposit FROM ATMDeposits GROUP BY user_id ORDER BY average_deposit DESC;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_type, COUNT(*) AS total_transactions FROM Transactions GROUP BY transaction_type ORDER BY total_transactions DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_transaction_amount FROM Transactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, TIMESTAMPDIFF(DAY, MIN(timestamp), MAX(timestamp)) AS days_since_last_transaction FROM Transactions GROUP BY user_id HAVING days_since_last_transaction > 30;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_type VARCHAR(255),\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255)\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) AS total_transactions FROM Users JOIN Transactions ON Users.user_id = Transactions.user_id GROUP BY username HAVING total_transactions > 5;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount, transaction_type FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT withdrawal_id, amount, atm_location FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMDeposits;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT deposit_id, amount, atm_location FROM ATMDeposits;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMUsers;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT user_id, name, address FROM ATMUsers;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMLocations;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT location_id, location_name, address FROM ATMLocations;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.amount, w.amount, w.atm_location FROM Transactions t, ATMWithdrawals w WHERE t.transaction_id = w.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT d.deposit_id, d.amount, l.location_name FROM ATMDeposits d, ATMLocations l WHERE l.location_id = d.deposit_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT u.name, u.address, w.amount FROM ATMUsers u, ATMWithdrawals w WHERE u.user_id = w.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT DISTINCT w.atm_location FROM ATMWithdrawals w;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT name, transaction_date FROM Transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT SUM(amount) FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MIN(amount) FROM ATMDeposits;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT MAX(amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_type = 'CREDIT';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount, transaction_type FROM Transactions WHERE transaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT withdrawal_id, amount, atm_location, timestamp FROM ATMWithdrawals WHERE amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMWithdrawals WHERE atm_location = 'ATM A';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT deposit_id, amount, atm_location, timestamp FROM ATMDeposits WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMDeposits WHERE atm_location = 'ATM B' AND timestamp > '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT user_id, name, address FROM ATMUsers;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT location_id, location_name, address FROM ATMLocations;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMDeposits JOIN ATMUsers ON ATMDeposits.amount = ATMUsers.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMWithdrawals JOIN ATMDeposits ON ATMWithdrawals.amount = ATMDeposits.amount;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions JOIN ATMUsers ON Transactions.amount = ATMUsers.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.amount, t.transaction_type, u.name FROM Transactions t JOIN ATMUsers u ON t.transaction_id = u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.amount, t.transaction_type, d.amount FROM Transactions t JOIN ATMDeposits d ON t.transaction_id = d.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.amount, t.transaction_type, w.amount FROM Transactions t JOIN ATMWithdrawals w ON t.transaction_id = w.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMDeposits UNION SELECT * FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM ATMDeposits UNION ALL SELECT * FROM ATMWithdrawals;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT SUM(amount) FROM Transactions WHERE transaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Transactions (\n    transaction_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    transaction_type VARCHAR(10),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE ATMWithdrawals (\n    withdrawal_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMDeposits (\n    deposit_id SERIAL PRIMARY KEY,\n    amount DECIMAL,\n    atm_location VARCHAR(50),\n    timestamp TIMESTAMP,\n    transaction_id INTEGER REFERENCES Transactions(transaction_id)\n);\n\nCREATE TABLE ATMUsers (\n    user_id SERIAL PRIMARY KEY,\n    name VARCHAR(100),\n    address VARCHAR(200)\n);\n\nCREATE TABLE ATMLocations (\n    location_id SERIAL PRIMARY KEY,\n    location_name VARCHAR(50),\n    address VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Transactions WHERE transaction_type = 'DEBIT';"
]