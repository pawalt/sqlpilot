[
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM FraudulentActivities WHERE transaction_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE suspicious_pattern = 'Fraudulent'",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS avg_amount FROM FraudulentActivities",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM FraudulentActivities",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(transaction_date) AS latest_transaction_date FROM FraudulentActivities",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT(suspicious_pattern) FROM FraudulentActivities",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities ORDER BY transaction_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_amount BETWEEN 500 AND 1000",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS avg_amount_per_day, EXTRACT(DOW FROM transaction_date) AS day_of_week FROM FraudulentActivities GROUP BY day_of_week",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM FraudulentActivities WHERE transaction_amount < AVG(transaction_amount)",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT(suspicious_pattern)) AS distinct_patterns FROM FraudulentActivities",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_amount = (SELECT MAX(transaction_amount) FROM FraudulentActivities)",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS avg_amount_per_month, EXTRACT(MONTH FROM transaction_date) AS month FROM FraudulentActivities GROUP BY month",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE EXTRACT(YEAR FROM transaction_date) = 2022",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_date < '2022-06-30 00:00:00'",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_fraudulent_transactions FROM FraudulentActivities WHERE suspicious_pattern = 'Fraudulent'",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM FraudulentActivities WHERE EXTRACT(MONTH FROM transaction_date) = 3",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_amount > 1000 AND transaction_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM FraudulentActivities WHERE suspicious_pattern = 'Suspicious';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS average_amount FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM FraudulentActivities WHERE transaction_date BETWEEN '2022-03-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(transaction_amount) AS min_amount, MAX(transaction_amount) AS max_amount FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT suspicious_pattern FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_amount > 5000 AND transaction_date < '2022-02-15';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, EXTRACT(MONTH FROM transaction_date) AS transaction_month FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS average_amount, suspicious_pattern FROM FraudulentActivities GROUP BY suspicious_pattern;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities ORDER BY transaction_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT transaction_date) AS unique_dates FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS average_amount, COUNT(*) AS total_transactions FROM FraudulentActivities GROUP BY EXTRACT(MONTH FROM transaction_date);",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_amount BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS average_amount, MAX(transaction_amount) AS max_amount FROM FraudulentActivities WHERE suspicious_pattern = 'Fraud';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM FraudulentActivities WHERE transaction_date::date = '2022-05-20'::date;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_amount, SUM(transaction_amount) OVER() AS total_amount FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, AGE(transaction_date) AS transaction_age FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_amount, suspicious_pattern, EXTRACT(DOW FROM transaction_date) AS day_of_week FROM FraudulentActivities;",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount, transaction_date, suspicious_pattern FROM FraudulentActivities WHERE transaction_date >= NOW() - INTERVAL '1 month';",
  "### TABLEDATA\n\nCREATE TABLE FraudulentActivities (\n    transaction_id UUID PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMPTZ,\n    suspicious_pattern TEXT\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount, transaction_date, suspicious_pattern FROM FraudulentActivities WHERE transaction_date = (SELECT MAX(transaction_date) FROM FraudulentActivities);",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE flagged = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT transaction_id, timestamp FROM suspicious_transactions ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_description FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_patterns WHERE pattern_criteria->>'threshold' = 'high';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_criteria FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT AVG(LENGTH(pattern_description)) FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description FROM suspicious_patterns ORDER BY pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions INNER JOIN suspicious_patterns ON suspicious_transactions.amount > CAST(suspicious_patterns.pattern_criteria->>'threshold' AS DECIMAL);",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions LEFT JOIN suspicious_patterns ON suspicious_transactions.timestamp = suspicious_patterns.pattern_criteria->>'timestamp';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions RIGHT JOIN suspicious_patterns ON suspicious_transactions.timestamp = suspicious_patterns.pattern_criteria->>'timestamp';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions FULL JOIN suspicious_patterns ON suspicious_transactions.amount = CAST(suspicious_patterns.pattern_criteria->>'amount' AS DECIMAL);",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE transaction_id IN (SELECT transaction_id FROM suspicious_patterns);",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE amount > 1000 AND flagged = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT MAX(amount) AS max_amount FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_patterns WHERE pattern_description LIKE '%fraud%';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description FROM suspicious_patterns ORDER BY pattern_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount, timestamp FROM suspicious_transactions WHERE flagged = TRUE ORDER BY timestamp ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_amount FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, COUNT(pattern_id) AS occurrences FROM suspicious_patterns GROUP BY pattern_id HAVING COUNT(pattern_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_amount, MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE timestamp > '2022-01-01' AND timestamp < '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_criteria->>'category' AS category FROM suspicious_patterns WHERE pattern_criteria @> '{\"category\": \"high-risk\"}';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, COUNT(pattern_id) AS occurrences FROM suspicious_patterns GROUP BY pattern_id ORDER BY occurrences DESC LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_amount, flagged FROM suspicious_transactions GROUP BY flagged;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_description, pattern_criteria FROM suspicious_patterns WHERE pattern_criteria->>'transaction_type' = 'credit';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description FROM suspicious_patterns WHERE pattern_description ILIKE '%scam%';",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_amount, COUNT(*) AS total_transactions FROM suspicious_transactions;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE amount > (SELECT AVG(amount) FROM suspicious_transactions);",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_transactions WHERE timestamp::date = CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE suspicious_transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    timestamp TIMESTAMP,\n    flagged BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id UUID PRIMARY KEY,\n    pattern_description TEXT,\n    pattern_criteria JSONB\n);\n\n### STATEMENT\n\nSELECT pattern_id, pattern_description, pattern_criteria FROM suspicious_patterns WHERE pattern_criteria->>'category' = 'high-risk';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_transactions;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, amount FROM fraudulent_transactions WHERE user_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT pattern_description, threshold FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions WHERE resolution_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount, transaction_date FROM fraudulent_transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_patterns WHERE threshold >= 0.5;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT flag_reason, flag_date FROM flagged_transactions WHERE resolution_status = 'resolved';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, transaction_date FROM fraudulent_transactions WHERE is_suspicious = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions WHERE flag_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT pattern_id, flagged_date FROM suspicious_patterns WHERE is_resolved = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT flag_id, flag_reason FROM flagged_transactions WHERE resolution_status = 'dismissed';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_transactions WHERE user_id = 200 AND amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM fraudulent_transactions WHERE transaction_date >= '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, transaction_date FROM fraudulent_transactions WHERE is_suspicious = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions WHERE resolution_status = 'resolved' AND flag_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT pattern_description, threshold FROM suspicious_patterns WHERE threshold < 0.3;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, amount FROM fraudulent_transactions WHERE amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_patterns WHERE is_resolved = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT flag_reason, resolution_status FROM flagged_transactions WHERE flag_date >= '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT pattern_id, threshold FROM suspicious_patterns WHERE flagged_date >= '2022-05-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM fraudulent_transactions WHERE amount > 1000 AND is_suspicious = true;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) FROM fraudulent_transactions GROUP BY user_id HAVING AVG(amount) > 500;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT transaction_id, user_id, transaction_date FROM fraudulent_transactions WHERE is_suspicious = false ORDER BY transaction_date DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_patterns WHERE threshold < 0.5;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT pattern_description, COUNT(pattern_id) FROM suspicious_patterns GROUP BY pattern_description HAVING COUNT(pattern_id) > 1;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions WHERE resolution_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT transaction_id, flag_reason FROM flagged_transactions WHERE flag_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT ft.transaction_id, COUNT(fp.pattern_id) AS num_patterns FROM flagged_transactions ft JOIN suspicious_patterns fp ON ft.transaction_id = fp.transaction_id GROUP BY ft.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT ft.transaction_id, fp.pattern_description, ft.flag_reason FROM flagged_transactions ft JOIN suspicious_patterns fp ON ft.transaction_id = fp.transaction_id WHERE ft.resolution_status = 'resolved';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_amount FROM fraudulent_transactions GROUP BY user_id ORDER BY total_amount DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT ft.transaction_id, ft.flag_date, sp.pattern_description FROM flagged_transactions ft JOIN suspicious_patterns sp ON ft.transaction_id = sp.transaction_id WHERE ft.flag_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions ft LEFT JOIN suspicious_patterns sp ON ft.transaction_id = sp.transaction_id WHERE sp.pattern_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT AVG(ft.amount) AS avg_amount, MAX(ft.amount) AS max_amount, MIN(ft.amount) AS min_amount FROM fraudulent_transactions ft;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(DISTINCT transaction_id) AS num_transactions FROM fraudulent_transactions GROUP BY user_id HAVING num_transactions > 2;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions WHERE resolution_status = 'dismissed' AND (flag_reason LIKE '%fraud%' OR flag_reason LIKE '%suspicious%');",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT ft.transaction_id, sp.pattern_description, CASE WHEN ft.resolution_status = 'resolved' THEN 'Resolved' ELSE 'Pending' END AS resolution_status FROM flagged_transactions ft JOIN suspicious_patterns sp ON ft.transaction_id = sp.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT pattern_description, AVG(threshold) AS avg_threshold FROM suspicious_patterns GROUP BY pattern_description HAVING AVG(threshold) > 0.3;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(transaction_id) AS num_transactions FROM fraudulent_transactions GROUP BY user_id HAVING COUNT(transaction_id) > 3;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT ft.transaction_id, ft.flag_reason, sp.pattern_description FROM flagged_transactions ft JOIN suspicious_patterns sp ON ft.transaction_id = sp.transaction_id WHERE sp.threshold > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE fraudulent_transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    is_suspicious BOOLEAN\n);\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_description VARCHAR,\n    threshold DECIMAL,\n    flagged_date TIMESTAMP,\n    is_resolved BOOLEAN\n);\n\nCREATE TABLE flagged_transactions (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason VARCHAR,\n    flag_date TIMESTAMP,\n    resolution_status ENUM('resolved', 'pending', 'dismissed')\n);\n\n### STATEMENT\n\nSELECT * FROM flagged_transactions WHERE resolution_status = 'pending' ORDER BY flag_date ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM users",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM flags",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_id, flag_description FROM flags",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_type FROM flags",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM flag_transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_id, transaction_id FROM flag_transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_date FROM flag_transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT account_id, is_flagged FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, first_name, last_name, email FROM users",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount, transaction_date FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_id, flag_description, flag_type FROM flags",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_id, flag_description, flag_type FROM flags",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, first_name, last_name, email FROM users",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE amount > 100",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE transaction_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE is_flagged = TRUE",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE phone_number LIKE '%123%'",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount, transaction_date FROM transactions WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions JOIN users ON transactions.account_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT transactions.transaction_id, users.first_name, users.last_name, transactions.amount FROM transactions JOIN users ON transactions.account_id = users.user_id WHERE transactions.amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT transactions.transaction_id, users.first_name, users.last_name, flags.flag_description FROM transactions JOIN users ON transactions.account_id = users.user_id JOIN flag_transactions ON transactions.transaction_id = flag_transactions.transaction_id JOIN flags ON flag_transactions.flag_id = flags.flag_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, first_name, last_name, email FROM users WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE LOWER(first_name) LIKE '%john%';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_type, COUNT(*) AS flag_count FROM flags JOIN flag_transactions ON flags.flag_id = flag_transactions.flag_id GROUP BY flag_type;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT users.first_name, COUNT(*) AS transaction_count FROM transactions JOIN users ON transactions.account_id = users.user_id GROUP BY users.first_name;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_amount FROM transactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS avg_transaction_amount FROM transactions GROUP BY user_id HAVING AVG(amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT transaction_id, MIN(amount) AS min_amount, MAX(amount) AS max_amount FROM transactions GROUP BY transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT flag_description, COUNT(*) AS flag_transaction_count FROM flags JOIN flag_transactions ON flags.flag_id = flag_transactions.flag_id GROUP BY flag_description;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY last_name ASC, first_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT * FROM transactions ORDER BY amount DESC, transaction_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) AS largest_transaction FROM transactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(amount) AS smallest_transaction FROM transactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id UUID PRIMARY KEY,\n    amount DECIMAL,\n    transaction_date TIMESTAMP,\n    account_id UUID,\n    is_flagged BOOLEAN\n)\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE flags (\n    flag_id UUID PRIMARY KEY,\n    flag_description TEXT,\n    flag_type VARCHAR(50)\n)\n\nCREATE TABLE flag_transactions (\n    flag_id UUID,\n    transaction_id UUID,\n    flag_date TIMESTAMP,\n    FOREIGN KEY (flag_id) REFERENCES flags(flag_id),\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(CASE WHEN amount > 1000 THEN amount ELSE 0 END) AS total_high_value_transactions FROM transactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM transactions WHERE customer_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM transactions WHERE customer_id = 456 AND is_suspicious = true;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customers WHERE is_verified = false;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT * FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT pattern_name, pattern_description FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT * FROM transaction_flags WHERE transaction_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT flag_reason FROM transaction_flags WHERE flag_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT category_name, category_description FROM flag_categories;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT category_id, category_name FROM flag_categories WHERE category_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.transaction_amount, f.flag_reason FROM transactions t JOIN transaction_flags f ON t.transaction_id = f.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(t.transaction_amount) AS total_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, sp.pattern_name FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN suspicious_patterns sp ON t.transaction_id = sp.pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, tp.pattern_name FROM customers c JOIN transactions t ON c.customer_id = t.customer_id JOIN transaction_flags tf ON t.transaction_id = tf.transaction_id JOIN flag_categories fc ON tf.flag_id = fc.category_id JOIN suspicious_patterns tp ON tf.flag_id = tp.pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, t.transaction_date, CASE WHEN t.is_suspicious THEN 'Suspicious' ELSE 'Normal' END AS transaction_status FROM transactions t;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(t.transaction_id) AS transaction_count FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING transaction_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(t.transaction_amount) AS max_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING max_transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(t.transaction_amount) AS avg_transaction_amount FROM customers c JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING avg_transaction_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM transactions WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customers WHERE is_verified = true;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT pattern_name, pattern_description FROM suspicious_patterns;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT flag_reason FROM transaction_flags WHERE transaction_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT category_name, category_description FROM flag_categories;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT customer_name, transaction_amount FROM customers INNER JOIN transactions ON customers.customer_id = transactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT t.transaction_amount, c.customer_email FROM transactions t INNER JOIN customers c ON t.customer_id = c.customer_id WHERE t.is_suspicious = true;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT t.transaction_date, p.pattern_description FROM transactions t INNER JOIN suspicious_patterns p ON t.transaction_id = p.pattern_id;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT f.flag_reason, c.category_name FROM transaction_flags f INNER JOIN flag_categories c ON f.flag_id = c.category_id WHERE f.transaction_id = 3001;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, t.transaction_amount, f.flag_reason FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id INNER JOIN transaction_flags f ON t.transaction_id = f.transaction_id WHERE f.flag_id = 4001;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT t.transaction_id, p.pattern_name, f.flag_reason FROM transactions t INNER JOIN suspicious_patterns p ON t.transaction_id = p.pattern_id INNER JOIN transaction_flags f ON t.transaction_id = f.transaction_id WHERE t.customer_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(t.transaction_id) AS total_transactions FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING total_transactions > 5;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(t.transaction_amount) AS avg_transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE t.is_suspicious = true GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MAX(t.transaction_amount) AS max_transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, MIN(t.transaction_amount) AS min_transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE c.is_verified = true GROUP BY c.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT DISTINCT c.customer_name FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE t.is_suspicious = false;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, COUNT(t.transaction_id) AS total_transactions FROM customers c LEFT JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name ORDER BY total_transactions DESC;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, AVG(t.transaction_amount) AS avg_transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id WHERE c.customer_name LIKE 'A%' GROUP BY c.customer_name HAVING avg_transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP,\n    customer_id INT,\n    is_suspicious BOOLEAN\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR,\n    customer_email VARCHAR,\n    customer_phone VARCHAR,\n    is_verified BOOLEAN\n);\n\n\nCREATE TABLE suspicious_patterns (\n    pattern_id INT PRIMARY KEY,\n    pattern_name VARCHAR,\n    pattern_description VARCHAR,\n);\n\n\nCREATE TABLE transaction_flags (\n    flag_id INT PRIMARY KEY,\n    transaction_id INT,\n    flag_reason TEXT,\n);\n\n\nCREATE TABLE flag_categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR,\n    category_description TEXT,\n);\n\n### STATEMENT\n\nSELECT c.customer_name, SUM(t.transaction_amount) AS total_transaction_amount FROM customers c INNER JOIN transactions t ON c.customer_id = t.customer_id GROUP BY c.customer_name HAVING total_transaction_amount > 5000;"
]