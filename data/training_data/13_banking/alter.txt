<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>ALTER TABLE Banking_Accounts ADD COLUMN bank_name VARCHAR(100);</stat><divider><t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>alter table banking_accounts add column bank_name varchar(100);</stat><divider><t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>ALTER TABLE Banking_Accounts ALTER COLUMN balance TYPE DECIMAL(12,2);</stat><divider><t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>alter table banking_accounts alter column balance type decimal(12,2);</stat><divider><t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>ALTER TABLE Banking_Accounts DROP COLUMN account_type;</stat><divider><t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><stat>alter table banking_accounts drop column account_type;</stat><divider><t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><stat>ALTER TABLE accounts ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><stat>alter table accounts add column email varchar(100);</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><stat>ALTER TABLE accounts ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><stat>alter table accounts add column email varchar(100);</stat><divider><t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><stat>ALTER TABLE transactions ADD COLUMN description VARCHAR(255);</stat><divider><t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><stat>alter table transactions add column description varchar(255);</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><stat>ALTER TABLE transactions ADD COLUMN description VARCHAR(255);</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><stat>alter table transactions add column description varchar(255);</stat><divider><t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><stat>ALTER TABLE accounts MODIFY COLUMN owner_id INT NOT NULL;</stat><divider><t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><stat>alter table accounts modify column owner_id int not null;</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><stat>ALTER TABLE accounts MODIFY COLUMN owner_id INT NOT NULL;</stat><divider><t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><stat>alter table accounts modify column owner_id int not null;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>ALTER TABLE customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>ALTER TABLE customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>ALTER TABLE customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>ALTER TABLE customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>ALTER TABLE customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>ALTER TABLE customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>ALTER TABLE accounts ADD COLUMN account_type VARCHAR(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>alter table accounts add column account_type varchar(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>ALTER TABLE accounts ADD COLUMN account_type VARCHAR(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>alter table accounts add column account_type varchar(20);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>ALTER TABLE accounts ADD COLUMN account_type VARCHAR(20);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>alter table accounts add column account_type varchar(20);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>ALTER TABLE accounts ADD COLUMN account_type VARCHAR(20);</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>alter table accounts add column account_type varchar(20);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>ALTER TABLE accounts ADD COLUMN account_type VARCHAR(20);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>alter table accounts add column account_type varchar(20);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>ALTER TABLE accounts ADD COLUMN account_type VARCHAR(20);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>alter table accounts add column account_type varchar(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>ALTER TABLE transactions ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>alter table transactions add column description text;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>ALTER TABLE transactions ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>alter table transactions add column description text;</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>ALTER TABLE transactions ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><stat>alter table transactions add column description text;</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>ALTER TABLE transactions ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>alter table transactions add column description text;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>ALTER TABLE transactions ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>alter table transactions add column description text;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>ALTER TABLE transactions ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><stat>alter table transactions add column description text;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Customers ADD COLUMN address VARCHAR(100);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table customers add column address varchar(100);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Accounts DROP COLUMN balance;</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table accounts drop column balance;</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>ALTER TABLE Loans MODIFY COLUMN status VARCHAR(50);</stat><divider><t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><stat>alter table loans modify column status varchar(50);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE customers ADD COLUMN date_of_birth DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table customers add column date_of_birth date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE accounts ADD COLUMN interest_rate DECIMAL(5, 2);</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table accounts add column interest_rate decimal(5, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><stat>alter table branches add column established_date date;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>ALTER TABLE branches ADD COLUMN established_date DATE;</stat><divider><t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><stat>alter table branches add column established_date date;</stat>