[
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE loan_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT amount, interest_rate FROM Loans WHERE approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE interest_rate BETWEEN 3.5 AND 5.0;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, approval_status FROM Loans WHERE interest_rate < 3.0;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount FROM Loans WHERE approval_status = 'pending' OR approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(amount) FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, SUM(amount) FROM Loans GROUP BY loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT approval_status, COUNT(*) FROM Loans GROUP BY approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id FROM Loans WHERE approval_status NOT IN ('rejected', 'cancelled');",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount = (SELECT MAX(amount) FROM Loans);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE amount = (SELECT MIN(amount) FROM Loans);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans ORDER BY interest_rate DESC;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, approval_status FROM Loans ORDER BY loan_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, approval_status FROM Loans LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Loans WHERE approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, approval_status FROM Loans WHERE approval_status = 'approved' LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, approval_status FROM Loans UNION SELECT loan_id, approval_status FROM Loans WHERE approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, approval_status FROM Loans INTERSECT SELECT loan_id, approval_status FROM Loans WHERE amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount > 10000 AND interest_rate < 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE approval_status = 'Approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status = 'Pending' OR approval_status = 'Rejected'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE amount >= 5000 AND approval_status = 'Approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE interest_rate BETWEEN 4 AND 6",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status <> 'Rejected'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount FROM Loans WHERE interest_rate < 7 ORDER BY amount DESC",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE amount > 20000 ORDER BY interest_rate ASC",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE approval_status = 'Approved' AND amount <= 15000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE amount BETWEEN 10000 AND 20000 ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount > 5000 OR interest_rate < 4 AND approval_status = 'Pending'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE amount >= 10000 AND interest_rate < 6 AND approval_status = 'Approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE amount < 30000 AND interest_rate > 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE amount < 15000 OR approval_status = 'Pending'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE approval_status = 'Rejected' ORDER BY amount DESC",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans WHERE amount <= 10000 AND approval_status <> 'Rejected'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE interest_rate < 4 OR approval_status = 'Approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount BETWEEN 15000 AND 25000 AND approval_status = 'Approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE approval_status = 'Rejected' AND interest_rate > 6",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nSELECT loan_id, amount FROM Loans WHERE interest_rate <= 6 ORDER BY loan_id ASC",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, approval_status FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT applicant_id, first_name, last_name, email FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate, approval_status FROM Loans WHERE interest_rate > 5;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT applicant_id, first_name, last_name, email FROM Applicants WHERE first_name = 'John';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Applicants WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, approval_status FROM Loans WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE interest_rate BETWEEN 3.5 AND 6;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans INNER JOIN Applicants ON Loans.loan_id = Applicants.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans LEFT JOIN Applicants ON Loans.loan_id = Applicants.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans RIGHT JOIN Applicants ON Loans.loan_id = Applicants.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, approval_status, first_name, last_name FROM Loans INNER JOIN Applicants ON Loans.loan_id = Applicants.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount > 10000 AND interest_rate < 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, amount FROM Loans WHERE approval_status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Applicants WHERE first_name = 'John' AND last_name = 'Doe'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, MAX(amount) FROM Loans GROUP BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans INNER JOIN Applicants ON Loans.loan_id = Applicants.loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Loans WHERE approval_status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, SUM(amount) FROM Loans GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status IN ('approved', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, AVG(interest_rate) FROM Loans GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, MIN(amount) FROM Loans GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE interest_rate >= 5 OR approval_status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, COUNT(*) FROM Loans GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount BETWEEN 5000 AND 10000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, SUM(interest_rate) FROM Loans WHERE approval_status = 'approved' GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Applicants WHERE email LIKE '%@domain.com'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, MAX(amount) FROM Loans WHERE approval_status = 'approved' GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT applicant_id, first_name, last_name, loan_id FROM Applicants INNER JOIN Loans ON Applicants.loan_id = Loans.loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status = 'pending' LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT loan_id, AVG(amount) FROM Loans GROUP BY loan_id ORDER BY loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status = 'rejected'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Loans",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT id, amount FROM Loans",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM Customers",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Applications",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT application_id, application_date FROM Applications",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT id, interest_rate FROM Loans",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM Customers",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Applications WHERE application_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT id, amount, interest_rate FROM Loans WHERE amount > 10000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, email FROM Customers WHERE first_name = 'John'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, last_name FROM Customers WHERE first_name = 'Jane'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Applications WHERE loan_id = 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount BETWEEN 5000 AND 10000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE email LIKE '%@gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT loan_id, application_date FROM Applications WHERE application_date < '2022-03-01'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name FROM Customers WHERE customer_id = 10",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE interest_rate < 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email FROM Customers",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Applications WHERE customer_id IN (1, 3, 5)",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE approval_status = 'APPROVED'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name FROM Customers WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Loans.id, Loans.amount, Loans.interest_rate, Customers.first_name, Customers.last_name FROM Loans JOIN Applications ON Loans.id = Applications.loan_id JOIN Customers ON Applications.customer_id = Customers.customer_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Applications.application_id, Applications.application_date, Customers.first_name, Customers.last_name, Loans.amount FROM Applications JOIN Customers ON Applications.customer_id = Customers.customer_id JOIN Loans ON Applications.loan_id = Loans.id WHERE Loans.amount > 5000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Customers.first_name, Customers.last_name, COUNT(Applications.customer_id) AS num_applications FROM Customers LEFT JOIN Applications ON Customers.customer_id = Applications.customer_id GROUP BY Customers.first_name, Customers.last_name",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, SUM(amount) AS total_loan_amount FROM Loans WHERE approval_status = 'APPROVED' GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Loans.id, Loans.amount, Loans.interest_rate, Customers.first_name, Customers.last_name FROM Loans JOIN Applications ON Loans.id = Applications.loan_id JOIN Customers ON Applications.customer_id = Customers.customer_id ORDER BY Loans.amount DESC",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Applications.application_id, Applications.application_date, Customers.first_name, Customers.last_name, Loans.amount FROM Applications JOIN Customers ON Applications.customer_id = Customers.customer_id JOIN Loans ON Applications.loan_id = Loans.id WHERE Loans.amount > 5000 ORDER BY Loans.amount ASC",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Customers WHERE customer_id IN (SELECT customer_id FROM Applications WHERE loan_id IN (SELECT id FROM Loans WHERE approval_status = 'APPROVED'))",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Loans.id, MIN(amount) AS min_amount, MAX(amount) AS max_amount, AVG(amount) AS avg_amount FROM Loans JOIN Applications ON Loans.id = Applications.loan_id JOIN Customers ON Applications.customer_id = Customers.customer_id GROUP BY Loans.id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, first_name, last_name, email, SUM(amount) AS total_loan_amount FROM Customers JOIN Applications ON Customers.customer_id = Applications.customer_id JOIN Loans ON Applications.loan_id = Loans.id WHERE approval_status = 'APPROVED' GROUP BY customer_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Loans.id, Loans.amount, Loans.interest_rate, Customers.first_name, Customers.last_name FROM Loans JOIN Applications ON Loans.id = Applications.loan_id JOIN Customers ON Applications.customer_id = Customers.customer_id WHERE Loans.approval_status = 'APPROVED'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Applications.application_id, Applications.application_date, Customers.first_name, Customers.last_name, Loans.amount FROM Applications JOIN Customers ON Applications.customer_id = Customers.customer_id JOIN Loans ON Applications.loan_id = Loans.id WHERE Loans.amount > 5000 AND Loans.approval_status = 'APPROVED'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Customers WHERE customer_id IN (SELECT customer_id FROM Applications WHERE loan_id IN (SELECT id FROM Loans WHERE approval_status = 'APPROVED')) ORDER BY last_name, first_name",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Applications)",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Loans.id, Loans.amount, Loans.interest_rate, Applications.application_date FROM Loans JOIN Applications ON Loans.id = Applications.loan_id WHERE Applications.application_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT Loans.id, Loans.amount, Loans.interest_rate, Applications.application_date FROM Loans JOIN Applications ON Loans.id = Applications.loan_id WHERE Applications.application_date < '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT customer_id) AS num_customers FROM Applications",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Customers WHERE EXISTS (SELECT 1 FROM Applications WHERE Applications.customer_id = Customers.customer_id)",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nSELECT customer_id, SUM(amount) AS total_loan_amount FROM Loans GROUP BY customer_id HAVING total_loan_amount > 10000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, approval_status FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Customers WHERE customer_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT payment_amount, payment_date FROM Payments;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT payment_amount FROM Payments WHERE payment_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_position FROM Employees;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_department FROM Employees WHERE employee_position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, interest_rate FROM Loans WHERE approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM Customers WHERE customer_id = 2002;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT payment_amount, payment_date FROM Payments WHERE loan_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Employees WHERE employee_department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_phone = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, approval_status FROM Loans WHERE loan_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM Customers WHERE customer_email = 'example@email.com';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_amount FROM Payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Employees WHERE employee_position = 'Analyst';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE approval_status = 'denied';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM Customers WHERE customer_id = 3003;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT payment_amount FROM Payments WHERE payment_date = '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE loan_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM Customers WHERE customer_phone LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_position FROM Employees WHERE employee_department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Payment.payment_id, Payments.loan_id, payment_amount FROM Payments JOIN Loans ON Payment.loan_id = Payments.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT Customers.customer_name, Loans.loan_amount, Payments.payment_amount FROM Customers JOIN Loans ON Customers.customer_id = Loans.loan_id JOIN Payments ON Loans.loan_id = Payments.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM Customers WHERE customer_name LIKE '%Smith%' AND customer_email LIKE '%gmail%';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate, approval_status FROM Loans WHERE interest_rate BETWEEN 2.5 AND 5.0;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_position FROM Employees WHERE employee_position = 'Manager';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, payment_amount FROM Customers JOIN Loans ON Customers.customer_id = Loans.customer_id JOIN Payments ON Loans.loan_id = Payments.loan_id WHERE payment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, payment_amount FROM Customers JOIN Loans ON Customers.customer_id = Loans.customer_id JOIN Payments ON Loans.loan_id = Payments.loan_id ORDER BY payment_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_position FROM Employees WHERE employee_department = 'HR' OR employee_department = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, payment_date FROM Customers JOIN Loans ON Customers.customer_id = Loans.customer_id JOIN Payments ON Loans.loan_id = Payments.loan_id WHERE payment_amount >= 5000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate, approval_status FROM Loans WHERE loan_amount >= 5000 AND interest_rate <= 3.0;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_position, employee_department FROM Employees WHERE employee_name LIKE '%John%' AND employee_position LIKE '%Manager%';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM Customers WHERE customer_email NOT LIKE '%yahoo.com%';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, approval_status FROM Loans WHERE approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, payment_date FROM Customers JOIN Loans ON Customers.customer_id = Loans.customer_id JOIN Payments ON Loans.loan_id = Payments.loan_id WHERE payment_date BETWEEN '2022-05-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT employee_name, employee_position, employee_department FROM Employees WHERE employee_position != 'Intern';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, payment_amount FROM Customers JOIN Loans ON Customers.customer_id = Loans.customer_id JOIN Payments ON Loans.loan_id = Payments.loan_id WHERE payment_amount <= 1000;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, interest_rate FROM Loans WHERE loan_amount >= 10000 AND interest_rate >= 4.0;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, interest_rate FROM Loans;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, interest_rate FROM Loans WHERE approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Borrowers;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM Borrowers;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Lenders;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT company_name, location FROM Lenders;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM LoanApplications;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, lender_id, loan_id, application_date FROM LoanApplications;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Payments;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, payment_date FROM Payments;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, lender_id, sum(amount) as total_amount_paid FROM LoanApplications GROUP BY borrower_id, lender_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Borrowers WHERE last_name LIKE 'S%';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE interest_rate > 5;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT lender_id, count(application_id) as num_applications FROM LoanApplications GROUP BY lender_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT lender_id, sum(amount) as total_loan_amount FROM LoanApplications GROUP BY lender_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT payment_date, sum(amount) as total_payments FROM Payments GROUP BY payment_date;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, count(application_id) as num_applications FROM LoanApplications WHERE status='Processing' GROUP BY borrower_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT company_name, sum(amount) as total_loans_approved FROM Lenders INNER JOIN LoanApplications ON Lenders.lender_id = LoanApplications.lender_id WHERE LoanApplications.status='Approved' GROUP BY company_name;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, sum(amount) as total_payments_received FROM Payments GROUP BY loan_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT lender_id, avg(amount) as avg_loan_amount FROM LoanApplications GROUP BY lender_id;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Loans WHERE amount > 10000 AND interest_rate < 5",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email FROM Borrowers WHERE borrower_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT company_name, location, website FROM Lenders WHERE lender_id = 3",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, approval_status FROM Loans WHERE approval_status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, lender_id, loan_id, application_date FROM LoanApplications WHERE status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Loans L JOIN Borrowers B ON L.loan_id = B.borrower_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM Lenders L INNER JOIN LoanApplications LA ON L.lender_id = LA.lender_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, amount, payment_date FROM Loans L LEFT JOIN Payments P ON L.loan_id = P.loan_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name, email, application_date FROM Borrowers B JOIN LoanApplications LA ON B.borrower_id = LA.borrower_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT lender_id, company_name, location, website, status FROM Lenders L JOIN LoanApplications LA ON L.lender_id = LA.lender_id WHERE status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT amount, payment_date FROM Loans L JOIN Payments P ON L.loan_id = P.loan_id WHERE L.amount > 5000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_amount FROM Loans",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(interest_rate) AS avg_interest_rate FROM Loans",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_loans FROM Loans WHERE approval_status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, COUNT(application_id) AS application_count FROM LoanApplications GROUP BY borrower_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT location, COUNT(*) AS application_count FROM Lenders L JOIN LoanApplications LA ON L.lender_id = LA.lender_id GROUP BY location",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, SUM(amount) AS total_amount FROM LoanApplications GROUP BY borrower_id HAVING SUM(amount) > 20000",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT loan_id, MAX(amount) AS max_amount FROM Loans",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT company_name, MIN(interest_rate) AS min_interest_rate FROM Lenders L JOIN LoanApplications LA ON L.lender_id = LA.lender_id",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nSELECT borrower_id, AVG(interest_rate) AS avg_interest_rate FROM Borrowers B JOIN LoanApplications LA ON B.borrower_id = LA.borrower_id"
]