[
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1000, 0.05, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1000, interest_rate = 0.05, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1500, 0.03, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1500, interest_rate = 0.03, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2000, 0.02, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 2000, interest_rate = 0.02, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1200, 0.04, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1200, interest_rate = 0.04, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1800, 0.06, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1800, interest_rate = 0.06, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2200, 0.03, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 2200, interest_rate = 0.03, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1300, 0.07, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1300, interest_rate = 0.07, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1600, 0.08, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1600, interest_rate = 0.08, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2400, 0.05, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 2400, interest_rate = 0.05, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1100, 0.02, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1100, interest_rate = 0.02, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1900, 0.04, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1900, interest_rate = 0.04, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2100, 0.06, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 2100, interest_rate = 0.06, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1400, 0.03, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1400, interest_rate = 0.03, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1700, 0.07, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1700, interest_rate = 0.07, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2300, 0.08, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 2300, interest_rate = 0.08, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1250, 0.05, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1250, interest_rate = 0.05, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1550, 0.03, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1550, interest_rate = 0.03, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1750, 0.02, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 1750, interest_rate = 0.02, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2150, 0.04, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 2150, interest_rate = 0.04, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2450, 0.06, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 2450, interest_rate = 0.06, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (1000.00, 5.5, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 1500.00, interest_rate = 4.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (2000.00, 6.0, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 1800.00, interest_rate = 5.0, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (3000.00, 7.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 2800.00, interest_rate = 6.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (4000.00, 8.0, 'rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 4200.00, interest_rate = 7.5, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (5000.00, 9.0, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 4800.00, interest_rate = 8.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (6000.00, 10.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 5800.00, interest_rate = 9.5, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (7000.00, 11.0, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 6800.00, interest_rate = 10.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (8000.00, 12.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 7800.00, interest_rate = 11.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (9000.00, 13.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 8800.00, interest_rate = 12.5, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (10000.00, 14.0, 'rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 9800.00, interest_rate = 13.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (11000.00, 15.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 10800.00, interest_rate = 14.5, approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (12000.00, 16.0, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 11800.00, interest_rate = 15.5, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status...':",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (15000.00, 18.0, 'rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 14800.00, interest_rate = 17.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (16000.00, 19.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 15800.00, interest_rate = 18.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (17000.00, 20.0, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 16800.00, interest_rate = 19.5, approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (18000.00, 21.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 17800.00, interest_rate = 20.5, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (19000.00, 22.0, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 18800.00, interest_rate = 21.5, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n  loan_id SERIAL PRIMARY KEY,\n  amount DECIMAL NOT NULL,\n  interest_rate DECIMAL NOT NULL,\n  approval_status VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO Loans (amount, interest_rate, approval_status) VALUES (20000.00, 23.0, 'rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 19800.00, interest_rate = 22.5, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (1, 5000, 5.5, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (2, 10000, 4.8, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (3, 7500, 6.2, 'rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (4, 12000, 4.5, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (5, 8000, 5.0, 'approved') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (6, 9500, 6.5, 'pending') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (7, 11000, 5.2, 'rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = EXCLUDED.amount, interest_rate = EXCLUDED.interest_rate, approval_status = EXCLUDED.approval_status;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nUPSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (8, 7000, 4.2,...   [truncated]   ",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (1, 10000, 5.2, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 10000, interest_rate = 5.2, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (2, 15000, 4.8, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 15000, interest_rate = 4.8, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (3, 20000, 6.0, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 20000, interest_rate = 6.0, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (4, 12000, 4.5, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 12000, interest_rate = 4.5, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (5, 18000, 6.5, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 18000, interest_rate = 6.5, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (6, 25000, 7.2, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 25000, interest_rate = 7.2, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (7, 30000, 3.8, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 30000, interest_rate = 3.8, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (8, 22000, 5.9, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET amount = 22000, interest_rate = 5.9, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (9, 26000, 7.0, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET amount = 26000, interest_rate = 7.0, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (10, 50000, 8.3, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET amount = 50000, interest_rate = 8.3, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (1, 'John', 'Doe', 'john.doe@example.com', 1) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com', loan_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (2, 'Jane', 'Smith', 'jane.smith@example.com', 2) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', email = 'jane.smith@example.com', loan_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (3, 'Alice', 'Johnson', 'alice.johnson@example.com', 3) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', email = 'alice.johnson@example.com', loan_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (4, 'Bob', 'Anderson', 'bob.anderson@example.com', 4) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Bob', last_name = 'Anderson', email = 'bob.anderson@example.com', loan_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (5, 'Sarah', 'Williams', 'sarah.williams@example.com', 5) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Sarah', last_name = 'Williams', email = 'sarah.williams@example.com', loan_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (6, 'Michael', 'Brown', 'michael.brown@example.com', 6) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Michael', last_name = 'Brown', email = 'michael.brown@example.com', loan_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (7, 'Emily', 'Davis', 'emily.davis@example.com', 7) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Emily', last_name = 'Davis', email = 'emily.davis@example.com', loan_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (8, 'James', 'Clark', 'james.clark@example.com', 8) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'James', last_name = 'Clark', email = 'james.clark@example.com', loan_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (9, 'Laura', 'Martinez', 'laura.martinez@example.com', 9) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Laura', last_name = 'Martinez', email = 'laura.martinez@example.com', loan_id = 9;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    loan_id SERIAL PRIMARY KEY,\n    amount DECIMAL NOT NULL,\n    interest_rate DECIMAL NOT NULL,\n    approval_status VARCHAR(50) NOT NULL\n);\n\nCREATE TABLE Applicants (\n    applicant_id SERIAL PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL,\n    loan_id INT REFERENCES Loans(loan_id)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, first_name, last_name, email, loan_id) VALUES (10, 'Kevin', 'Garcia', 'kevin.garcia@example.com', 10) ON CONFLICT (applicant_id) DO UPDATE SET first_name = 'Kevin', last_name = 'Garcia', email = 'kevin.garcia@example.com', loan_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (1, 1000, 0.05, 'pending') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (2, 1500, 0.03, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (3, 2000, 0.07, 'rejected') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (4, 1200, 0.06, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (5, 1800, 0.04, 'pending') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (6, 2500, 0.08, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (7, 3000, 0.09, 'rejected') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (8, 1400, 0.05, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (9, 1600, 0.06, 'pending') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (10, 2200, 0.07, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (11, 1900, 0.04, 'pending') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (12, 2700, 0.06, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (13, 3200, 0.08, 'rejected') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (14, 1300, 0.05, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (15, 2400, 0.07, 'pending') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (16, 2000, 0.06, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (17, 2900, 0.09, 'rejected') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (18, 1800, 0.05, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (19, 2100, 0.07, 'pending') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nINSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (20, 2800, 0.08, 'approved') ON CONFLICT (id) DO UPDATE SET amount = excluded.amount, interest_rate = excluded.interest_rate, approval_status = excluded.approval_status",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (1, 5000, 0.05, 'pending') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (2, 7500, 0.03, 'approved') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (3, 10000, 0.06, 'rejected') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (4, 3000, 0.04, 'pending') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (5, 6000, 0.08, 'approved') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (6, 9000, 0.07, 'rejected') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (7, 2000, 0.05, 'pending') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (8, 4000, 0.09, 'approved') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (9, 8000, 0.06, 'rejected') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Loans (id, amount, interest_rate, approval_status) VALUES (10, 12000, 0.07, 'pending') ON DUPLICATE KEY UPDATE amount = VALUES(amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email) VALUES (101, 'John', 'Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email) VALUES (102, 'Jane', 'Smith', 'jane.smith@example.com') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email) VALUES (103, 'Alice', 'Johnson', 'alice.johnson@example.com') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email) VALUES (104, 'Bob', 'Brown', 'bob.brown@example.com') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Customers (customer_id, first_name, last_name, email) VALUES (105, 'Sarah', 'Williams', 'sarah.williams@example.com') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Applications (application_id, customer_id, loan_id, application_date) VALUES (201, 101, 1, '2022-01-15') ON DUPLICATE KEY UPDATE customer_id = VALUES(customer_id), loan_id = VALUES(loan_id), application_date = VALUES(application_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Applications (application_id, customer_id, loan_id, application_date) VALUES (202, 102, 2, '2022-02-20') ON DUPLICATE KEY UPDATE customer_id = VALUES(customer_id), loan_id = VALUES(loan_id), application_date = VALUES(application_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Applications (application_id, customer_id, loan_id, application_date) VALUES (203, 103, 3, '2022-03-25') ON DUPLICATE KEY UPDATE customer_id = VALUES(customer_id), loan_id = VALUES(loan_id), application_date = VALUES(application_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Applications (application_id, customer_id, loan_id, application_date) VALUES (204, 104, 4, '2022-04-30') ON DUPLICATE KEY UPDATE customer_id = VALUES(customer_id), loan_id = VALUES(loan_id), application_date = VALUES(application_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n    id INT PRIMARY KEY,\n    amount DECIMAL,\n    interest_rate DECIMAL,\n    approval_status VARCHAR(10)\n)\n\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    first_name VARCHAR(50),\n    last_name VARCHAR(50),\n    email VARCHAR(100)\n)\n\n\nCREATE TABLE Applications (\n    application_id INT PRIMARY KEY,\n    customer_id INT,\n    loan_id INT,\n    application_date DATE,\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),\n    FOREIGN KEY (loan_id) REFERENCES Loans(id)\n)\n\n### STATEMENT\n\nUPSERT INTO Applications (application_id, customer_id, loan_id, application_date) VALUES (205, 105, 5, '2022-05-05') ON DUPLICATE KEY UPDATE customer_id = VALUES(customer_id), loan_id = VALUES(loan_id), application_date = VALUES(application_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (1, 1000.00, 0.05, 'Pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), customer_phone = VALUES(customer_phone);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (1, 1, 500.00, '2022-11-15') ON DUPLICATE KEY UPDATE payment_amount = VALUES(payment_amount), payment_date = VALUES(payment_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (1, 'Alice Smith', 'Manager', 'Finance') ON DUPLICATE KEY UPDATE employee_name = VALUES(employee_name), employee_position = VALUES(employee_position), employee_department = VALUES(employee_department);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (2, 2000.00, 0.03, 'Approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (2, 'Jane Doe', 'jane.doe@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), customer_phone = VALUES(customer_phone);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (2, 1, 300.00, '2022-12-05') ON DUPLICATE KEY UPDATE payment_amount = VALUES(payment_amount), payment_date = VALUES(payment_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (2, 'Bob Johnson', 'Analyst', 'Operations') ON DUPLICATE KEY UPDATE employee_name = VALUES(employee_name), employee_position = VALUES(employee_position), employee_department = VALUES(employee_department);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (3, 1500.00, 0.04, 'Pending') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (3, 'Alice Smith', 'alice.smith@example.com', '222-333-4444') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), customer_phone = VALUES(customer_phone);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (3, 2, 700.00, '2022-12-20') ON DUPLICATE KEY UPDATE payment_amount = VALUES(payment_amount), payment_date = VALUES(payment_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (3, 'Charlie Brown', 'Developer', 'Technology') ON DUPLICATE KEY UPDATE employee_name = VALUES(employee_name), employee_position = VALUES(employee_position), employee_department = VALUES(employee_department);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (4, 3000.00, 0.06, 'Approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (4, 'Eve Johnson', 'eve.johnson@example.com', '555-666-7777') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), customer_phone = VALUES(customer_phone);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (4, 3, 1200.00, '2023-01-10') ON DUPLICATE KEY UPDATE payment_amount = VALUES(payment_amount), payment_date = VALUES(payment_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (4, 'David Lee', 'Manager', 'Marketing') ON DUPLICATE KEY UPDATE employee_name = VALUES(employee_name), employee_position = VALUES(employee_position), employee_department = VALUES(employee_department);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (5, 2500.00, 0.04, 'Approved') ON DUPLICATE KEY UPDATE loan_amount = VALUES(loan_amount), interest_rate = VALUES(interest_rate), approval_status = VALUES(approval_status);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (5, 'Grace Kim', 'grace.kim@example.com', '999-888-7777') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), customer_phone = VALUES(customer_phone);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (5, 4, 850.00, '2023-01-25') ON DUPLICATE KEY UPDATE payment_amount = VALUES(payment_amount), payment_date = VALUES(payment_date);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (5, 'Emily White', 'Analyst', 'Finance') ON DUPLICATE KEY UPDATE employee_name = VALUES(employee_name), employee_position = VALUES(employee_position), employee_department = VALUES(employee_department);",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (1, 10000, 5.5, 'approved') ON DUPLICATE KEY UPDATE loan_amount=10000, interest_rate=5.5, approval_status='approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (2, 15000, 6.2, 'pending') ON DUPLICATE KEY UPDATE loan_amount=15000, interest_rate=6.2, approval_status='pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (3, 20000, 4.8, 'approved') ON DUPLICATE KEY UPDATE loan_amount=20000, interest_rate=4.8, approval_status='approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (4, 12000, 5.8, 'rejected') ON DUPLICATE KEY UPDATE loan_amount=12000, interest_rate=5.8, approval_status='rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (5, 18000, 6.5, 'approved') ON DUPLICATE KEY UPDATE loan_amount=18000, interest_rate=6.5, approval_status='approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (6, 13000, 4.5, 'pending') ON DUPLICATE KEY UPDATE loan_amount=13000, interest_rate=4.5, approval_status='pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (7, 25000, 7.2, 'approved') ON DUPLICATE KEY UPDATE loan_amount=25000, interest_rate=7.2, approval_status='approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (8, 16000, 5.3, 'pending') ON DUPLICATE KEY UPDATE loan_amount=16000, interest_rate=5.3, approval_status='pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (9, 22000, 6.1, 'approved') ON DUPLICATE KEY UPDATE loan_amount=22000, interest_rate=6.1, approval_status='approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, loan_amount, interest_rate, approval_status) VALUES (10, 14000, 5.6, 'rejected') ON DUPLICATE KEY UPDATE loan_amount=14000, interest_rate=5.6, approval_status='rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE customer_name='John Doe', customer_email='john.doe@example.com', customer_phone='123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (2, 'Jane Smith', 'jane.smith@example.com', '987-654-3210') ON DUPLICATE KEY UPDATE customer_name='Jane Smith', customer_email='jane.smith@example.com', customer_phone='987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (3, 'Alice Johnson', 'alice.johnson@example.com', '456-789-0123') ON DUPLICATE KEY UPDATE customer_name='Alice Johnson', customer_email='alice.johnson@example.com', customer_phone='456-789-0123';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (4, 'Bob Brown', 'bob.brown@example.com', '789-012-3456') ON DUPLICATE KEY UPDATE customer_name='Bob Brown', customer_email='bob.brown@example.com', customer_phone='789-012-3456';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Customers (customer_id, customer_name, customer_email, customer_phone) VALUES (5, 'Eva Wilson', 'eva.wilson@example.com', '321-654-9870') ON DUPLICATE KEY UPDATE customer_name='Eva Wilson', customer_email='eva.wilson@example.com', customer_phone='321-654-9870';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (1, 1, 5000, '2023-09-15') ON DUPLICATE KEY UPDATE loan_id=1, payment_amount=5000, payment_date='2023-09-15';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (2, 2, 6000, '2023-10-20') ON DUPLICATE KEY UPDATE loan_id=2, payment_amount=6000, payment_date='2023-10-20';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (3, 3, 7000, '2023-11-25') ON DUPLICATE KEY UPDATE loan_id=3, payment_amount=7000, payment_date='2023-11-25';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (4, 4, 4000, '2023-12-30') ON DUPLICATE KEY UPDATE loan_id=4, payment_amount=4000, payment_date='2023-12-30';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, payment_amount, payment_date) VALUES (5, 5, 8000, '2024-01-05') ON DUPLICATE KEY UPDATE loan_id=5, payment_amount=8000, payment_date='2024-01-05';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (1, 'John Doe', 'Manager', 'Finance') ON DUPLICATE KEY UPDATE employee_name='John Doe', employee_position='Manager', employee_department='Finance';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (2, 'Jane Smith', 'Analyst', 'Sales') ON DUPLICATE KEY UPDATE employee_name='Jane Smith', employee_position='Analyst', employee_department='Sales';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (3, 'Alice Johnson', 'Developer', 'IT') ON DUPLICATE KEY UPDATE employee_name='Alice Johnson', employee_position='Developer', employee_department='IT';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (4, 'Bob Brown', 'Supervisor', 'Operations') ON DUPLICATE KEY UPDATE employee_name='Bob Brown', employee_position='Supervisor', employee_department='Operations';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n loan_amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(255)\n);\n\n\nCREATE TABLE Customers (\n customer_id INT PRIMARY KEY,\n customer_name VARCHAR(255),\n customer_email VARCHAR(255),\n customer_phone VARCHAR(20)\n);\n\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n payment_amount DECIMAL,\n payment_date DATE\n);\n\n\nCREATE TABLE Employees (\n employee_id INT PRIMARY KEY,\n employee_name VARCHAR(255),\n employee_position VARCHAR(255),\n employee_department VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO Employees (employee_id, employee_name, employee_position, employee_department) VALUES (5, 'Eva Wilson', 'HR Manager', 'Human Resources') ON DUPLICATE KEY UPDATE employee_name='Eva Wilson', employee_position='HR Manager', employee_department='Human Resources';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (1, 5000.00, 0.05, 'pending') ON DUPLICATE KEY UPDATE amount = 5000.00, interest_rate = 0.05, approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (2, 10000.00, 0.08, 'approved') ON DUPLICATE KEY UPDATE amount = 10000.00, interest_rate = 0.08, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (3, 7500.00, 0.06, 'rejected') ON DUPLICATE KEY UPDATE amount = 7500.00, interest_rate = 0.06, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (4, 12000.00, 0.09, 'approved') ON DUPLICATE KEY UPDATE amount = 12000.00, interest_rate = 0.09, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (5, 9000.00, 0.07, 'pending') ON DUPLICATE KEY UPDATE amount = 9000.00, interest_rate = 0.07, approval_status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (6, 11000.00, 0.085, 'approved') ON DUPLICATE KEY UPDATE amount = 11000.00, interest_rate = 0.085, approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (7, 6000.00, 0.055, 'rejected') ON DUPLICATE KEY UPDATE amount = 6000.00, interest_rate = 0.055, approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Lo...",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (1, 10000.00, 5.5, 'Pending') ON DUPLICATE KEY UPDATE amount = 10000.00, interest_rate = 5.5, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Loans (loan_id, amount, interest_rate, approval_status) VALUES (2, 15000.00, 6.0, 'Approved') ON DUPLICATE KEY UPDATE amount = 15000.00, interest_rate = 6.0, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Borrowers (borrower_id, first_name, last_name, email) VALUES (1, 'John', 'Doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE first_name = 'John', last_name = 'Doe', email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Borrowers (borrower_id, first_name, last_name, email) VALUES (2, 'Alice', 'Smith', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE first_name = 'Alice', last_name = 'Smith', email = 'alice.smith@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Lenders (lender_id, company_name, location, website) VALUES (1, 'ABC Lending', 'New York', 'www.abclending.com') ON DUPLICATE KEY UPDATE company_name = 'ABC Lending', location = 'New York', website = 'www.abclending.com';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Lenders (lender_id, company_name, location, website) VALUES (2, 'XYZ Finance', 'San Francisco', 'www.xyzfinance.com') ON DUPLICATE KEY UPDATE company_name = 'XYZ Finance', location = 'San Francisco', website = 'www.xyzfinance.com';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, borrower_id, lender_id, loan_id, application_date, status) VALUES (1, 1, 1, 1, '2022-01-15', 'Pending') ON DUPLICATE KEY UPDATE borrower_id = 1, lender_id = 1, loan_id = 1, application_date = '2022-01-15', status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (application_id, borrower_id, lender_id, loan_id, application_date, status) VALUES (2, 2, 2, 2, '2022-01-20', 'Approved') ON DUPLICATE KEY UPDATE borrower_id = 2, lender_id = 2, loan_id = 2, application_date = '2022-01-20', status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, amount, payment_date) VALUES (1, 1, 5000.00, '2022-02-01') ON DUPLICATE KEY UPDATE loan_id = 1, amount = 5000.00, payment_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Loans (\n loan_id INT PRIMARY KEY,\n amount DECIMAL,\n interest_rate DECIMAL,\n approval_status VARCHAR(50)\n);\n\nCREATE TABLE Borrowers (\n borrower_id INT PRIMARY KEY,\n first_name VARCHAR(50),\n last_name VARCHAR(50),\n email VARCHAR(100)\n);\n\nCREATE TABLE Lenders (\n lender_id INT PRIMARY KEY,\n company_name VARCHAR(100),\n location VARCHAR(100),\n website VARCHAR(200)\n);\n\nCREATE TABLE LoanApplications (\n application_id INT PRIMARY KEY,\n borrower_id INT,\n lender_id INT,\n loan_id INT,\n application_date DATE,\n status VARCHAR(50)\n);\n\nCREATE TABLE Payments (\n payment_id INT PRIMARY KEY,\n loan_id INT,\n amount DECIMAL,\n payment_date DATE\n);\n\n### STATEMENT\n\nINSERT INTO Payments (payment_id, loan_id, amount, payment_date) VALUES (2, 2, 7500.00, '2022-02-05') ON DUPLICATE KEY UPDATE loan_id = 2, amount = 7500.00, payment_date = '2022-02-05';"
]