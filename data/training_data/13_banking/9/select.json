[
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount FROM payments WHERE payment_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments WHERE payment_gateway = 'PayPal';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date FROM payments WHERE source_account_number = '1234567890';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_gateway FROM payments WHERE destination_account_number = '0987654321';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_gateway FROM payments WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date, source_account_number FROM payments WHERE amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments WHERE payment_gateway IN ('PayPal', 'Stripe');",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, destination_account_number FROM payments WHERE payment_date < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date, payment_gateway FROM payments WHERE amount >= 500 AND amount <= 1000;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments WHERE destination_account_number = '5432109876' AND payment_gateway = 'PayPal';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date, source_account_number FROM payments WHERE payment_date >= '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date FROM payments WHERE destination_account_number = '9876543210';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_date < '2022-02-28' OR payment_date > '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date, payment_gateway FROM payments WHERE source_account_number = '0987654321';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, destination_account_number FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date FROM payments WHERE payment_date < '2022-01-01' AND payment_gateway = 'Stripe';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_gateway FROM payments WHERE amount > 500 AND amount < 1000;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_date >= '2022-02-01' AND payment_date <= '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_date < NOW()",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount FROM payments WHERE amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments WHERE payment_gateway = 'Paypal' AND amount > 500",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM payments",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT DISTINCT payment_gateway FROM payments",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT source_account_number, destination_account_number FROM payments WHERE source_account_number = destination_account_number",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount FROM payments ORDER BY payment_date DESC",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, SUM(amount) AS total_amount FROM payments GROUP BY payment_id",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_amount FROM payments WHERE payment_date > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_gateway FROM payments WHERE payment_date < '2022-07-01' AND payment_gateway IN ('Paypal', 'Stripe')",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, source_account_number FROM payments WHERE source_account_number LIKE '123%' OR source_account_number LIKE '456%'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT source_account_number) AS unique_accounts FROM payments",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT destination_account_number, MAX(amount) AS max_amount FROM payments GROUP BY destination_account_number ORDER BY max_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount FROM payments WHERE payment_date > (SELECT MAX(payment_date) FROM payments)",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount FROM payments WHERE amount BETWEEN 500 AND 1000",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT destination_account_number, AVG(amount) AS avg_amount FROM payments GROUP BY destination_account_number HAVING avg_amount > 800",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_gateway FROM payments WHERE amount = (SELECT MAX(amount) FROM payments)",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT payment_id, amount, payment_date FROM payments WHERE payment_date = (SELECT MIN(payment_date) FROM payments)",
  "### TABLEDATA\n\nCREATE TABLE payments (\n    payment_id UUID PRIMARY KEY,\n    amount DOUBLE PRECISION,\n    payment_date TIMESTAMP,\n    payment_gateway VARCHAR(255),\n    source_account_number VARCHAR(20),\n    destination_account_number VARCHAR(20)\n)\n\n### STATEMENT\n\nSELECT * FROM payments LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_amount FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_status FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_status FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_amount FROM payments WHERE payment_status = 'PAID';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, transaction_amount FROM transactions WHERE transaction_status = 'SUCCESS';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_amount FROM payments WHERE payment_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, transaction_amount FROM transactions WHERE transaction_type = 'SALE';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments WHERE payment_status = 'PENDING';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM transactions WHERE transaction_status <> 'FAILED';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_status FROM payments WHERE payment_amount < 50;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, transaction_status FROM transactions WHERE transaction_amount >= 500;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM payments ORDER BY payment_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM transactions ORDER BY transaction_amount ASC;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_amount FROM payments WHERE payment_amount BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, transaction_status FROM transactions WHERE transaction_amount IN (200, 300);",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM payments WHERE payment_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date FROM payments WHERE payment_status = 'Pending'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_status FROM payments WHERE payment_date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_status FROM payments WHERE payment_amount < 500 OR payment_status = 'Failed'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date, transaction_type FROM transactions WHERE transaction_amount >= 2000",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE transaction_date < '2022-03-15' AND transaction_status = 'Approved'",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_amount FROM payments JOIN transactions ON payments.payment_id = transactions.transaction_id",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, transaction_type FROM payments JOIN transactions ON payments.payment_id = transactions.transaction_id WHERE payments.payment_amount > 1500",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, payment_status FROM payments LEFT JOIN transactions ON payments.payment_id = transactions.transaction_id",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, transaction_status FROM payments RIGHT JOIN transactions ON payments.payment_id = transactions.transaction_id",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, transaction_amount FROM payments JOIN transactions ON payments.payment_amount = transactions.transaction_amount",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, transaction_type FROM payments INNER JOIN transactions ON payments.payment_id = transactions.transaction_id",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT COUNT(payment_id) AS total_payments FROM payments",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_status, AVG(payment_amount) AS avg_amount FROM payments GROUP BY payment_status",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_status, SUM(transaction_amount) AS total_amount FROM transactions GROUP BY transaction_status ORDER BY total_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT transaction_date, MAX(transaction_amount) AS max_amount FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_date, MIN(payment_amount) AS min_payment FROM payments",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM payments CROSS JOIN transactions",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_date, transaction_date, payment_amount, transaction_amount FROM payments FULL JOIN transactions ON payments.payment_amount = transactions.transaction_amount",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_date, transaction_date FROM payments LEFT JOIN transactions ON payments.payment_id = transactions.transaction_id WHERE transactions.transaction_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id UUID PRIMARY KEY,\n  payment_date DATE,\n  payment_amount DECIMAL,\n  payment_status VARCHAR(10)\n);\n\n\nCREATE TABLE transactions (\n  transaction_id UUID PRIMARY KEY,\n  transaction_date DATE,\n  transaction_type VARCHAR(20),\n  transaction_amount DECIMAL,\n  transaction_status VARCHAR(10)\n);\n\n### STATEMENT\n\nSELECT * FROM payments RIGHT JOIN transactions ON payments.payment_id = transactions.transaction_id WHERE payments.payment_id IS NULL",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT gateway_name, integration_key FROM payment_gateways WHERE gateway_id = 1",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount, status FROM bank_transactions WHERE gateway_id = 2",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM fund_transfers",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transfer_id, sender_account_number, receiver_account_number FROM fund_transfers",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways WHERE gateway_id = 3",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways WHERE gateway_id = 4",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions WHERE status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_amount, transaction_date FROM bank_transactions WHERE status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM fund_transfers WHERE status = 'completed'",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transfer_id, sender_account_number, receiver_account_number FROM fund_transfers WHERE transfer_amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways WHERE gateway_id = 5",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways WHERE gateway_id = 6",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions WHERE status = 'cancelled'",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transaction_id, status FROM bank_transactions WHERE gateway_id = 3",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM fund_transfers WHERE status = 'in progress'",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transfer_id, transfer_date, status FROM fund_transfers WHERE transfer_amount < 500",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways WHERE gateway_id = 7",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions WHERE transaction_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transaction_amount, transaction_date FROM bank_transactions WHERE status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions INNER JOIN payment_gateways ON bank_transactions.gateway_id = payment_gateways.gateway_id;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions LEFT JOIN payment_gateways ON bank_transactions.gateway_id = payment_gateways.gateway_id;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM fund_transfers WHERE transfer_amount BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT sender_account_number, receiver_account_number FROM fund_transfers WHERE status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM fund_transfers INNER JOIN bank_transactions ON fund_transfers.transfer_id = bank_transactions.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM fund_transfers RIGHT JOIN bank_transactions ON fund_transfers.transfer_id = bank_transactions.transaction_id;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways WHERE gateway_id IN (SELECT gateway_id FROM bank_transactions);",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways WHERE gateway_id NOT IN (SELECT gateway_id FROM bank_transactions);",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT * FROM bank_transactions WHERE gateway_id IN (SELECT gateway_id FROM payment_gateways WHERE gateway_name LIKE 'Pay%');",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT DISTINCT status FROM bank_transactions;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) AS total_amount FROM bank_transactions;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS average_amount FROM bank_transactions WHERE status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT MAX(transfer_amount) AS max_transfer_amount FROM fund_transfers;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT MIN(transfer_amount) AS min_transfer_amount FROM fund_transfers WHERE status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transfers FROM fund_transfers;",
  "### TABLEDATA\n\nCREATE TABLE payment_gateways (\n  gateway_id INT PRIMARY KEY,\n  gateway_name VARCHAR(255),\n  gateway_url VARCHAR(255),\n  integration_key VARCHAR(255)\n)\n\nCREATE TABLE bank_transactions (\n  transaction_id INT PRIMARY KEY,\n  transaction_amount DECIMAL(10, 2),\n  transaction_date TIMESTAMP,\n  status VARCHAR(50),\n  gateway_id INT,\n  FOREIGN KEY (gateway_id) REFERENCES payment_gateways(gateway_id)\n)\n\nCREATE TABLE fund_transfers (\n  transfer_id INT PRIMARY KEY,\n  sender_account_number VARCHAR(20),\n  receiver_account_number VARCHAR(20),\n  transfer_amount DECIMAL(10, 2),\n  transfer_date TIMESTAMP,\n  status VARCHAR(50)\n)\n\n### STATEMENT\n\nSELECT transfer_date, COUNT(*) AS transfer_count FROM fund_transfers GROUP BY transfer_date ORDER BY transfer_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM PaymentMethods;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, integration_key FROM PaymentMethods;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_amount, transaction_date FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Funds;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT fund_amount, fund_created_date FROM Funds;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, customer_name FROM PaymentMethods JOIN Customers ON PaymentMethods.payment_method_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_amount, customer_name FROM Transactions JOIN Customers ON Transactions.customer_id = Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, transaction_amount FROM Transactions JOIN PaymentMethods ON Transactions.payment_method_id = PaymentMethods.payment_method_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_amount, fund_amount FROM Transactions JOIN Funds ON Transactions.transaction_id = Funds.fund_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) AS total_transaction_amount FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(transaction_amount) AS avg_transaction_amount FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(transaction_amount) AS max_transaction_amount FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(transaction_amount) AS min_transaction_amount FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(transaction_id) AS total_transactions FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(customer_id) AS total_customers FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(transaction_amount) AS total_transaction_amount FROM Customers JOIN Transactions ON Customers.customer_id = Transactions.customer_id GROUP BY Customers.customer_name;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM PaymentMethods;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, integration_key FROM PaymentMethods;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email, phone_number FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_amount, transaction_date FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, transaction_amount FROM Customers JOIN Transactions ON Customers.customer_id = Transactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, transaction_amount FROM PaymentMethods JOIN Transactions ON PaymentMethods.payment_method_id = Transactions.payment_method_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM PaymentMethods WHERE payment_method_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(fund_amount) FROM Funds;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(transaction_amount) FROM Customers JOIN Transactions ON Customers.customer_id = Transactions.customer_id GROUP BY Customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, COUNT(*) FROM PaymentMethods JOIN Transactions ON PaymentMethods.payment_method_id = Transactions.payment_method_id GROUP BY PaymentMethods.payment_method_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT payment_method_name, AVG(transaction_amount) FROM PaymentMethods JOIN Transactions ON PaymentMethods.payment_method_id = Transactions.payment_method_id GROUP BY PaymentMethods.payment_method_id;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_amount, transaction_date FROM Transactions WHERE transaction_amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, email FROM Customers WHERE customer_id IN (SELECT customer_id FROM Transactions);",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM Transactions WHERE transaction_amount BETWEEN 50 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(transaction_amount) FROM Customers JOIN Transactions ON Customers.customer_id = Transactions.customer_id GROUP BY customer_name HAVING SUM(transaction_amount) > 500;",
  "### TABLEDATA\n\nCREATE TABLE PaymentMethods (\n    payment_method_id INT PRIMARY KEY,\n    payment_method_name VARCHAR(255) NOT NULL,\n    integration_key VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE Customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE Transactions (\n    transaction_id INT PRIMARY KEY,\n    transaction_amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    payment_method_id INT,\n    customer_id INT,\n    FOREIGN KEY (payment_method_id) REFERENCES PaymentMethods(payment_method_id),\n    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)\n);\n\nCREATE TABLE Funds (\n    fund_id INT PRIMARY KEY,\n    fund_amount DECIMAL(10, 2) NOT NULL,\n    fund_created_date TIMESTAMP NOT NULL\n);\n\n### STATEMENT\n\nSELECT transaction_date, DAY(transaction_date) FROM Transactions;",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, email FROM online_banking_customers",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id, balance FROM bank_accounts",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, payment_status FROM gateway_transactions",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, phone_number FROM online_banking_customers",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id, account_type FROM bank_accounts",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_type FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url, gateway_id FROM payment_gateways",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, transaction_date FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name FROM online_banking_customers WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id FROM bank_accounts WHERE customer_id = 1",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id FROM transactions WHERE account_id = 1",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gateway_name FROM payment_gateways WHERE gateway_id = 1",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT payment_status FROM gateway_transactions WHERE transaction_id = 1",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM bank_accounts",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM transactions",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM payment_gateways",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM online_banking_customers",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM gateway_transactions",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, email FROM online_banking_customers WHERE phone_number LIKE '+1%'",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, email, balance FROM online_banking_customers JOIN bank_accounts ON online_banking_customers.customer_id = bank_accounts.customer_id WHERE bank_accounts.account_type = 'Savings'",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, account_type, balance FROM online_banking_customers JOIN bank_accounts ON online_banking_customers.customer_id = bank_accounts.customer_id WHERE bank_accounts.balance > 10000",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount, transaction_type FROM transactions WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gateway_name, gateway_url FROM payment_gateways WHERE gateway_url LIKE '%paypal%'",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, transaction_type, transaction_date FROM online_banking_customers JOIN bank_accounts ON online_banking_customers.customer_id = bank_accounts.customer_id JOIN transactions ON bank_accounts.account_id = transactions.account_id WHERE transactions.amount > 500",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT gateway_name, payment_status, transaction_date FROM payment_gateways JOIN gateway_transactions ON payment_gateways.gateway_id = gateway_transactions.gateway_id WHERE gateway_transactions.transaction_date < NOW()",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, email, transaction_type FROM online_banking_customers JOIN bank_accounts ON online_banking_customers.customer_id = bank_accounts.customer_id JOIN transactions ON bank_accounts.account_id = transactions.account_id WHERE customer_name = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT account_id, balance, transaction_type FROM bank_accounts JOIN transactions ON bank_accounts.account_id = transactions.account_id WHERE transactions.amount > 1000",
  "### TABLEDATA\n\nCREATE TABLE online_banking_customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n)\n\nCREATE TABLE bank_accounts (\n    account_id INT PRIMARY KEY,\n    customer_id INT,\n    account_type ENUM('Savings', 'Checking', 'Business'),\n    balance DECIMAL(10, 2)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL(10, 2),\n    transaction_type ENUM('Deposit', 'Withdrawal', 'Transfer'),\n    transaction_date TIMESTAMP\n)\n\nCREATE TABLE payment_gateways (\n    gateway_id INT PRIMARY KEY,\n    gateway_name VARCHAR(50),\n    gateway_url VARCHAR(255)\n)\n\nCREATE TABLE gateway_transactions (\n    transaction_id INT PRIMARY KEY,\n    gateway_id INT,\n    payment_status ENUM('Pending', 'Completed', 'Failed'),\n    transaction_date TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT customer_name, account_type, amount FROM online_banking_customers JOIN bank_accounts ON online_banking_customers.customer_id = bank_accounts.customer_id JOIN transactions ON bank_accounts.account_id = transactions.account_id WHERE transactions.transaction_type = 'Withdrawal' ORDER BY amount DESC"
]