[
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, applicant_name FROM loan_approval;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, income FROM loan_approval WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE approval_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, applicant_name FROM loan_approval WHERE income > 50000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE credit_score < 600;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, loan_amount FROM loan_approval WHERE income > 75000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, approval_status FROM loan_approval WHERE credit_score > 650;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE income BETWEEN 40000 AND 80000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, credit_score FROM loan_approval WHERE approval_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE income < 30000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, income, loan_amount FROM loan_approval WHERE credit_score BETWEEN 600 AND 700;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, applicant_name FROM loan_approval WHERE loan_amount > 100000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE credit_score >= 700;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, income, approval_status FROM loan_approval WHERE loan_amount < 50000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE income >= 60000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, credit_score FROM loan_approval WHERE approval_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE credit_score < 500;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, income FROM loan_approval WHERE approval_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE income < 40000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT applicant_name, income FROM loan_approval WHERE approval_status = true;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, applicant_name, loan_amount FROM loan_approval WHERE income > 50000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM loan_approval WHERE approval_status = false;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT AVG(credit_score) FROM loan_approval WHERE approval_status = true;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT MAX(income) FROM loan_approval WHERE credit_score < 600;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE credit_score BETWEEN 600 AND 800;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT SUM(loan_amount) FROM loan_approval WHERE approval_status = true;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT DISTINCT applicant_name FROM loan_approval WHERE credit_score > 750;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT applicant_name, income, loan_amount FROM loan_approval WHERE income > loan_amount;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, applicant_name, credit_score FROM loan_approval WHERE income < 30000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE approval_status = false AND credit_score > 650;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT AVG(income) FROM loan_approval WHERE approval_status = true AND credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT MIN(loan_amount) FROM loan_approval WHERE credit_score > 750;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT applicant_name, income, approval_status FROM loan_approval WHERE loan_amount > 100000;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT SUM(credit_score) FROM loan_approval WHERE approval_status = true;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT DISTINCT loan_id FROM loan_approval WHERE approval_status = false;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT loan_id, applicant_name, income, loan_amount FROM loan_approval WHERE loan_amount > income;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT AVG(loan_amount) FROM loan_approval WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nSELECT * FROM loan_approval WHERE income > loan_amount AND approval_status = true;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, credit_score FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM LoanApplications;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT loan_amount, approval_status FROM LoanApplications;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, credit_score, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, credit_score, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount > 50000;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, credit_score, financial_history FROM Applicants WHERE credit_score < 600;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status LIKE '%pending%';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, credit_score, financial_history FROM Applicants WHERE financial_history IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(credit_score) AS avg_credit_score FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, MAX(loan_amount) AS max_loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, MIN(loan_amount) AS min_loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, SUM(loan_amount) AS total_loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_applicants FROM Applicants;",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_approved_loans FROM LoanApplications WHERE approval_status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_rejected_loans FROM LoanApplications WHERE approval_status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score > 700 AND loan_amount > 50000",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status = 'approved'",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(credit_score) FROM Applicants",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, financial_history FROM Applicants WHERE credit_score < 500",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM Applicants",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(loan_amount) FROM LoanApplications",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM LoanApplications WHERE approval_status = 'pending'",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id ORDER BY loan_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score < 600 ORDER BY credit_score ASC",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE credit_score < 600 LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE financial_history LIKE '%bad%'",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT name, approval_status FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE approval_status IN ('approved', 'pending')",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount BETWEEN 10000 AND 50000",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id GROUP BY approval_status",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name FROM Applicants WHERE EXISTS (SELECT * FROM LoanApplications WHERE LoanApplications.applicant_id = Applicants.applicant_id AND loan_amount > 50000)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, AVG(loan_amount) FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id GROUP BY name HAVING AVG(loan_amount) > 30000",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount = (SELECT MAX(loan_amount) FROM LoanApplications)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount = (SELECT MIN(loan_amount) FROM LoanApplications)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, loan_amount FROM Applicants JOIN LoanApplications ON Applicants.applicant_id = LoanApplications.applicant_id WHERE loan_amount = (SELECT AVG(loan_amount) FROM LoanApplications)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, credit_score FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM loans;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT loan_id, user_id, loan_amount FROM loans;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT loan_id, status FROM loans;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT * FROM financial_history;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, employment_status FROM financial_history;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, income, expenses FROM financial_history;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.user_id, loans.loan_amount FROM users JOIN loans ON users.user_id = loans.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, loans.status FROM users JOIN loans ON users.user_id = loans.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, financial_history.income FROM users JOIN financial_history ON users.user_id = financial_history.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.user_id, loans.loan_amount, financial_history.income FROM users JOIN loans ON users.user_id = loans.user_id JOIN financial_history ON users.user_id = financial_history.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, loans.loan_amount, financial_history.expenses FROM users JOIN loans ON users.user_id = loans.user_id JOIN financial_history ON users.user_id = financial_history.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username AS borrower, loans.loan_amount AS amount FROM users JOIN loans ON users.user_id = loans.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(income) AS average_income FROM financial_history GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS num_loans FROM loans GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(loan_amount) AS max_loan_amount FROM loans GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(loan_amount) AS min_loan_amount FROM loans GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(loan_amount) AS total_loan_amount FROM loans GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, loans.loan_amount FROM users INNER JOIN loans ON users.user_id = loans.user_id WHERE loans.status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, financial_history.employment_status, financial_history.income FROM users LEFT JOIN financial_history ON users.user_id = financial_history.user_id WHERE financial_history.income > 50000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, loans.loan_amount, financial_history.income FROM users INNER JOIN loans ON users.user_id = loans.user_id LEFT JOIN financial_history ON users.user_id = financial_history.user_id WHERE loans.loan_amount > 1000 AND financial_history.expenses < 2000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, loans.loan_amount, financial_history.employment_status FROM users INNER JOIN loans ON users.user_id = loans.user_id LEFT JOIN financial_history ON users.user_id = financial_history.user_id WHERE loans.status = 'pending' AND financial_history.employment_status = 'employed';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT users.username, SUM(loans.loan_amount) AS total_loan_amount FROM users INNER JOIN loans ON users.user_id = loans.user_id GROUP BY users.username HAVING total_loan_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nSELECT ...",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomerInfo;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT full_name, age FROM CustomerInfo;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT address FROM CustomerInfo WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT * FROM LoanApplication;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT loan_amount, loan_purpose FROM LoanApplication WHERE application_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT * FROM FinancialHistory;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT income, expenses FROM FinancialHistory WHERE assets > liabilities;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT * FROM ApprovalLog;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT approval_status, approval_date FROM ApprovalLog WHERE approval_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT full_name, age, address, credit_score FROM CustomerInfo WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT application_id, loan_amount, loan_purpose FROM LoanApplication WHERE loan_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, income, expenses, assets, liabilities FROM FinancialHistory WHERE income >= 50000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT application_id, approval_status, approval_date FROM ApprovalLog WHERE approval_status = 'Denied';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT full_name, age, address, credit_score, loan_amount, loan_purpose FROM CustomerInfo JOIN LoanApplication ON CustomerInfo.customer_id = LoanApplication.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT full_name, age, income, expenses, assets, liabilities FROM CustomerInfo JOIN FinancialHistory ON CustomerInfo.customer_id = FinancialHistory.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT application_id, approval_status, approval_date, full_name, address FROM ApprovalLog JOIN LoanApplication ON ApprovalLog.application_id = LoanApplication.application_id JOIN CustomerInfo ON LoanApplication.customer_id = CustomerInfo.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT application_id, approval_status, approval_date, full_name, income, expenses FROM ApprovalLog JOIN LoanApplication ON ApprovalLog.application_id = LoanApplication.application_id JOIN FinancialHistory ON LoanApplication.customer_id = FinancialHistory.customer_id JOIN CustomerInfo ON LoanApplication.customer_id = CustomerInfo.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, full_name, age, address, credit_score, income, expenses, assets, liabilities FROM CustomerInfo JOIN FinancialHistory ON CustomerInfo.customer_id = FinancialHistory.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT customer_id, full_name, age, address, credit_score, loan_amount, loan_purpose, income, expenses, assets, liabilities FROM CustomerInfo JOIN LoanApplication ON CustomerInfo.customer_id = LoanApplication.customer_id JOIN FinancialHistory ON CustomerInfo.customer_id = FinancialHistory.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT application_id, approval_status, approval_date, customer_id, full_name, age, address, credit_score FROM ApprovalLog JOIN LoanApplication ON ApprovalLog.application_id = LoanApplication.application_id JOIN CustomerInfo ON LoanApplication.customer_id = CustomerInfo.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT full_name, age, address FROM CustomerInfo WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT * FROM CustomeInfo WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM FinancialHistory WHERE income > expenses;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, l.loan_amount FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, f.assets, f.liabilities FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, l.loan_amount, l.loan_purpose, a.approval_status FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, f.income, f.expenses FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id WHERE f.assets - f.liabilities > 0;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, l.loan_amount FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id WHERE l.loan_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, l.loan_amount, a.approval_status FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE a.approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, f.income, f.expenses, l.loan_amount FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id WHERE f.income - f.expenses > 5000 AND l.loan_amount < 10000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, f.income, f.expenses, l.loan_amount, a.approval_status FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE f.income > 10000 AND f.assets - f.liabilities > 0 AND a.approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, f.income, f.expenses, l.loan_amount, a.approval_date FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE f.income > l.loan_amount AND f.expenses < 5000 AND a.approval_date >= CURRENT_DATE;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, f.income, f.expenses, l.loan_amount, a.approval_date FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id JOIN LoanApplication l ON c.customer_id = l.customer_id JOIN ApprovalLog a ON l.application_id = a.application_id WHERE f.income - f.expenses > 5000 AND l.loan_amount < 10000 AND a.approval_status = 'Approved' ORDER BY a.approval_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, AVG(f.assets - f.liabilities) AS net_worth FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT loan_purpose, COUNT(application_id) AS number_of_applications FROM LoanApplication GROUP BY loan_purpose HAVING COUNT(application_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, SUM(l.loan_amount) AS total_loan_amount FROM CustomerInfo c JOIN LoanApplication l ON c.customer_id = l.customer_id GROUP BY c.full_name HAVING SUM(l.loan_amount) > 100000;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, MAX(f.income) AS highest_income FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, MIN(f.expenses) AS lowest_expenses FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT l.loan_purpose, AVG(l.loan_amount) AS average_loan_amount FROM LoanApplication l GROUP BY l.loan_purpose;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nSELECT c.full_name, SUM(f.assets - f.liabilities) AS total_net_worth FROM CustomerInfo c JOIN FinancialHistory f ON c.customer_id = f.customer_id GROUP BY c.full_name HAVING SUM(f.assets - f.liabilities) > 10000;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM borrowers;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loans;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM credit_reports;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, name FROM borrowers;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount FROM loans;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_amount FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date FROM credit_reports;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT approval_id, approval_date FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, name, credit_score FROM borrowers;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, loan_term FROM loans;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_amount, payment_date FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date, report_details FROM credit_reports;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT approval_id, approval_date, approved_by FROM approvals;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, credit_score FROM borrowers WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, status FROM loans WHERE status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT payment_id, payment_amount FROM payments WHERE payment_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT report_id, report_date FROM credit_reports WHERE report_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT approval_id, approved_by FROM approvals WHERE approval_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM borrowers;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, name FROM borrowers WHERE credit_score > 700;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT name, financial_history FROM borrowers WHERE LENGTH(financial_history) > 100;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT * FROM loans WHERE loan_amount > 50000;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, loan_amount, status FROM loans WHERE status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, COUNT(loan_id) AS total_loans FROM loans GROUP BY borrower_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, AVG(loan_amount) AS avg_loan_amount FROM loans GROUP BY borrower_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, MAX(loan_amount) AS max_loan_amount FROM loans GROUP BY borrower_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_payments FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT SUM(payment_amount) AS total_payment_amount FROM payments;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, COUNT(*) AS total_payments FROM payments GROUP BY loan_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, report_date, report_details FROM credit_reports WHERE borrower_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, COUNT(approval_id) AS total_approvals FROM approvals GROUP BY borrower_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, MAX(approval_date) AS latest_approval_date FROM approvals GROUP BY loan_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT loan_id, AVG(payment_amount) AS avg_payment_amount FROM payments GROUP BY loan_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, MIN(credit_score) AS min_credit_score FROM borrowers;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT borrower_id, loan_id, payment_amount, payment_date FROM payments JOIN loans ON payments.loan_id = loans.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT c.report_id, b.name, c.report_date, c.report_details FROM credit_reports c JOIN borrowers b ON c.borrower_id = b.borrower_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT l.loan_id, b.name, p.payment_amount, p.payment_date FROM loans l JOIN borrowers b ON l.borrower_id = b.borrower_id JOIN payments p ON l.loan_id = p.loan_id;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nSELECT approval_id, a.loan_id, a.approval_date, b.name AS approved_by FROM approvals a JOIN borrowers b ON a.loan_id = b.borrower_id;"
]