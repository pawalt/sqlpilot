[
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (1, 'John Doe', 750, 50000.00, 100000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (2, 'Jane Smith', 680, 60000.00, 80000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (3, 'Alice Johnson', 700, 45000.00, 75000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (4, 'Bob Brown', 720, 55000.00, 95000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (5, 'Emily Davis', 690, 40000.00, 70000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (6, 'Alex Wilson', 730, 60000.00, 85000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (7, 'Sarah White', 680, 50000.00, 95000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (8, 'Michael Lee', 710, 45000.00, 75000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (9, 'Karen Miller', 690, 55000.00, 90000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (10, 'Kevin Wilson', 740, 65000.00, 100000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (11, 'Laura Thompson', 720, 70000.00, 120000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (12, 'Mark Adams', 680, 60000.00, 100000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (13, 'Jessica Brown', 700, 50000.00, 85000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (14, 'David Wilson', 710, 55000.00, 95000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (15, 'Emma Johnson', 730, 65000.00, 110000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (16, 'Chris Smith', 680, 48000.00, 85000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (17, 'Lucy Davis', 720, 55000.00, 90000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (18, 'Ryan Wilson', 710, 60000.00, 100000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (19, 'Nicole Lee', 690, 50000.00, 80000.00, TRUE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (20, 'Jake Miller', 730, 55000.00, 95000.00, FALSE)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (1, 'Alice Johnson', 750, 50000.00, 100000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (2, 'Bob Smith', 700, 60000.00, 75000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (3, 'Emma Brown', 680, 45000.00, 90000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (4, 'David Lee', 720, 55000.00, 80000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (5, 'Sophia Miller', 700, 65000.00, 70000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (6, 'Oliver Wilson', 730, 70000.00, 120000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (7, 'Ava Moore', 690, 60000.00, 95000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (8, 'Ethan Clark', 720, 80000.00, 150000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (9, 'Mia Allen', 680, 50000.00, 80000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (10, 'James Scott', 710, 75000.00, 90000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (11, 'Sophie King', 740, 85000.00, 120000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (12, 'Jack Robinson', 700, 60000.00, 80000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (13, 'Lily Harris', 690, 55000.00, 70000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (14, 'Noah Martinez', 720, 65000.00, 100000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (15, 'Isabella Young', 710, 70000.00, 85000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (16, 'William Thompson', 730, 75000.00, 110000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (17, 'Grace Davis', 690, 60000.00, 90000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (18, 'Michael White', 700, 80000.00, 130000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (19, 'Aiden Miller', 710, 65000.00, 95000.00, true)",
  "### TABLEDATA\n\nCREATE TABLE loan_approval ( \n  loan_id INT PRIMARY KEY, \n  applicant_name VARCHAR(50), \n  credit_score INT, \n  income DECIMAL(10, 2), \n  loan_amount DECIMAL(12, 2), \n  approval_status BOOLEAN \n)\n\n### STATEMENT\n\nUPSERT INTO loan_approval (loan_id, applicant_name, credit_score, income, loan_amount, approval_status) VALUES (20, 'Harper Wilson', 730, 70000.00, 120000.00, false)",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (1, 'Alice', 750, 'Good history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Alice', credit_score = 750, financial_history = 'Good history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (2, 'Bob', 700, 'Average history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Bob', credit_score = 700, financial_history = 'Average history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (3, 'Charlie', 800, 'Excellent history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Charlie', credit_score = 800, financial_history = 'Excellent history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (4, 'Diana', 650, 'Fair history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Diana', credit_score = 650, financial_history = 'Fair history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (5, 'Ella', 700, 'Good history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Ella', credit_score = 700, financial_history = 'Good history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (6, 'Frank', 720, 'Average history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Frank', credit_score = 720, financial_history = 'Average history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (7, 'Grace', 760, 'Excellent history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Grace', credit_score = 760, financial_history = 'Excellent history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (8, 'Henry', 680, 'Fair history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Henry', credit_score = 680, financial_history = 'Fair history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (9, 'Ivy', 730, 'Good history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Ivy', credit_score = 730, financial_history = 'Good history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (10, 'Jack', 740, 'Average history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Jack', credit_score = 740, financial_history = 'Average history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (11, 'Kate', 790, 'Excellent history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Kate', credit_score = 790, financial_history = 'Excellent history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (12, 'Leo', 610, 'Fair history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Leo', credit_score = 610, financial_history = 'Fair history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (13, 'Mia', 720, 'Good history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Mia', credit_score = 720, financial_history = 'Good history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (14, 'Nathan', 770, 'Average history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Nathan', credit_score = 770, financial_history = 'Average history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (15, 'Olivia', 780, 'Excellent history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Olivia', credit_score = 780, financial_history = 'Excellent history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (16, 'Peter', 690, 'Fair history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Peter', credit_score = 690, financial_history = 'Fair history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (17, 'Quinn', 710, 'Good history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Quinn', credit_score = 710, financial_history = 'Good history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (18, 'Rachel', 740, 'Average history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Rachel', credit_score = 740, financial_history = 'Average history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (19, 'Sam', 780, 'Excellent history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Sam', credit_score = 780, financial_history = 'Excellent history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (20, 'Tom', 660, 'Fair history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Tom', credit_score = 660, financial_history = 'Fair history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (1, 'John Doe', 700, 'Good financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'John Doe', credit_score = 700, financial_history = 'Good financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (2, 'Jane Smith', 650, 'Average financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Jane Smith', credit_score = 650, financial_history = 'Average financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (3, 'Bob Johnson', 750, 'Excellent financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Bob Johnson', credit_score = 750, financial_history = 'Excellent financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (4, 'Alice Brown', 680, 'Good financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Alice Brown', credit_score = 680, financial_history = 'Good financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (5, 'Mike Williams', 720, 'Good financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Mike Williams', credit_score = 720, financial_history = 'Good financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (6, 'Sarah Clark', 670, 'Average financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Sarah Clark', credit_score = 670, financial_history = 'Average financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (7, 'Tom Anderson', 730, 'Good financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Tom Anderson', credit_score = 730, financial_history = 'Good financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (8, 'Emily White', 740, 'Good financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Emily White', credit_score = 740, financial_history = 'Good financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (9, 'James Taylor', 760, 'Excellent financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'James Taylor', credit_score = 760, financial_history = 'Excellent financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO Applicants (applicant_id, name, credit_score, financial_history) VALUES (10, 'Olivia Wilson', 680, 'Average financial history') ON CONFLICT (applicant_id) DO UPDATE SET name = 'Olivia Wilson', credit_score = 680, financial_history = 'Average financial history';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (1, 1, 5000.00, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 1, loan_amount = 5000.00, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (2, 2, 7000.00, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 2, loan_amount = 7000.00, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (3, 3, 10000.00, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 3, loan_amount = 10000.00, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (4, 4, 8000.00, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 4, loan_amount = 8000.00, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (5, 5, 6000.00, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 5, loan_amount = 6000.00, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (6, 6, 9000.00, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 6, loan_amount = 9000.00, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (7, 7, 12000.00, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 7, loan_amount = 12000.00, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (8, 8, 3000.00, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 8, loan_amount = 3000.00, approval_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (9, 9, 15000.00, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 9, loan_amount = 15000.00, approval_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE Applicants (\n    applicant_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\n\nCREATE TABLE LoanApplications (\n    loan_id INT PRIMARY KEY,\n    applicant_id INT REFERENCES Applicants(applicant_id),\n    loan_amount DECIMAL,\n    approval_status VARCHAR(20)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplications (loan_id, applicant_id, loan_amount, approval_status) VALUES (10, 10, 10000.00, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET applicant_id = 10, loan_amount = 10000.00, approval_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, credit_score) VALUES (1, 'john_doe', 700) ON CONFLICT (user_id) DO UPDATE SET username = 'john_doe', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, user_id, loan_amount, status) VALUES (1, 1, 1000.00, 'pending') ON CONFLICT (loan_id) DO UPDATE SET user_id = 1, loan_amount = 1000.00, status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history (user_id, employment_status, income, expenses) VALUES (1, 'employed', 5000.00, 3000.00) ON CONFLICT (user_id) DO UPDATE SET employment_status = 'employed', income = 5000.00, expenses = 3000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, credit_score) VALUES (2, 'jane_smith', 750) ON CONFLICT (user_id) DO UPDATE SET username = 'jane_smith', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, user_id, loan_amount, status) VALUES (2, 2, 2000.00, 'approved') ON CONFLICT (loan_id) DO UPDATE SET user_id = 2, loan_amount = 2000.00, status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history (user_id, employment_status, income, expenses) VALUES (2, 'unemployed', 0.00, 0.00) ON CONFLICT (user_id) DO UPDATE SET employment_status = 'unemployed', income = 0.00, expenses = 0.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, credit_score) VALUES (3, 'alice_taylor', 680) ON CONFLICT (user_id) DO UPDATE S...",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(1, 'JohnDoe', 750) ON CONFLICT(user_id) DO UPDATE SET username = 'JohnDoe', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(1, 1, 5000.00, 'approved') ON CONFLICT(loan_id) DO UPDATE SET user_id = 1, loan_amount = 5000.00, status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(1, 'Employed', 60000.00, 30000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Employed', income = 60000.00, expenses = 30000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(2, 'JaneSmith', 800) ON CONFLICT(user_id) DO UPDATE SET username = 'JaneSmith', credit_score = 800;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(2, 2, 7000.00, 'pending') ON CONFLICT(loan_id) DO UPDATE SET user_id = 2, loan_amount = 7000.00, status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(2, 'Self-Employed', 80000.00, 35000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Self-Employed', income = 80000.00, expenses = 35000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(3, 'AliceBrown', 700) ON CONFLICT(user_id) DO UPDATE SET username = 'AliceBrown', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(3, 3, 10000.00, 'rejected') ON CONFLICT(loan_id) DO UPDATE SET user_id = 3, loan_amount = 10000.00, status = 'rejected';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(3, 'Unemployed', 20000.00, 15000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Unemployed', income = 20000.00, expenses = 15000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(4, 'MarkJohnson', 680) ON CONFLICT(user_id) DO UPDATE SET username = 'MarkJohnson', credit_score = 680;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(4, 4, 8000.00, 'approved') ON CONFLICT(loan_id) DO UPDATE SET user_id = 4, loan_amount = 8000.00, status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(4, 'Employed', 55000.00, 25000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Employed', income = 55000.00, expenses = 25000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(5, 'SarahMiller', 720) ON CONFLICT(user_id) DO UPDATE SET username = 'SarahMiller', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(5, 4, 6000.00, 'pending') ON CONFLICT(loan_id) DO UPDATE SET user_id = 4, loan_amount = 6000.00, status = 'pending';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(5, 'Student', 15000.00, 12000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Student', income = 15000.00, expenses = 12000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(6, 'DavidWilson', 760) ON CONFLICT(user_id) DO UPDATE SET username = 'DavidWilson', credit_score = 760;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(6, 6, 9000.00, 'approved') ON CONFLICT(loan_id) DO UPDATE SET user_id = 6, loan_amount = 9000.00, status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(6, 'Retired', 40000.00, 20000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Retired', income = 40000.00, expenses = 20000.00;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO users(user_id, username, credit_score) VALUES(7, 'EmmaWhite', 780) ON CONFLICT(user_id) DO UPDATE SET username = 'EmmaWhite', credit_score = 780;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO loans(loan_id, user_id, loan_amount, status) VALUES(7, 7, 12000.00, 'approved') ON CONFLICT(loan_id) DO UPDATE SET user_id = 7, loan_amount = 12000.00, status = 'approved';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    credit_score INT\n);\n\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    loan_amount DECIMAL(10, 2),\n    status VARCHAR(20)\n);\n\n\nCREATE TABLE financial_history (\n    user_id INT REFERENCES users(user_id),\n    employment_status VARCHAR(50),\n    income DECIMAL(10, 2),\n    expenses DECIMAL(10, 2)\n);\n\n### STATEMENT\n\nINSERT INTO financial_history(user_id, employment_status, income, expenses) VALUES(7, 'Employed', 70000.00, 30000.00) ON CONFLICT(user_id) DO UPDATE SET employment_status = 'Employed', income = 70000.00, expenses = 30000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (1, 'John Doe', 35, '123 Main Street', 750) ON DUPLICATE KEY UPDATE full_name = 'John Doe', age = 35, address = '123 Main Street', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (2, 'Jane Smith', 28, '456 Elm Street', 700) ON DUPLICATE KEY UPDATE full_name = 'Jane Smith', age = 28, address = '456 Elm Street', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (3, 'Alice Johnson', 40, '789 Oak Street', 800) ON DUPLICATE KEY UPDATE full_name = 'Alice Johnson', age = 40, address = '789 Oak Street', credit_score = 800;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (101, 1, 5000.00, 'Home Improvement', 'Pending') ON DUPLICATE KEY UPDATE customer_id = 1, loan_amount = 5000.00, loan_purpose = 'Home Improvement', application_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (102, 2, 10000.00, 'Debt Consolidation', 'Approved') ON DUPLICATE KEY UPDATE customer_id = 2, loan_amount = 10000.00, loan_purpose = 'Debt Consolidation', application_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (103, 3, 7500.00, 'Car Purchase', 'Rejected') ON DUPLICATE KEY UPDATE customer_id = 3, loan_amount = 7500.00, loan_purpose = 'Car Purchase', application_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (1, 60000.00, 40000.00, 1000000.00, 500000.00) ON DUPLICATE KEY UPDATE income = 60000.00, expenses = 40000.00, assets = 1000000.00, liabilities = 500000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (2, 80000.00, 50000.00, 1500000.00, 700000.00) ON DUPLICATE KEY UPDATE income = 80000.00, expenses = 50000.00, assets = 1500000.00, liabilities = 700000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (3, 70000.00, 45000.00, 1200000.00, 600000.00) ON DUPLICATE KEY UPDATE income = 70000.00, expenses = 45000.00, assets = 1200000.00, liabilities = 600000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (101, 'Pending', '2022-10-01') ON DUPLICATE KEY UPDATE approval_status = 'Pending', approval_date = '2022-10-01';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (102, 'Approved', '2022-10-05') ON DUPLICATE KEY UPDATE approval_status = 'Approved', approval_date = '2022-10-05';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nUPSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (103, 'Rejected', '2022-10-10') ON DUPLICATE KEY UPDATE approval_status = 'Rejected', approval_date = '2022-10-10';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (1, 'John Doe', 30, '123 Main St', 700) ON CONFLICT (customer_id) DO UPDATE SET full_name = 'John Doe', age = 30, address = '123 Main St', credit_score = 700;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (1, 1, 10000.00, 'Home Improvement', 'Pending') ON CONFLICT (application_id) DO UPDATE SET customer_id = 1, loan_amount = 10000.00, loan_purpose = 'Home Improvement', application_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (1, 50000.00, 30000.00, 200000.00, 100000.00) ON CONFLICT (customer_id) DO UPDATE SET income = 50000.00, expenses = 30000.00, assets = 200000.00, liabilities = 100000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (1, 'Approved', '2022-01-15') ON CONFLICT (application_id) DO UPDATE SET approval_status = 'Approved', approval_date = '2022-01-15';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (2, 'Jane Smith', 25, '456 Elm St', 750) ON CONFLICT (customer_id) DO UPDATE SET full_name = 'Jane Smith', age = 25, address = '456 Elm St', credit_score = 750;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (2, 2, 15000.00, 'Car Loan', 'Rejected') ON CONFLICT (application_id) DO UPDATE SET customer_id = 2, loan_amount = 15000.00, loan_purpose = 'Car Loan', application_status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (2, 60000.00, 40000.00, 250000.00, 150000.00) ON CONFLICT (customer_id) DO UPDATE SET income = 60000.00, expenses = 40000.00, assets = 250000.00, liabilities = 150000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (2, 'Pending', '2022-01-20') ON CONFLICT (application_id) DO UPDATE SET approval_status = 'Pending', approval_date = '2022-01-20';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (3, 'Bob Johnson', 35, '789 Oak St', 680) ON CONFLICT (customer_id) DO UPDATE SET full_name = 'Bob Johnson', age = 35, address = '789 Oak St', credit_score = 680;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (3, 3, 20000.00, 'Debt Consolidation', 'Approved') ON CONFLICT (application_id) DO UPDATE SET customer_id = 3, loan_amount = 20000.00, loan_purpose = 'Debt Consolidation', application_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (3, 70000.00, 50000.00, 300000.00, 200000.00) ON CONFLICT (customer_id) DO UPDATE SET income = 70000.00, expenses = 50000.00, assets = 300000.00, liabilities = 200000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (3, 'Approved', '2022-01-25') ON CONFLICT (application_id) DO UPDATE SET approval_status = 'Approved', approval_date = '2022-01-25';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (4, 'Alice Brown', 28, '101 Pine St', 720) ON CONFLICT (customer_id) DO UPDATE SET full_name = 'Alice Brown', age = 28, address = '101 Pine St', credit_score = 720;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (4, 4, 12000.00, 'Education Loan', 'Pending') ON CONFLICT (application_id) DO UPDATE SET customer_id = 4, loan_amount = 12000.00, loan_purpose = 'Education Loan', application_status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (4, 55000.00, 35000.00, 230000.00, 120000.00) ON CONFLICT (customer_id) DO UPDATE SET income = 55000.00, expenses = 35000.00, assets = 230000.00, liabilities = 120000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (4, 'Pending', '2022-01-30') ON CONFLICT (application_id) DO UPDATE SET approval_status = 'Pending', approval_date = '2022-01-30';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO CustomerInfo (customer_id, full_name, age, address, credit_score) VALUES (5, 'David Lee', 32, '202 Chestnut St', 690) ON CONFLICT (customer_id) DO UPDATE SET full_name = 'David Lee', age = 32, address = '202 Chestnut St', credit_score = 690;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO LoanApplication (application_id, customer_id, loan_amount, loan_purpose, application_status) VALUES (5, 5, 18000.00, 'Business Loan', 'Approved') ON CONFLICT (application_id) DO UPDATE SET customer_id = 5, loan_amount = 18000.00, loan_purpose = 'Business Loan', application_status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO FinancialHistory (customer_id, income, expenses, assets, liabilities) VALUES (5, 75000.00, 45000.00, 280000.00, 150000.00) ON CONFLICT (customer_id) DO UPDATE SET income = 75000.00, expenses = 45000.00, assets = 280000.00, liabilities = 150000.00;",
  "### TABLEDATA\n\nCREATE TABLE CustomerInfo (\n    customer_id INT PRIMARY KEY,\n    full_name VARCHAR(50),\n    age INT,\n    address VARCHAR(100),\n    credit_score INT\n);\n\n\nCREATE TABLE LoanApplication (\n    application_id INT PRIMARY KEY,\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    loan_amount DECIMAL(10,2),\n    loan_purpose VARCHAR(100),\n    application_status VARCHAR(20)\n);\n\n\nCREATE TABLE FinancialHistory (\n    customer_id INT REFERENCES CustomerInfo(customer_id),\n    income DECIMAL(10,2),\n    expenses DECIMAL(10,2),\n    assets DECIMAL(15,2),\n    liabilities DECIMAL(15,2),\n    PRIMARY KEY (customer_id)\n);\n\n\nCREATE TABLE ApprovalLog (\n    application_id INT REFERENCES LoanApplication(application_id),\n    approval_status VARCHAR(20),\n    approval_date DATE,\n    PRIMARY KEY (application_id)\n);\n\n### STATEMENT\n\nINSERT INTO ApprovalLog (application_id, approval_status, approval_date) VALUES (5, 'Approved', '2022-02-05') ON CONFLICT (application_id) DO UPDATE SET approval_status = 'Approved', approval_date = '2022-02-05';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO borrowers (borrower_id, name, credit_score, financial_history) VALUES (1, 'John Doe', 750, 'Good credit history') ON CONFLICT (borrower_id) DO UPDATE SET name = 'John Doe', credit_score = 750, financial_history = 'Good credit history';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, borrower_id, loan_amount, loan_term, status) VALUES (1, 1, 10000.00, 12, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET borrower_id = 1, loan_amount = 10000.00, loan_term = 12, status = 'Approved';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date) VALUES (1, 1, 5000.00, '2022-06-30') ON CONFLICT (payment_id) DO UPDATE SET loan_id = 1, payment_amount = 5000.00, payment_date = '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (report_id, borrower_id, report_date, report_details) VALUES (1, 1, '2022-07-15', 'Detailed credit report') ON CONFLICT (report_id) DO UPDATE SET borrower_id = 1, report_date = '2022-07-15', report_details = 'Detailed credit report';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO approvals (approval_id, loan_id, approval_date, approved_by) VALUES (1, 1, '2022-07-20', 'Manager A') ON CONFLICT (approval_id) DO UPDATE SET loan_id = 1, approval_date = '2022-07-20', approved_by = 'Manager A';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO borrowers (borrower_id, name, credit_score, financial_history) VALUES (2, 'Jane Smith', 800, 'Excellent credit history') ON CONFLICT (borrower_id) DO UPDATE SET name = 'Jane Smith', credit_score = 800, financial_history = 'Excellent credit history';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, borrower_id, loan_amount, loan_term, status) VALUES (2, 2, 15000.00, 24, 'Pending') ON CONFLICT (loan_id) DO UPDATE SET borrower_id = 2, loan_amount = 15000.00, loan_term = 24, status = 'Pending';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date) VALUES (2, 2, 7500.00, '2022-07-15') ON CONFLICT (payment_id) DO UPDATE SET loan_id = 2, payment_amount = 7500.00, payment_date = '2022-07-15';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (report_id, borrower_id, report_date, report_details) VALUES (2, 2, '2022-07-25', 'Comprehensive credit report') ON CONFLICT (report_id) DO UPDATE SET borrower_id = 2, report_date = '2022-07-25', report_details = 'Comprehensive credit report';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO approvals (approval_id, loan_id, approval_date, approved_by) VALUES (2, 2, '2022-07-30', 'Manager B') ON CONFLICT (approval_id) DO UPDATE SET loan_id = 2, approval_date = '2022-07-30', approved_by = 'Manager B';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO borrowers (borrower_id, name, credit_score, financial_history) VALUES (3, 'Alice Johnson', 700, 'Fair credit history') ON CONFLICT (borrower_id) DO UPDATE SET name = 'Alice Johnson', credit_score = 700, financial_history = 'Fair credit history';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, borrower_id, loan_amount, loan_term, status) VALUES (3, 3, 20000.00, 36, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET borrower_id = 3, loan_amount = 20000.00, loan_term = 36, status = 'Rejected';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date) VALUES (3, 3, 10000.00, '2022-08-10') ON CONFLICT (payment_id) DO UPDATE SET loan_id = 3, payment_amount = 10000.00, payment_date = '2022-08-10';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (report_id, borrower_id, report_date, report_details) VALUES (3, 3, '2022-08-15', 'Basic credit report') ON CONFLICT (report_id) DO UPDATE SET borrower_id = 3, report_date = '2022-08-15', report_details = 'Basic credit report';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO approvals (approval_id, loan_id, approval_date, approved_by) VALUES (3, 3, '2022-08-20', 'Manager C') ON CONFLICT (approval_id) DO UPDATE SET loan_id = 3, approval_date = '2022-08-20', approved_by = 'Manager C';",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO borrowers (borrower_id, name, credit_score, financial_history) VALUES (1, 'John Doe', 750, 'Good financial history') ON CONFLICT (borrower_id) DO UPDATE SET name = EXCLUDED.name, credit_score = EXCLUDED.credit_score, financial_history = EXCLUDED.financial_history;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, borrower_id, loan_amount, loan_term, status) VALUES (1, 1, 5000.00, 12, 'Approved') ON CONFLICT (loan_id) DO UPDATE SET borrower_id = EXCLUDED.borrower_id, loan_amount = EXCLUDED.loan_amount, loan_term = EXCLUDED.loan_term, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date) VALUES (1, 1, 500.00, '2023-06-15') ON CONFLICT (payment_id) DO UPDATE SET loan_id = EXCLUDED.loan_id, payment_amount = EXCLUDED.payment_amount, payment_date = EXCLUDED.payment_date;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (report_id, borrower_id, report_date, report_details) VALUES (1, 1, '2023-06-20', 'Detailed credit report') ON CONFLICT (report_id) DO UPDATE SET borrower_id = EXCLUDED.borrower_id, report_date = EXCLUDED.report_date, report_details = EXCLUDED.report_details;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO approvals (approval_id, loan_id, approval_date, approved_by) VALUES (1, 1, '2023-06-25', 'Lender 1') ON CONFLICT (approval_id) DO UPDATE SET loan_id = EXCLUDED.loan_id, approval_date = EXCLUDED.approval_date, approved_by = EXCLUDED.approved_by;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO borrowers (borrower_id, name, credit_score, financial_history) VALUES (2, 'Alice Smith', 700, 'Average financial history') ON CONFLICT (borrower_id) DO UPDATE SET name = EXCLUDED.name, credit_score = EXCLUDED.credit_score, financial_history = EXCLUDED.financial_history;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, borrower_id, loan_amount, loan_term, status) VALUES (2, 2, 10000.00, 24, 'Rejected') ON CONFLICT (loan_id) DO UPDATE SET borrower_id = EXCLUDED.borrower_id, loan_amount = EXCLUDED.loan_amount, loan_term = EXCLUDED.loan_term, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date) VALUES (2, 2, 1000.00, '2023-07-01') ON CONFLICT (payment_id) DO UPDATE SET loan_id = EXCLUDED.loan_id, payment_amount = EXCLUDED.payment_amount, payment_date = EXCLUDED.payment_date;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (report_id, borrower_id, report_date, report_details) VALUES (2, 2, '2023-07-05', 'Summary credit report') ON CONFLICT (report_id) DO UPDATE SET borrower_id = EXCLUDED.borrower_id, report_date = EXCLUDED.report_date, report_details = EXCLUDED.report_details;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO approvals (approval_id, loan_id, approval_date, approved_by) VALUES (2, 2, '2023-07-10', 'Lender 2') ON CONFLICT (approval_id) DO UPDATE SET loan_id = EXCLUDED.loan_id, approval_date = EXCLUDED.approval_date, approved_by = EXCLUDED.approved_by;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO borrowers (borrower_id, name, credit_score, financial_history) VALUES (3, 'Bob Johnson', 800, 'Excellent financial history') ON CONFLICT (borrower_id) DO UPDATE SET name = EXCLUDED.name, credit_score = EXCLUDED.credit_score, financial_history = EXCLUDED.financial_history;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO loans (loan_id, borrower_id, loan_amount, loan_term, status) VALUES (3, 3, 7500.00, 18, 'Pending Approval') ON CONFLICT (loan_id) DO UPDATE SET borrower_id = EXCLUDED.borrower_id, loan_amount = EXCLUDED.loan_amount, loan_term = EXCLUDED.loan_term, status = EXCLUDED.status;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO payments (payment_id, loan_id, payment_amount, payment_date) VALUES (3, 3, 750.00, '2023-07-15') ON CONFLICT (payment_id) DO UPDATE SET loan_id = EXCLUDED.loan_id, payment_amount = EXCLUDED.payment_amount, payment_date = EXCLUDED.payment_date;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO credit_reports (report_id, borrower_id, report_date, report_details) VALUES (3, 3, '2023-07-20', 'Detailed credit report with score') ON CONFLICT (report_id) DO UPDATE SET borrower_id = EXCLUDED.borrower_id, report_date = EXCLUDED.report_date, report_details = EXCLUDED.report_details;",
  "### TABLEDATA\n\nCREATE TABLE borrowers (\n    borrower_id INT PRIMARY KEY,\n    name VARCHAR(50),\n    credit_score INT,\n    financial_history TEXT\n);\n\nCREATE TABLE loans (\n    loan_id INT PRIMARY KEY,\n    borrower_id INT,\n    loan_amount DECIMAL(10, 2),\n    loan_term INT,\n    status VARCHAR(20)\n);\n\nCREATE TABLE payments (\n    payment_id INT PRIMARY KEY,\n    loan_id INT,\n    payment_amount DECIMAL(10, 2),\n    payment_date DATE\n);\n\nCREATE TABLE credit_reports (\n    report_id INT PRIMARY KEY,\n    borrower_id INT,\n    report_date DATE,\n    report_details TEXT\n);\n\nCREATE TABLE approvals (\n    approval_id INT PRIMARY KEY,\n    loan_id INT,\n    approval_date DATE,\n    approved_by VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO approvals (approval_id, loan_id, approval_date, approved_by) VALUES (3, 3, '2023-07-25', 'Lender 3') ON CONFLICT (approval_id) DO UPDATE SET loan_id = EXCLUDED.loan_id, approval_date = EXCLUDED.approval_date, approved_by = EXCLUDED.approved_by;"
]