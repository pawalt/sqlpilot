<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><s>UPSERT INTO Banking_Accounts (id, account_number, balance, account_type) VALUES ('123e4567-e89b-12d3-a456-426614174000', 1001, 5000.00, 'Savings')</s>
<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><s>upsert into banking_accounts (id, account_number, balance, account_type) values ('123e4567-e89b-12d3-a456-426614174000', 1001, 5000.00, 'savings')</s>
<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><s>UPSERT INTO Banking_Accounts (id, account_number, balance, account_type) VALUES ('223e4567-e89b-12d3-a456-426614174001', 1002, 3000.50, 'Checking')</s>
<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><s>upsert into banking_accounts (id, account_number, balance, account_type) values ('223e4567-e89b-12d3-a456-426614174001', 1002, 3000.50, 'checking')</s>
<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><s>UPSERT INTO Banking_Accounts (id, account_number, balance, account_type) VALUES ('323e4567-e89b-12d3-a456-426614174002', 1003, 7500.75, 'Investment')</s>
<t>CREATE TABLE Banking_Accounts (id UUID PRIMARY KEY, account_number INT, balance DECIMAL(10,2), account_type VARCHAR(50))</t><s>upsert into banking_accounts (id, account_number, balance, account_type) values ('323e4567-e89b-12d3-a456-426614174002', 1003, 7500.75, 'investment')</s>
<t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><s>UPSERT INTO accounts (account_id, account_type, balance, owner_id) VALUES (1, 'Savings', 1000.00, 101) ON DUPLICATE KEY UPDATE account_type='Savings', balance=balance+1000.00, owner_id=101;</s>
<t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><s>upsert into accounts (account_id, account_type, balance, owner_id) values (1, 'savings', 1000.00, 101) on duplicate key update account_type='savings', balance=balance+1000.00, owner_id=101;</s>
<t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><s>UPSERT INTO accounts (account_id, account_type, balance, owner_id) VALUES (1, 'Savings', 1000.00, 101) ON DUPLICATE KEY UPDATE account_type='Savings', balance=balance+1000.00, owner_id=101;</s>
<t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><s>upsert into accounts (account_id, account_type, balance, owner_id) values (1, 'savings', 1000.00, 101) on duplicate key update account_type='savings', balance=balance+1000.00, owner_id=101;</s>
<t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><s>UPSERT INTO accounts (account_id, account_type, balance, owner_id) VALUES (2, 'Checking', 500.00, 102) ON DUPLICATE KEY UPDATE account_type='Checking', balance=balance+500.00, owner_id=102;</s>
<t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><s>upsert into accounts (account_id, account_type, balance, owner_id) values (2, 'checking', 500.00, 102) on duplicate key update account_type='checking', balance=balance+500.00, owner_id=102;</s>
<t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><s>UPSERT INTO accounts (account_id, account_type, balance, owner_id) VALUES (2, 'Checking', 500.00, 102) ON DUPLICATE KEY UPDATE account_type='Checking', balance=balance+500.00, owner_id=102;</s>
<t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><s>upsert into accounts (account_id, account_type, balance, owner_id) values (2, 'checking', 500.00, 102) on duplicate key update account_type='checking', balance=balance+500.00, owner_id=102;</s>
<t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><s>UPSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-10-15') ON DUPLICATE KEY UPDATE transaction_type='Deposit', amount=amount+500.00, transaction_date='2022-10-15';</s>
<t>CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);
</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-10-15') on duplicate key update transaction_type='deposit', amount=amount+500.00, transaction_date='2022-10-15';</s>
<t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><s>UPSERT INTO transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-10-15') ON DUPLICATE KEY UPDATE transaction_type='Deposit', amount=amount+500.00, transaction_date='2022-10-15';</s>
<t>CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT,
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date DATE,
    FOREIGN KEY (account_id) REFERENCES accounts(account_id)
);


CREATE TABLE accounts (
    account_id INT PRIMARY KEY,
    account_type VARCHAR(50),
    balance DECIMAL(10, 2),
    owner_id INT
);
</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-10-15') on duplicate key update transaction_type='deposit', amount=amount+500.00, transaction_date='2022-10-15';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>UPSERT INTO customers (customer_id, name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>upsert into customers (customer_id, name, email, phone_number) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update name='john doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>UPSERT INTO customers (customer_id, name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>upsert into customers (customer_id, name, email, phone_number) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update name='john doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>UPSERT INTO customers (customer_id, name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>upsert into customers (customer_id, name, email, phone_number) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update name='john doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>UPSERT INTO customers (customer_id, name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>upsert into customers (customer_id, name, email, phone_number) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update name='john doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>UPSERT INTO customers (customer_id, name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>upsert into customers (customer_id, name, email, phone_number) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update name='john doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>UPSERT INTO customers (customer_id, name, email, phone_number) VALUES (1, 'John Doe', 'john.doe@example.com', '123-456-7890') ON DUPLICATE KEY UPDATE name='John Doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>upsert into customers (customer_id, name, email, phone_number) values (1, 'john doe', 'john.doe@example.com', '123-456-7890') on duplicate key update name='john doe', email='john.doe@example.com', phone_number='123-456-7890';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>UPSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>upsert into accounts (account_id, customer_id, balance) values (1, 1, 1000.00) on duplicate key update customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>UPSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>upsert into accounts (account_id, customer_id, balance) values (1, 1, 1000.00) on duplicate key update customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>UPSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>upsert into accounts (account_id, customer_id, balance) values (1, 1, 1000.00) on duplicate key update customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>UPSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>upsert into accounts (account_id, customer_id, balance) values (1, 1, 1000.00) on duplicate key update customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>UPSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>upsert into accounts (account_id, customer_id, balance) values (1, 1, 1000.00) on duplicate key update customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>UPSERT INTO accounts (account_id, customer_id, balance) VALUES (1, 1, 1000.00) ON DUPLICATE KEY UPDATE customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>upsert into accounts (account_id, customer_id, balance) values (1, 1, 1000.00) on duplicate key update customer_id=1, balance=1000.00;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>UPSERT INTO transactions (transaction_id, account_id, amount, transaction_type, transaction_date) VALUES (1, 1, 100.00, 'Deposit', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id=1, amount=100.00, transaction_type='Deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>upsert into transactions (transaction_id, account_id, amount, transaction_type, transaction_date) values (1, 1, 100.00, 'deposit', '2022-01-01 10:00:00') on duplicate key update account_id=1, amount=100.00, transaction_type='deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>UPSERT INTO transactions (transaction_id, account_id, amount, transaction_type, transaction_date) VALUES (1, 1, 100.00, 'Deposit', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id=1, amount=100.00, transaction_type='Deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>upsert into transactions (transaction_id, account_id, amount, transaction_type, transaction_date) values (1, 1, 100.00, 'deposit', '2022-01-01 10:00:00') on duplicate key update account_id=1, amount=100.00, transaction_type='deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>UPSERT INTO transactions (transaction_id, account_id, amount, transaction_type, transaction_date) VALUES (1, 1, 100.00, 'Deposit', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id=1, amount=100.00, transaction_type='Deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))</t><s>upsert into transactions (transaction_id, account_id, amount, transaction_type, transaction_date) values (1, 1, 100.00, 'deposit', '2022-01-01 10:00:00') on duplicate key update account_id=1, amount=100.00, transaction_type='deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>UPSERT INTO transactions (transaction_id, account_id, amount, transaction_type, transaction_date) VALUES (1, 1, 100.00, 'Deposit', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id=1, amount=100.00, transaction_type='Deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>upsert into transactions (transaction_id, account_id, amount, transaction_type, transaction_date) values (1, 1, 100.00, 'deposit', '2022-01-01 10:00:00') on duplicate key update account_id=1, amount=100.00, transaction_type='deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>UPSERT INTO transactions (transaction_id, account_id, amount, transaction_type, transaction_date) VALUES (1, 1, 100.00, 'Deposit', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id=1, amount=100.00, transaction_type='Deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><s>upsert into transactions (transaction_id, account_id, amount, transaction_type, transaction_date) values (1, 1, 100.00, 'deposit', '2022-01-01 10:00:00') on duplicate key update account_id=1, amount=100.00, transaction_type='deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>UPSERT INTO transactions (transaction_id, account_id, amount, transaction_type, transaction_date) VALUES (1, 1, 100.00, 'Deposit', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE account_id=1, amount=100.00, transaction_type='Deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_id INT, amount DECIMAL(10,2), transaction_type VARCHAR(10), transaction_date TIMESTAMP, FOREIGN KEY (account_id) REFERENCES accounts(account_id))

CREATE TABLE accounts (account_id INT PRIMARY KEY, customer_id INT, balance DECIMAL(10,2), FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50), phone_number VARCHAR(15))</t><s>upsert into transactions (transaction_id, account_id, amount, transaction_type, transaction_date) values (1, 1, 100.00, 'deposit', '2022-01-01 10:00:00') on duplicate key update account_id=1, amount=100.00, transaction_type='deposit', transaction_date='2022-01-01 10:00:00';</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '+1234567890') ON DUPLICATE KEY UPDATE first_name = VALUES(first_name), last_name = VALUES(last_name), email = VALUES(email), phone_number = VALUES(phone_number);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '+1234567890') on duplicate key update first_name = values(first_name), last_name = values(last_name), email = values(email), phone_number = values(phone_number);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Accounts (account_id, customer_id, account_type, balance) VALUES (1, 1, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE account_type = VALUES(account_type), balance = VALUES(balance);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into accounts (account_id, customer_id, account_type, balance) values (1, 1, 'savings', 1000.00) on duplicate key update account_type = values(account_type), balance = values(balance);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>UPSERT INTO Transactions (transaction_id, account_id, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 500.00, '2022-01-15 08:30:00') ON DUPLICATE KEY UPDATE transaction_type = VALUES(transaction_type), amount = VALUES(amount), transaction_date = VALUES(transaction_date);</s>
<t>CREATE TABLE Loans (
    loan_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    loan_type VARCHAR(50),
    loan_amount DECIMAL(10, 2),
    status VARCHAR(20)
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY,
    account_id INT REFERENCES Accounts(account_id),
    transaction_type VARCHAR(50),
    amount DECIMAL(10, 2),
    transaction_date TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY,
    customer_id INT REFERENCES Customers(customer_id),
    account_type VARCHAR(50),
    balance DECIMAL(10, 2)
);

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone_number VARCHAR(20)
);</t><s>upsert into transactions (transaction_id, account_id, transaction_type, amount, transaction_date) values (1, 1, 'deposit', 500.00, '2022-01-15 08:30:00') on duplicate key update transaction_type = values(transaction_type), amount = values(amount), transaction_date = values(transaction_date);</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO customers (customer_id, first_name, last_name, email, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.com', '1234567890') ON CONFLICT (customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into customers (customer_id, first_name, last_name, email, phone_number) values (1, 'john', 'doe', 'john.doe@example.com', '1234567890') on conflict (customer_id) do update set first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO accounts (account_number, customer_id, account_type, balance) VALUES (1001, 1, 'Checking', 5000.00) ON CONFLICT (account_number) DO UPDATE SET customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into accounts (account_number, customer_id, account_type, balance) values (1001, 1, 'checking', 5000.00) on conflict (account_number) do update set customer_id = excluded.customer_id, account_type = excluded.account_type, balance = excluded.balance;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>UPSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (2001, 1001, 'Deposit', 1000.00, '2022-01-15 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
<t>CREATE TABLE loans (loan_id INT PRIMARY KEY, customer_id INT, loan_amount DECIMAL(10, 2), loan_type STRING, status STRING);

CREATE TABLE branches (branch_id INT PRIMARY KEY, branch_name STRING, address STRING, manager_name STRING, phone_number STRING);

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, account_number INT, transaction_type STRING, amount DECIMAL(10, 2), transaction_date TIMESTAMP);

CREATE TABLE accounts (account_number INT PRIMARY KEY, customer_id INT, account_type STRING, balance DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, first_name STRING, last_name STRING, email STRING, phone_number STRING);</t><s>upsert into transactions (transaction_id, account_number, transaction_type, amount, transaction_date) values (2001, 1001, 'deposit', 1000.00, '2022-01-15 10:00:00') on conflict (transaction_id) do update set account_number = excluded.account_number, transaction_type = excluded.transaction_type, amount = excluded.amount, transaction_date = excluded.transaction_date;</s>
