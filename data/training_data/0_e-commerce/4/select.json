[
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(sales_id) AS total_sales FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales_amount FROM sales_data GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data ORDER BY sale_date DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(sale_amount) AS min_sale_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale_amount_per_product, product_name FROM sales_data GROUP BY product_name",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name LIKE '%shirt%'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_name) AS total_products_sold FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name = 'Shoes'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(sale_amount) AS total_sales_amount FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name IN ('Shoes', 'Jeans')",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name != 'Hat'",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_name IS NULL",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date FROM sales_data",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_amount > 1000 ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_amount, COUNT(sales_id) AS total_sales FROM sales_data WHERE sale_amount < 500;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount, sale_date FROM sales_data WHERE product_name LIKE 'A%' AND sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data ORDER BY sale_amount DESC, sale_date ASC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT product_name FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT MAX(sale_amount) AS max_sale FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT MIN(sale_amount) AS min_sale FROM sales_data WHERE product_name = 'Product A';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT AVG(sale_amount) AS avg_sale, COUNT(sales_id) AS total_sales FROM sales_data WHERE sale_date >= '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, COUNT(sales_id) AS total_sales FROM sales_data GROUP BY product_name HAVING COUNT(sales_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(sale_amount) AS min_sale, MAX(sale_amount) AS max_sale FROM sales_data GROUP BY product_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_date, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY product_name, sale_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT EXTRACT(YEAR FROM sale_date) AS sale_year, SUM(sale_amount) AS total_sales FROM sales_data GROUP BY EXTRACT(YEAR FROM sale_date);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount * 1.1 AS updated_sale_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount, sale_date, DATEDIFF(NOW(), sale_date) AS days_since_sale FROM sales_data WHERE DATEDIFF(NOW(), sale_date) > 30;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount, sale_date FROM sales_data WHERE MONTH(sale_date) = 12 AND YEAR(sale_date) = 2022;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_date, sale_amount FROM sales_data WHERE sale_date = (SELECT MAX(sale_date) FROM sales_data);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount, sale_date FROM sales_data WHERE sale_date = (SELECT MIN(sale_date) FROM sales_data) AND product_name = 'Product B';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount, sale_date FROM sales_data WHERE sale_amount = (SELECT MAX(sale_amount) FROM sales_data);",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    sale_amount DECIMAL,\n    sale_date DATE\n);\n\n### STATEMENT\n\nSELECT product_name, sale_amount FROM sales_data WHERE sale_amount IN (SELECT MAX(sale_amount) FROM sales_data);",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, quantity FROM sales_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, quantity, price FROM sales_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, quantity, price, transaction_date FROM sales_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM performance_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT performance_id, employee_id, sales_amount FROM performance_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT performance_id, employee_id, sales_amount, sales_date FROM performance_data_table;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, quantity, price FROM sales_data_table WHERE quantity > 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, sales_amount FROM performance_data_table WHERE sales_amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, transaction_date FROM sales_data_table WHERE transaction_date = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, sales_amount, sales_date FROM performance_data_table WHERE sales_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM sales_data_table GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, AVG(sales_amount) AS average_sales FROM performance_data_table GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table ORDER BY transaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM performance_data_table ORDER BY sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, quantity, price FROM sales_data_table WHERE quantity > 10 ORDER BY price ASC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, sales_amount FROM performance_data_table WHERE sales_amount > 5000 ORDER BY sales_amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_transactions FROM sales_data_table GROUP BY product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, MAX(sales_amount) AS max_sales FROM performance_data_table GROUP BY employee_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM performance_data_table LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table WHERE quantity > 10 AND price > 50",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_id, product_id, quantity FROM sales_data_table WHERE transaction_date BETWEEN '2022-01-01' AND '2022-01-31'",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, SUM(quantity) AS total_quantity FROM sales_data_table GROUP BY product_id HAVING total_quantity > 100",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_data_table.*, performance_data_table.sales_amount FROM sales_data_table INNER JOIN performance_data_table ON sales_data_table.transaction_id = performance_data_table.performance_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, AVG(sales_amount) AS avg_sales_amount FROM performance_data_table GROUP BY employee_id HAVING avg_sales_amount > 5000",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table WHERE MONTH(transaction_date) = 3 AND YEAR(transaction_date) = 2022",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT product_id) AS total_products_sold FROM sales_data_table",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, MAX(sales_amount) AS highest_sales_amount FROM performance_data_table GROUP BY employee_id ORDER BY highest_sales_amount DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_date, SUM(quantity * price) AS total_revenue FROM sales_data_table GROUP BY transaction_date",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table WHERE quantity > 5 ORDER BY price DESC",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(price) AS avg_price FROM sales_data_table GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, MIN(sales_amount) AS lowest_sales_amount FROM performance_data_table GROUP BY employee_id ORDER BY lowest_sales_amount ASC",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_transactions FROM sales_data_table GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, SUM(sales_amount) AS total_sales_amount FROM performance_data_table GROUP BY employee_id HAVING total_sales_amount > 10000",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT transaction_date, AVG(price) AS avg_price_per_transaction FROM sales_data_table GROUP BY transaction_date",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data_table WHERE transaction_date > '2022-06-01'",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(price) AS highest_price FROM sales_data_table GROUP BY product_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT sales_date, SUM(sales_amount) AS total_sales FROM performance_data_table GROUP BY sales_date",
  "### TABLEDATA\n\nCREATE TABLE sales_data_table (\n    transaction_id INT PRIMARY KEY,\n    product_id INT,\n    quantity INT,\n    price DECIMAL,\n    transaction_date DATE\n);\n\nCREATE TABLE performance_data_table (\n    performance_id INT PRIMARY KEY,\n    employee_id INT,\n    sales_amount DECIMAL,\n    sales_date DATE\n);\n\n### STATEMENT\n\nSELECT employee_id, COUNT(*) AS total_sales_transactions FROM performance_data_table GROUP BY employee_id",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, sales_amount FROM sales_data WHERE product_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category FROM product WHERE unit_price > 100;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_performance WHERE performance_rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sale_date, sales_amount FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM product WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sale_id, performance_rating FROM sales_performance WHERE sale_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT SUM(sales_amount) AS total_sales FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(unit_price) AS avg_price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT COUNT(product_id) AS total_products FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(performance_rating) AS avg_rating FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data ORDER BY sale_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM product ORDER BY unit_price ASC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT MAX(sales_amount) AS highest_sales FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT MIN(unit_price) AS lowest_price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category, unit_price FROM product WHERE product_id = 1002;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, sales_rep_id FROM sales_performance WHERE sales_amount > 500;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sale_date, SUM(sales_amount) AS total_sales FROM sales_data GROUP BY sale_date;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_sales FROM sales_data GROUP BY product_id ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sales_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name FROM product WHERE unit_price > 50;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sale_id, sale_date, product_id, sales_amount FROM sales_data WHERE sale_date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data JOIN product ON sales_data.product_id = product.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sales_data.sale_id, sales_data.sales_amount, sales_performance.performance_rating FROM sales_data JOIN sales_performance ON sales_data.sale_id = sales_performance.sale_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE product_id IN (SELECT product_id FROM product WHERE category = 'Electronics');",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price, category, sales_amount FROM product JOIN sales_data ON product.product_id = sales_data.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sale_date >= '2022-01-01' AND sale_date <= '2022-02-28';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT AVG(sales_amount) AS average_sales FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, AVG(unit_price) AS average_unit_price FROM product GROUP BY product_id ORDER BY average_unit_price DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT category, SUM(sales_amount) AS total_sales FROM product JOIN sales_data ON product.product_id = sales_data.product_id GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_sales FROM sales_data GROUP BY product_id HAVING COUNT(*) > 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_name, SUM(sales_amount) AS total_sales FROM product JOIN sales_data ON product.product_id = sales_data.product_id GROUP BY product_name ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, MAX(unit_price) AS max_unit_price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_name, MIN(unit_price) AS min_unit_price FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT performance_rating, COUNT(*) AS sales_count FROM sales_performance GROUP BY performance_rating;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT category, AVG(unit_price) AS average_unit_price FROM product GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT sales_rep_id, AVG(performance_rating) AS average_rating FROM sales_performance GROUP BY sales_rep_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT category FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sale_id INT PRIMARY KEY,\n    sale_date DATE,\n    product_id INT,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE product (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_performance (\n    sale_id INT,\n    sale_date DATE,\n    sales_amount DECIMAL,\n    sales_rep_id INT,\n    performance_rating INT\n);\n\n### STATEMENT\n\nSELECT product_id, CAST(unit_price AS INT) AS unit_price_integer FROM product;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, sales_date, sales_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, category, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_id, rep_name, region, hire_date FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_name, region FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, rep_id, sales_amount, performance_rating FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, rep_id FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, sales_amount, performance_rating FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_date, sales_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_id, category FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_name, hire_date FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, rep_id, performance_rating FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, sales_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_id, region FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_name, category, unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, rep_id, sales_amount FROM sales_performance;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sales_amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_name, unit_price FROM products WHERE category = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_name, region FROM sales_representatives WHERE hire_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT sales_id, performance_rating FROM sales_performance WHERE sales_amount >= 5000 AND performance_rating > 4;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data INNER JOIN products ON sales_data.product_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_name, sales_amount FROM sales_representatives INNER JOIN sales_performance ON sales_representatives.rep_id = sales_performance.rep_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_name, category, unit_price FROM products LEFT JOIN sales_data ON products.product_id = sales_data.product_id;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT region FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT * FROM sales_data WHERE sales_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT AVG(sales_amount) AS avg_sales_amount FROM sales_data;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT MAX(unit_price) AS max_unit_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT MIN(sales_amount) AS min_sales_amount FROM sales_data WHERE product_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_sales_reps FROM sales_representatives;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_name, SUM(sales_amount) AS total_sales FROM sales_representatives INNER JOIN sales_performance ON sales_representatives.rep_id = sales_performance.rep_id GROUP BY rep_name;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_name, AVG(unit_price) AS avg_unit_price FROM products GROUP BY category;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT region, COUNT(*) AS total_reps FROM sales_representatives GROUP BY region HAVING COUNT(*) > 2;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_id, COUNT(*) AS total_sales FROM sales_data GROUP BY product_id ORDER BY total_sales DESC;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT rep_name, SUM(sales_amount) AS total_sales FROM sales_performance INNER JOIN sales_representatives ON sales_performance.rep_id = sales_representatives.rep_id GROUP BY rep_name HAVING SUM(sales_amount) > 5000;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT product_name, category, AVG(unit_price) AS avg_price, MAX(unit_price) AS max_price FROM products GROUP BY product_name, category;",
  "### TABLEDATA\n\nCREATE TABLE sales_data (\n    sales_id INT PRIMARY KEY,\n    product_id INT,\n    sales_date DATE,\n    sales_amount DECIMAL\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(50),\n    category VARCHAR(50),\n    unit_price DECIMAL\n);\n\nCREATE TABLE sales_representatives (\n    rep_id INT PRIMARY KEY,\n    rep_name VARCHAR(50),\n    region VARCHAR(50),\n    hire_date DATE\n);\n\nCREATE TABLE sales_performance (\n    sales_id INT,\n    rep_id INT,\n    sales_amount DECIMAL,\n    performance_rating INT,\n    FOREIGN KEY (sales_id) REFERENCES sales_data(sales_id),\n    FOREIGN KEY (rep_id) REFERENCES sales_representatives(rep_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT region FROM sales_representatives ORDER BY region DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT * FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, SaleAmount FROM SalesData;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT ProductID, ProductName, ProductPrice FROM Products;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerID, CustomerName, CustomerAddress FROM Customers;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT RepID, RepName, RepEmail FROM SalesRepresentatives;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, RepID, SaleAmount FROM SalesPerformance;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, SaleAmount, RepName FROM SalesPerformance INNER JOIN SalesRepresentatives ON SalesPerformance.RepID = SalesRepresentatives.RepID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, SaleAmount, ProductName FROM SalesData INNER JOIN Products ON SalesData.ProductID = Products.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleDate, SaleAmount, CustomerName FROM SalesData INNER JOIN SalesPerformance ON SalesData.SaleID = SalesPerformance.SaleID INNER JOIN Customers ON SalesPerformance.RepID = Customers.CustomerID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail, SaleAmount FROM Customers INNER JOIN SalesPerformance ON Customers.CustomerID = SalesPerformance.RepID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT s.SaleID, s.SaleAmount, p.ProductCategory FROM SalesData s INNER JOIN Products p ON s.ProductID = p.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT c.CustomerName, sp.SaleAmount, sr.RepName FROM Customers c INNER JOIN SalesPerformance sp ON c.CustomerID = sp.RepID INNER JOIN SalesRepresentatives sr ON sp.RepID = sr.RepID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT p.ProductName, p.ProductPrice, s.SaleAmount FROM Products p INNER JOIN SalesData s ON p.ProductID = s.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT r.RepName, r.RepEmail, sp.SaleAmount FROM SalesRepresentatives r INNER JOIN SalesPerformance sp ON r.RepID = sp.RepID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT s.SaleDate, s.SaleAmount, p.ProductName FROM SalesData s INNER JOIN Products p ON s.ProductID = p.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT c.CustomerName, c.CustomerEmail, sp.SaleAmount FROM Customers c INNER JOIN SalesPerformance sp ON c.CustomerID = sp.RepID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT p.ProductCategory, p.ProductPrice, s.SaleAmount FROM Products p INNER JOIN SalesData s ON p.ProductID = s.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT sr.RepName, sr.RepPhone, sp.SaleAmount FROM SalesRepresentatives sr INNER JOIN SalesPerformance sp ON sr.RepID = sp.RepID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT s.SaleDate, s.SaleAmount, c.CustomerName FROM SalesData s INNER JOIN SalesPerformance sp ON s.SaleID = sp.SaleID INNER JOIN Customers c ON sp.RepID = c.CustomerID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT p.ProductName, p.ProductPrice, s.SaleAmount FROM Products p INNER JOIN SalesData s ON p.ProductID = s.ProductID;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT * FROM SalesData INNER JOIN Products ON SalesData.ProductID = Products.ProductID ORDER BY SaleAmount DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail FROM Customers WHERE CustomerName LIKE 'A%' AND CustomerAddress LIKE '%Street';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT ProductName, ProductCategory, ProductPrice FROM Products WHERE ProductPrice > 100 ORDER BY ProductPrice ASC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepEmail LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, ProductName, SaleDate FROM SalesData JOIN Products ON SalesData.ProductID = Products.ProductID WHERE SaleDate > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerAddress = 'New York' OR CustomerAddress = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepPhone LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, SaleAmount FROM SalesData WHERE SaleAmount BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, RepName, SaleAmount FROM SalesData JOIN SalesRepresentatives ON SalesData.SaleID = SalesRepresentatives.RepID ORDER BY SaleAmount DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT ProductName, ProductCategory, ProductPrice FROM Products WHERE ProductCategory = 'Electronics';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerEmail NOT LIKE '%hotmail.com';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT RepName, RepEmail FROM SalesRepresentatives WHERE RepPhone LIKE '###-###-####';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, SaleDate, SaleAmount FROM SalesData WHERE SaleAmount > 500 ORDER BY SaleAmount DESC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerName IN ('Alice', 'Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepName LIKE '%John%' OR RepName LIKE '%David%';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, ProductName, SaleAmount FROM SalesData JOIN Products ON SalesData.ProductID = Products.ProductID WHERE ProductName LIKE '%Phone%';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT CustomerName, CustomerEmail, CustomerAddress FROM Customers WHERE CustomerAddress LIKE '%Avenue' AND CustomerName NOT LIKE '%Alice%';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT SaleID, RepName, SaleDate FROM SalesData JOIN SalesRepresentatives ON SalesData.SaleID = SalesRepresentatives.RepID WHERE SaleDate BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT ProductName, ProductPrice FROM Products WHERE ProductPrice < 50 ORDER BY ProductPrice ASC;",
  "### TABLEDATA\n\nCREATE TABLE SalesData (\n\tSaleID INT PRIMARY KEY,\n\tProductID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL\n)\n\nCREATE TABLE Products (\n\tProductID INT PRIMARY KEY,\n\tProductName VARCHAR(255),\n\tProductCategory VARCHAR(50),\n\tProductPrice DECIMAL\n)\n\nCREATE TABLE Customers (\n\tCustomerID INT PRIMARY KEY,\n\tCustomerName VARCHAR(255),\n\tCustomerEmail VARCHAR(255),\n\tCustomerAddress VARCHAR(255)\n)\n\nCREATE TABLE SalesRepresentatives (\n\tRepID INT PRIMARY KEY,\n\tRepName VARCHAR(255),\n\tRepEmail VARCHAR(255),\n\tRepPhone VARCHAR(20)\n)\n\nCREATE TABLE SalesPerformance (\n\tSaleID INT,\n\tRepID INT,\n\tSaleDate DATE,\n\tSaleAmount DECIMAL,\n\tFOREIGN KEY (SaleID) REFERENCES SalesData(SaleID),\n\tFOREIGN KEY (RepID) REFERENCES SalesRepresentatives(RepID)\n)\n\n### STATEMENT\n\nSELECT RepName, RepEmail, RepPhone FROM SalesRepresentatives WHERE RepName IN ('Alice', 'Bob', 'Charlie');"
]