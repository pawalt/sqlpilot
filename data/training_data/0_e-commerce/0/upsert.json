[
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 1', 10.50, 'Description for Product 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 1', price = 10.50, description = 'Description for Product 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 2', 20.75, 'Description for Product 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 2', price = 20.75, description = 'Description for Product 2';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 3', 30.99, 'Description for Product 3') ON CONFLICT (id) DO UPDATE SET name = 'Product 3', price = 30.99, description = 'Description for Product 3';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 4', 40.25, 'Description for Product 4') ON CONFLICT (id) DO UPDATE SET name = 'Product 4', price = 40.25, description = 'Description for Product 4';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 5', 50.90, 'Description for Product 5') ON CONFLICT (id) DO UPDATE SET name = 'Product 5', price = 50.90, description = 'Description for Product 5';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 6', 60.49, 'Description for Product 6') ON CONFLICT (id) DO UPDATE SET name = 'Product 6', price = 60.49, description = 'Description for Product 6';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 7', 70.75, 'Description for Product 7') ON CONFLICT (id) DO UPDATE SET name = 'Product 7', price = 70.75, description = 'Description for Product 7';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 8', 80.99, 'Description for Product 8') ON CONFLICT (id) DO UPDATE SET name = 'Product 8', price = 80.99, description = 'Description for Product 8';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 9', 90.25, 'Description for Product 9') ON CONFLICT (id) DO UPDATE SET name = 'Product 9', price = 90.25, description = 'Description for Product 9';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 10', 100.50, 'Description for Product 10') ON CONFLICT (id) DO UPDATE SET name = 'Product 10', price = 100.50, description = 'Description for Product 10';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 11', 110.75, 'Description for Product 11') ON CONFLICT (id) DO UPDATE SET name = 'Product 11', price = 110.75, description = 'Description for Product 11';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 12', 120.99, 'Description for Product 12') ON CONFLICT (id) DO UPDATE SET name = 'Product 12', price = 120.99, description = 'Description for Product 12';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 13', 130.25, 'Description for Product 13') ON CONFLICT (id) DO UPDATE SET name = 'Product 13', price = 130.25, description = 'Description for Product 13';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 14', 140.50, 'Description for Product 14') ON CONFLICT (id) DO UPDATE SET name = 'Product 14', price = 140.50, description = 'Description for Product 14';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 15', 150.75, 'Description for Product 15') ON CONFLICT (id) DO UPDATE SET name = 'Product 15', price = 150.75, description = 'Description for Product 15';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 16', 160.99, 'Description for Product 16') ON CONFLICT (id) DO UPDATE SET name = 'Product 16', price = 160.99, description = 'Description for Product 16';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 17', 170.25, 'Description for Product 17') ON CONFLICT (id) DO UPDATE SET name = 'Product 17', price = 170.25, description = 'Description for Product 17';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 18', 180.50, 'Description for Product 18') ON CONFLICT (id) DO UPDATE SET name = 'Product 18', price = 180.50, description = 'Description for Product 18';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 19', 190.75, 'Description for Product 19') ON CONFLICT (id) DO UPDATE SET name = 'Product 19', price = 190.75, description = 'Description for Product 19';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 20', 200.99, 'Description for Product 20') ON CONFLICT (id) DO UPDATE SET name = 'Product 20', price = 200.99, description = 'Description for Product 20';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 1', 10.00, 'Description 1') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 2', 15.99, 'Description 2') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 3', 20.50, 'Description 3') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 4', 5.49, 'Description 4') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 5', 12.75, 'Description 5') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 6', 8.25, 'Description 6') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 7', 23.00, 'Description 7') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 8', 17.99, 'Description 8') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 9', 6.75, 'Description 9') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 10', 30.25, 'Description 10') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 11', 9.99, 'Description 11') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 12', 18.50, 'Description 12') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 13', 14.75, 'Description 13') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 14', 22.00, 'Description 14') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 15', 7.49, 'Description 15') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 16', 10.25, 'Description 16') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 17', 19.99, 'Description 17') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 18', 16.75, 'Description 18') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 19', 25.50, 'Description 19') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product 20', 11.25, 'Description 20') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (1, 'Product 1', 10.99, 'Description 1') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 1 Updated', price = 11.99, description = 'Description 1 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (2, 'Product 2', 20.99, 'Description 2') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 2 Updated', price = 21.99, description = 'Description 2 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (3, 'Product 3', 30.99, 'Description 3') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 3 Updated', price = 31.99, description = 'Description 3 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (4, 'Product 4', 40.99, 'Description 4') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 4 Updated', price = 41.99, description = 'Description 4 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (5, 'Product 5', 50.99, 'Description 5') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 5 Updated', price = 51.99, description = 'Description 5 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (6, 'Product 6', 60.99, 'Description 6') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 6 Updated', price = 61.99, description = 'Description 6 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (7, 'Product 7', 70.99, 'Description 7') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 7 Updated', price = 71.99, description = 'Description 7 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (8, 'Product 8', 80.99, 'Description 8') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 8 Updated', price = 81.99, description = 'Description 8 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (9, 'Product 9', 90.99,'Description 9') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 9 Updated', price = 91.99, description = 'Description 9 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (10, 'Product 10', 100.99, 'Description 10') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 10 Updated', price = 101.99, description = 'Description 10 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (11, 'Product 11', 110.99, 'Description 11') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 11 Updated', price = 111.99, description = 'Description 11 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (12, 'Product 12', 120.99, 'Description 12') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 12 Updated', price = 121.99, description = 'Description 12 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (13, 'Product 13', 130.99, 'Description 13') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 13 Updated', price = 131.99, description = 'Description 13 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (14, 'Product 14', 140.99, 'Description 14') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 14 Updated', price = 141.99, description = 'Description 14 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (15, 'Product 15', 150.99, 'Description 15') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 15 Updated', price = 151.99, description = 'Description 15 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (16, 'Product 16', 160.99, 'Description 16') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 16 Updated', price = 161.99, description = 'Description 16 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (17, 'Product 17', 170.99, 'Description 17') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 17 Updated', price = 171.99, description = 'Description 17 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (18, 'Product 18', 180.99, 'Description 18') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 18 Updated', price = 181.99, description = 'Description 18 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (19, 'Product 19', 190.99, 'Description 19') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 19 Updated', price = 191.99, description = 'Description 19 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, name, price, description) VALUES (20, 'Product 20', 200.99, 'Description 20') ON CONFLICT (product_id) DO UPDATE SET name = 'Product 20 Updated', price = 201.99, description = 'Description 20 Updated';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (1, 'Product 1', 50.00, 'Description for Product 1') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 1', price = 55.00, description = 'Updated Description for Product 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (2, 'Product 2', 75.00, 'Description for Product 2') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 2', price = 80.00, description = 'Updated Description for Product 2';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (3, 'Product 3', 100.00, 'Description for Product 3') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 3', price = 105.00, description = 'Updated Description for Product 3';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (4, 'Product 4', 120.00, 'Description for Product 4') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 4', price = 125.00, description = 'Updated Description for Product 4';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (5, 'Product 5', 150.00, 'Description for Product 5') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 5', price = 155.00, description = 'Updated Description for Product 5';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (6, 'Product 6', 180.00, 'Description for Product 6') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 6', price = 185.00, description = 'Updated Description for Product 6';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (7, 'Product 7', 200.00, 'Description for Product 7') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 7', price = 205.00, description = 'Updated Description for Product 7';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (8, 'Product 8', 230.00, 'Description for Product 8') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 8', price = 235.00, description = 'Updated Description for Product 8';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (9, 'Product 9', 250.00, 'Description for Product 9') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 9', price = 255.00, description = 'Updated Description for Product 9';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (10, 'Product 10', 280.00, 'Description for Product 10') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 10', price = 285.00, description = 'Updated Description for Product 10';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (11, 'Product 11', 300.00, 'Description for Product 11') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 11', price = 305.00, description = 'Updated Description for Product 11';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (12, 'Product 12', 320.00, 'Description for Product 12') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 12', price = 325.00, description = 'Updated Description for Product 12';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (13, 'Product 13', 350.00, 'Description for Product 13') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 13', price = 355.00, description = 'Updated Description for Product 13';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (14, 'Product 14', 380.00, 'Description for Product 14') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 14', price = 385.00, description = 'Updated Description for Product 14';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (15, 'Product 15', 400.00, 'Description for Product 15') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 15', price = 405.00, description = 'Updated Description for Product 15';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (16, 'Product 16', 420.00, 'Description for Product 16') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 16', price = 425.00, description = 'Updated Description for Product 16';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (17, 'Product 17', 450.00, 'Description for Product 17') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 17', price = 455.00, description = 'Updated Description for Product 17';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (18, 'Product 18', 480.00, 'Description for Product 18') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 18', price = 485.00, description = 'Updated Description for Product 18';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (19, 'Product 19', 500.00, 'Description for Product 19') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 19', price = 505.00, description = 'Updated Description for Product 19';",
  "### TABLEDATA\n\nCREATE TABLE products (\n  product_id INT PRIMARY KEY,\n  name VARCHAR(255) NOT NULL,\n  price DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE categories (\n  category_id INT PRIMARY KEY,\n  category_name VARCHAR(100) NOT NULL,\n  product_id INT,\n  FOREIGN KEY (product_id) REFERENCES products(product_id)\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, name, price, description) VALUES (20, 'Product 20', 520.00, 'Description for Product 20') ON CONFLICT (product_id) DO UPDATE SET name = 'Updated Product 20', price = 525.00, description = 'Updated Description for Product 20';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price, description) VALUES (1, 'Product1', 10.99, 'Description1') ON CONFLICT (id) DO UPDATE SET name = 'Product1', price = 10.99, description = 'Description1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price, description) VALUES (2, 'Product2', 15.99, 'Description2') ON CONFLICT (id) DO UPDATE SET name = 'Product2', price = 15.99, description = 'Description2';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price, description) VALUES (3, 'Product3', 20.99, 'Description3') ON CONFLICT (id) DO UPDATE SET name = 'Product3', price = 20.99, description = 'Description3';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price, description) VALUES (4, 'Product4', 25.99, 'Description4') ON CONFLICT (id) DO UPDATE SET name = 'Product4', price = 25.99, description = 'Description4';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price, description) VALUES (5, 'Product5', 30.99, 'Description5') ON CONFLICT (id) DO UPDATE SET name = 'Product5', price = 30.99, description = 'Description5';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price,...]}  # the output will contain the example UPSERT SQL statements. This was a request from the user to generate 20 example UPSERT SQL statements.  The statements are simple and are for the database schema provided by the user. The UPSERT statements include inserting or updating records in the ",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price, description) VALUES (1, 'Product 1', 10.99, 'Description for Product 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 1 updated', price = 9.99, description = 'Updated description for Product 1';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price, description) VALUES (2, 'Product 2', 19.99, 'Description for Product 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 2 updated', price = 17.99, description = 'Updated description for Product 2';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price, description) VALUES (3, 'Product 3', 24.99, 'Description for Product 3') ON CONFLICT (id) DO UPDATE SET name = 'Product 3 updated', price = 22.99, description = 'Updated description for Product 3';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price, description) VALUES (4, 'Product 4', 14.99, 'Description for Product 4') ON CONFLICT (id) DO UPDATE SET name = 'Product 4 updated', price = 12.99, description = 'Updated description for Product 4';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price, description) VALUES (5, 'Product 5', 29.99, 'Description for Product 5') ON CONFLICT (id) DO UPDATE SET name = 'Product 5 updated', price = 27.99, description = 'Updated description for Product 5';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price, description) VALUES (6, 'Product 6', 34.99, 'Description for Product 6') ON CONFLICT (id) DO UPDATE SET name = 'Product 6 updated', price = 32.99, description = 'Updated description for Product 6';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id INT PRIMARY KEY,\n    name VARCHAR,\n    price FLOAT,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id INT PRIMARY KEY,\n    name VARCHAR\n);\n\nCREATE TABLE product_categories (\n    product_id INT,\n    category_id INT\n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price,...",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product1', 10.99, 'Description1') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category1') ON CONFLICT (id) DO UPDATE SET name = excluded.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO product_categories (product_id, category_id) VALUES (1, 1) ON CONFLICT (product_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier1', 'Location1') ON CONFLICT (id) DO UPDATE SET name = excluded.name, location = excluded.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product2', 20.99, 'Description2') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category2') ON CONFLICT (id) DO UPDATE SET name = excluded.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO product_categories (product_id, category_id) VALUES (2, 2) ON CONFLICT (product_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier2', 'Location2') ON CONFLICT (id) DO UPDATE SET name = excluded.name, location = excluded.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product3', 30.99, 'Description3') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category3') ON CONFLICT (id) DO UPDATE SET name = excluded.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO product_categories (product_id, category_id) VALUES (3, 3) ON CONFLICT (product_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier3', 'Location3') ON CONFLICT (id) DO UPDATE SET name = excluded.name, location = excluded.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product4', 40.99, 'Description4') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category4') ON CONFLICT (id) DO UPDATE SET name = excluded.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO product_categories (product_id, category_id) VALUES (4, 4) ON CONFLICT (product_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier4', 'Location4') ON CONFLICT (id) DO UPDATE SET name = excluded.name, location = excluded.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product5', 50.99, 'Description5') ON CONFLICT (id) DO UPDATE SET name = excluded.name, price = excluded.price, description = excluded.description;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category5') ON CONFLICT (id) DO UPDATE SET name = excluded.name;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO product_categories (product_id, category_id) VALUES (5, 5) ON CONFLICT (product_id, category_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier5', 'Location5') ON CONFLICT (id) DO UPDATE SET name = excluded.name, location = excluded.location;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE products SET price = price + 100 WHERE id = 1 ON CONFLICT (id) DO UPDATE SET price = excluded.price",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product A', 50, 'Description A') ON CONFLICT (name) DO UPDATE SET price = excluded.price",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product B', 75, 'Description B') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE categories SET name = 'New Category' WHERE id = 1 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category X') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier 1', 'Location 1') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE suppliers SET location = 'New Location' WHERE id = 1 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product C', 80, 'Description C') ON CONFLICT (name) DO UPDATE SET price = excluded.price",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE categories SET name = 'Updated Category' WHERE id = 2 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category Y') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name) VALUES ('Supplier 2') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE suppliers SET location = 'Location 2' WHERE id = 2 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product D', 90, 'Description D') ON CONFLICT (name) DO UPDATE SET price = excluded.price",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE categories SET name = 'Category Z' WHERE id = 3 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category Z') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, location) VALUES ('Supplier 3', 'Location 3') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE suppliers SET location = 'New Location 3' WHERE id = 3 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO products (name, price, description) VALUES ('Product E', 100, 'Description E') ON CONFLICT (name) DO UPDATE SET price = excluded.price",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nUPDATE categories SET name = 'Category W' WHERE id = 4 ON CONFLICT (id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE categories (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE product_categories (\n    product_id INT REFERENCES products(id),\n    category_id INT REFERENCES categories(id),\n    PRIMARY KEY (product_id, category_id)\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\n### STATEMENT\n\nINSERT INTO categories (name) VALUES ('Category W') ON CONFLICT DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (1, 'Product 1', 10.00, 'Description 1') ON CONFLICT (id) DO UPDATE SET name = 'Product 1', price = 10.00, description = 'Description 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (1, 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Category 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (1, 1) ON CONFLICT (product_id, category_id) DO UPDATE SET product_id = 1, category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (1, 'Supplier 1', 'Location 1') ON CONFLICT (id) DO UPDATE SET name = 'Supplier 1', location = 'Location 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (1, 100) ON CONFLICT (product_id) DO UPDATE SET quantity = 100;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (2, 'Product 2', 20.00, 'Description 2') ON CONFLICT (id) DO UPDATE SET name = 'Product 2', price = 20.00, description = 'Description 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (2, 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Category 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (2, 2) ON CONFLICT (product_id, category_id) DO UPDATE SET product_id = 2, category_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (2, 'Supplier 2', 'Location 2') ON CONFLICT (id) DO UPDATE SET name = 'Supplier 2', location = 'Location 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (2, 200) ON CONFLICT (product_id) DO UPDATE SET quantity = 200;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (3, 'Product 3', 30.00, 'Description 3') ON CONFLICT (id) DO UPDATE SET name = 'Product 3', price = 30.00, description = 'Description 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (3, 'Category 3') ON CONFLICT (id) DO UPDATE SET name = 'Category 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (3, 3) ON CONFLICT (product_id, category_id) DO UPDATE SET product_id = 3, category_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (3, 'Supplier 3', 'Location 3') ON CONFLICT (id) DO UPDATE SET name = 'Supplier 3', location = 'Location 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (3, 300) ON CONFLICT (product_id) DO UPDATE SET quantity = 300;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (4, 'Product 4', 40.00, 'Description 4') ON CONFLICT (id) DO UPDATE SET name = 'Product 4', price = 40.00, description = 'Description 4';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (4, 'Category 4') ON CONFLICT (id) DO UPDATE SET name = 'Category 4';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (4, 4) ON CONFLICT (product_id, category_id) DO UPDATE SET product_id = 4, category_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (4, 'Supplier 4', 'Location 4') ON CONFLICT (id) DO UPDATE SET name = 'Supplier 4', location = 'Location 4';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (4, 400) ON CONFLICT (product_id) DO UPDATE SET quantity = 400;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (1, 'Product 1', 10.99, 'Description 1') ON CONFLICT (id) DO UPDATE SET name = 'Updated Product 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (1, 'Category 1') ON CONFLICT (id) DO UPDATE SET name = 'Updated Category 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (1, 1) ON CONFLICT (product_id, category_id) DO UPDATE SET category_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (1, 'Supplier 1', 'Location 1') ON CONFLICT (id) DO UPDATE SET location = 'Updated Location 1';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (1, 100) ON CONFLICT (product_id) DO UPDATE SET quantity = quantity + 50;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (2, 'Product 2', 19.99, 'Description 2') ON CONFLICT (id) DO UPDATE SET name = 'Updated Product 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (2, 'Category 2') ON CONFLICT (id) DO UPDATE SET name = 'Updated Category 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (2, 2) ON CONFLICT (product_id, category_id) DO UPDATE SET category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (2, 'Supplier 2', 'Location 2') ON CONFLICT (id) DO UPDATE SET location = 'Updated Location 2';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (2, 150) ON CONFLICT (product_id) DO UPDATE SET quantity = quantity + 75;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Product (id, name, price, description) VALUES (3, 'Product 3', 29.99, 'Description 3') ON CONFLICT (id) DO UPDATE SET name = 'Updated Product 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Category (id, name) VALUES (3, 'Category 3') ON CONFLICT (id) DO UPDATE SET name = 'Updated Category 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO ProductCategory (product_id, category_id) VALUES (3, 3) ON CONFLICT (product_id, category_id) DO UPDATE SET category_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Supplier (id, name, location) VALUES (3, 'Supplier 3', 'Location 3') ON CONFLICT (id) DO UPDATE SET location = 'Updated Location 3';",
  "### TABLEDATA\n\nCREATE TABLE Product (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    price DECIMAL(10, 2) NOT NULL,\n    description TEXT\n);\n\nCREATE TABLE Category (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE ProductCategory (\n    product_id INT,\n    category_id INT,\n    PRIMARY KEY (product_id, category_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id),\n    FOREIGN KEY (category_id) REFERENCES Category(id)\n);\n\nCREATE TABLE Supplier (\n    id INT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    location VARCHAR(255)\n);\n\nCREATE TABLE Inventory (\n    product_id INT,\n    quantity INT NOT NULL,\n    PRIMARY KEY (product_id),\n    FOREIGN KEY (product_id) REFERENCES Product(id)\n);\n\n### STATEMENT\n\nINSERT INTO Inventory (product_id, quantity) VALUES (3, 200) ON CONFLICT (product_id) DO UPDATE SET quantity = quantity + 100;"
]