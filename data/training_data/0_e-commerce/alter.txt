<t>CREATE TABLE Products ( product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), category VARCHAR(50) )</t><stat>ALTER TABLE Products ADD COLUMN quantity INT</stat><divider><t>CREATE TABLE Products ( product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), category VARCHAR(50) )</t><stat>alter table products add column quantity int</stat><divider><t>CREATE TABLE Products ( product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), category VARCHAR(50) )</t><stat>ALTER TABLE Products MODIFY COLUMN product_name VARCHAR(100)</stat><divider><t>CREATE TABLE Products ( product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), category VARCHAR(50) )</t><stat>alter table products modify column product_name varchar(100)</stat><divider><t>CREATE TABLE Products ( product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), category VARCHAR(50) )</t><stat>ALTER TABLE Products DROP COLUMN category</stat><divider><t>CREATE TABLE Products ( product_id INT PRIMARY KEY, product_name VARCHAR(255), price DECIMAL(10, 2), category VARCHAR(50) )</t><stat>alter table products drop column category</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));</t><stat>ALTER TABLE products ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));</t><stat>alter table products add column description text;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);</t><stat>ALTER TABLE products ADD COLUMN description TEXT;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);</t><stat>alter table products add column description text;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));</t><stat>ALTER TABLE orders ADD COLUMN total_price DECIMAL(10,2) NOT NULL;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));</t><stat>alter table orders add column total_price decimal(10,2) not null;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);</t><stat>ALTER TABLE orders ADD COLUMN total_price DECIMAL(10,2) NOT NULL;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);</t><stat>alter table orders add column total_price decimal(10,2) not null;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));</t><stat>ALTER TABLE orders ADD COLUMN customer_name VARCHAR(255) NOT NULL;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);

CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));</t><stat>alter table orders add column customer_name varchar(255) not null;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);</t><stat>ALTER TABLE orders ADD COLUMN customer_name VARCHAR(255) NOT NULL;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, product_id INT, quantity INT NOT NULL, order_date DATE NOT NULL, FOREIGN KEY (product_id) REFERENCES products(product_id));

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL);</t><stat>alter table orders add column customer_name varchar(255) not null;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN phone_number VARCHAR(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>alter table customers add column phone_number varchar(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>ALTER TABLE customers ADD COLUMN phone_number VARCHAR(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>alter table customers add column phone_number varchar(20);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>ALTER TABLE customers ADD COLUMN phone_number VARCHAR(20);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>alter table customers add column phone_number varchar(20);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>ALTER TABLE customers ADD COLUMN phone_number VARCHAR(20);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>alter table customers add column phone_number varchar(20);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>ALTER TABLE customers ADD COLUMN phone_number VARCHAR(20);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>alter table customers add column phone_number varchar(20);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>ALTER TABLE customers ADD COLUMN phone_number VARCHAR(20);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>alter table customers add column phone_number varchar(20);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>ALTER TABLE orders MODIFY COLUMN total_amount DECIMAL(12, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>alter table orders modify column total_amount decimal(12, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>ALTER TABLE orders MODIFY COLUMN total_amount DECIMAL(12, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>alter table orders modify column total_amount decimal(12, 2);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>ALTER TABLE orders MODIFY COLUMN total_amount DECIMAL(12, 2);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>alter table orders modify column total_amount decimal(12, 2);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>ALTER TABLE orders MODIFY COLUMN total_amount DECIMAL(12, 2);</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>alter table orders modify column total_amount decimal(12, 2);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>ALTER TABLE orders MODIFY COLUMN total_amount DECIMAL(12, 2);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>alter table orders modify column total_amount decimal(12, 2);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>ALTER TABLE orders MODIFY COLUMN total_amount DECIMAL(12, 2);</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>alter table orders modify column total_amount decimal(12, 2);</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>ALTER TABLE products DROP COLUMN name;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>alter table products drop column name;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>ALTER TABLE products DROP COLUMN name;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>alter table products drop column name;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>ALTER TABLE products DROP COLUMN name;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));</t><stat>alter table products drop column name;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>ALTER TABLE products DROP COLUMN name;</stat><divider><t>CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>alter table products drop column name;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>ALTER TABLE products DROP COLUMN name;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));</t><stat>alter table products drop column name;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>ALTER TABLE products DROP COLUMN name;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2));

CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, total_amount DECIMAL(10, 2), order_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customers(customer_id));

CREATE TABLE customers (customer_id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));</t><stat>alter table products drop column name;</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN discount DECIMAL</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table products add column discount decimal</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN order_status TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table orders add column order_status text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number TEXT</stat><divider><t>CREATE TABLE order_items (
    order_item_id INT PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    total_price DECIMAL
);


CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name TEXT,
    email TEXT,
    address TEXT
);


CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL
);


CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name TEXT,
    price DECIMAL,
    category TEXT
);
</t><stat>alter table customers add column phone_number text</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE customers ADD COLUMN phone_number STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table customers add column phone_number string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE products ADD COLUMN quantity_in_stock INT;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table products add column quantity_in_stock int;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);
</t><stat>alter table orders add column shipping_address string;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>ALTER TABLE orders ADD COLUMN shipping_address STRING;</stat><divider><t>CREATE TABLE reviews (
    review_id UUID PRIMARY KEY,
    product_id UUID,
    customer_id UUID,
    rating INT,
    review_text TEXT
);


CREATE TABLE categories (
    category_id UUID PRIMARY KEY,
    category_name STRING
);


CREATE TABLE orders (
    order_id UUID PRIMARY KEY,
    customer_id UUID,
    product_id UUID,
    quantity INT,
    order_date DATE
);


CREATE TABLE products (
    product_id UUID PRIMARY KEY,
    product_name STRING,
    price DECIMAL,
    category STRING
);


CREATE TABLE customers (
    customer_id UUID PRIMARY KEY,
    customer_name STRING,
    email STRING,
    address STRING
);
</t><stat>alter table orders add column shipping_address string;</stat>