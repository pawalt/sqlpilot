[
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (1, 'Product 1', 100, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (2, 'Product 2', 150, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (3, 'Product 3', 200, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (4, 'Product 4', 250, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (5, 'Product 5', 300, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (6, 'Product 6', 350, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (7, 'Product 7', 400, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (8, 'Product 8', 450, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (9, 'Product 9', 500, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (10, 'Product 10', 550, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (11, 'Product 11', 600, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (12, 'Product 12', 650, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (13, 'Product 13', 700, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (14, 'Product 14', 750, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (15, 'Product 15', 800, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (16, 'Product 16', 850, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (17, 'Product 17', 900, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (18, 'Product 18', 950, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (19, 'Product 19', 1000, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (20, 'Product 20', 1050, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (1, 'Product A', 100, '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (2, 'Product B', 50, '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (3, 'Product C', 75, '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (4, 'Product D', 120, '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (5, 'Product E', 80, '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (6, 'Product F', 200, '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (7, 'Product G', 150, '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (8, 'Product H', 90, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (9, 'Product I', 110, '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (10, 'Product J', 70, '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (11, 'Product K', 130, '2022-01-11');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (12, 'Product L', 160, '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (13, 'Product M', 180, '2022-01-13');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (14, 'Product N', 190, '2022-01-14');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (15, 'Product O', 210, '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (16, 'Product P', 95, '2022-01-16');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (17, 'Product Q', 115, '2022-01-17');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (18, 'Product R', 140, '2022-01-18');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (19, 'Product S', 170, '2022-01-19');",
  "### TABLEDATA\n\nCREATE TABLE inventory (\n    product_id INT PRIMARY KEY,\n    product_name STRING,\n    stock_level INT,\n    last_updated TIMESTAMP\n)\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, product_name, stock_level, last_updated) VALUES (20, 'Product T', 200, '2022-01-20');",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (1, 'Product A', 10.50, 100);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (2, 'Product B', 20.75, 150);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (3, 'Product C', 30.25, 200);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (4, 'Product D', 40.00, 250);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (5, 'Product E', 50.50, 300);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (6, 'Product F', 60.75, 350);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (7, 'Product G', 70.25, 400);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (8, 'Product H', 80.00, 450);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (9, 'Product I', 90.50, 500);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO products (product_id, product_name, price, quantity) VALUES (10, 'Product J', 100.75, 550);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'Location X', 1000);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (2, 'Location Y', 1500);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (3, 'Location Z', 2000);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (4, 'Location A', 2500);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (5, 'Location B', 3000);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (6, 'Location C', 3500);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (7, 'Location D', 4000);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (8, 'Location E', 4500);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (9, 'Location F', 5000);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouse (warehouse_id, location, capacity) VALUES (10, 'Location G', 5500);",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (1, 'Widget A', 20.99, 100) ON DUPLICATE KEY UPDATE product_name = 'Widget A', price = 20.99, quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (2, 'Widget B', 15.99, 50) ON DUPLICATE KEY UPDATE product_name = 'Widget B', price = 15.99, quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (3, 'Widget C', 10.99, 75) ON DUPLICATE KEY UPDATE product_name = 'Widget C', price = 10.99, quantity = quantity + 8;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (4, 'Widget D', 5.99, 200) ON DUPLICATE KEY UPDATE product_name = 'Widget D', price = 5.99, quantity = quantity + 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (5, 'Widget E', 25.99, 120) ON DUPLICATE KEY UPDATE product_name = 'Widget E', price = 25.99, quantity = quantity + 12;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (6, 'Widget F', 13.99, 90) ON DUPLICATE KEY UPDATE product_name = 'Widget F', price = 13.99, quantity = quantity + 7;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (7, 'Widget G', 8.99, 150) ON DUPLICATE KEY UPDATE product_name = 'Widget G', price = 8.99, quantity = quantity + 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (8, 'Widget H', 18.99, 80) ON DUPLICATE KEY UPDATE product_name = 'Widget H', price = 18.99, quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (9, 'Widget I', 30.99, 100) ON DUPLICATE KEY UPDATE product_name = 'Widget I', price = 30.99, quantity = quantity + 10;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, quantity) VALUES (10, 'Widget J', 16.99, 60) ON DUPLICATE KEY UPDATE product_name = 'Widget J', price = 16.99, quantity = quantity + 5;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (1, 'Warehouse A', 500) ON DUPLICATE KEY UPDATE location = 'Warehouse A', capacity = capacity + 50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (2, 'Warehouse B', 300) ON DUPLICATE KEY UPDATE location = 'Warehouse B', capacity = capacity + 20;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (3, 'Warehouse C', 400) ON DUPLICATE KEY UPDATE location = 'Warehouse C', capacity = capacity + 30;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (4, 'Warehouse D', 600) ON DUPLICATE KEY UPDATE location = 'Warehouse D', capacity = capacity + 60;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (5, 'Warehouse E', 450) ON DUPLICATE KEY UPDATE location = 'Warehouse E', capacity = capacity + 40;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (6, 'Warehouse F', 350) ON DUPLICATE KEY UPDATE location = 'Warehouse F', capacity = capacity + 25;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (7, 'Warehouse G', 700) ON DUPLICATE KEY UPDATE location = 'Warehouse G', capacity = capacity + 70;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (8, 'Warehouse H', 250) ON DUPLICATE KEY UPDATE location = 'Warehouse H', capacity = capacity + 15;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (9, 'Warehouse I', 800) ON DUPLICATE KEY UPDATE location = 'Warehouse I', capacity = capacity + 80;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    quantity INT\n);\n\n\nCREATE TABLE warehouse (\n    warehouse_id INT PRIMARY KEY,\n    location VARCHAR(255),\n    capacity INT\n);\n\n### STATEMENT\n\nINSERT INTO warehouse (warehouse_id, location, capacity) VALUES (10, 'Warehouse J', 400) ON DUPLICATE KEY UPDATE location = 'Warehouse J', capacity = capacity + 40;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (1, 'Product 1', 10.99) ON DUPLICATE KEY UPDATE name = 'Product 1', price = 10.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (2, 'Product 2', 15.99) ON DUPLICATE KEY UPDATE name = 'Product 2', price = 15.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (3, 'Product 3', 20.99) ON DUPLICATE KEY UPDATE name = 'Product 3', price = 20.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (4, 'Product 4', 5.99) ON DUPLICATE KEY UPDATE name = 'Product 4', price = 5.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (5, 'Product 5', 18.99) ON DUPLICATE KEY UPDATE name = 'Product 5', price = 18.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (6, 'Product 6', 12.99) ON DUPLICATE KEY UPDATE name = 'Product 6', price = 12.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (7, 'Product 7', 8.99) ON DUPLICATE KEY UPDATE name = 'Product 7', price = 8.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (8, 'Product 8', 14.99) ON DUPLICATE KEY UPDATE name = 'Product 8', price = 14.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (9, 'Product 9', 11.99) ON DUPLICATE KEY UPDATE name = 'Product 9', price = 11.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (10, 'Product 10', 9.99) ON DUPLICATE KEY UPDATE name = 'Product 10', price = 9.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (11, 'Product 11', 6.99) ON DUPLICATE KEY UPDATE name = 'Product 11', price = 6.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (12, 'Product 12', 21.99) ON DUPLICATE KEY UPDATE name = 'Product 12', price = 21.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (13, 'Product 13', 16.99) ON DUPLICATE KEY UPDATE name = 'Product 13', price = 16.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (14, 'Product 14', 13.99) ON DUPLICATE KEY UPDATE name = 'Product 14', price = 13.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (15, 'Product 15', 7.99) ON DUPLICATE KEY UPDATE name = 'Product 15', price = 7.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (16, 'Product 16', 17.99) ON DUPLICATE KEY UPDATE name = 'Product 16', price = 17.99",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (17, 'Product 17', 11.50) ON DUPLICATE KEY UPDATE name = 'Product 17', price = 11.50",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (18, 'Product 18', 9.50) ON DUPLICATE KEY UPDATE name = 'Product 18', price = 9.50",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (19, 'Product 19', 15.50) ON DUPLICATE KEY UPDATE name = 'Product 19', price = 15.50",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nINSERT INTO products (id, name, price) VALUES (20, 'Product 20', 10.50) ON DUPLICATE KEY UPDATE name = 'Product 20', price = 10.50",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price) VALUES (1, 'Product A', 50.00) ON CONFLICT (id) DO UPDATE SET name = 'Product A', price = 50.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price) VALUES (2, 'Product B', 75.00) ON CONFLICT (id) DO UPDATE SET name = 'Product B', price = 75.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price) VALUES (3, 'Product C', 100.00) ON CONFLICT (id) DO UPDATE SET name = 'Product C', price = 100.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price) VALUES (4, 'Product D', 120.00) ON CONFLICT (id) DO UPDATE SET name = 'Product D', price = 120.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, price) VALUES (5, 'Product E', 80.00) ON CONFLICT (id) DO UPDATE SET name = 'Product E', price = 80.00;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, quantity) VALUES (1, 10) ON CONFLICT (product_id) DO UPDATE SET quantity = 10;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, quantity) VALUES (2, 20) ON CONFLICT (product_id) DO UPDATE SET quantity = 20;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, quantity) VALUES (3, 15) ON CONFLICT (product_id) DO UPDATE SET quantity = 15;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, quantity) VALUES (4, 5) ON CONFLICT (product_id) DO UPDATE SET quantity = 5;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO inventory (product_id, quantity) VALUES (5, 8) ON CONFLICT (product_id) DO UPDATE SET quantity = 8;",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, location) VALUES (1, 'Supplier X', 'New York') ON CONFLICT (id) DO UPDATE SET name = 'Supplier X', location = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, location) VALUES (2, 'Supplier Y', 'Los Angeles') ON CONFLICT (id) DO UPDATE SET name = 'Supplier Y', location = 'Los Angeles';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, location) VALUES (3, 'Supplier Z', 'Chicago') ON CONFLICT (id) DO UPDATE SET name = 'Supplier Z', location = 'Chicago';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, location) VALUES (4, 'Supplier W', 'Miami') ON CONFLICT (id) DO UPDATE SET name = 'Supplier W', location = 'Miami';",
  "### TABLEDATA\n\nCREATE TABLE products ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n price DECIMAL(10, 2) \n);\n\nCREATE TABLE inventory ( \n product_id INT, \n quantity INT, \n FOREIGN KEY (product_id) REFERENCES products(id) \n);\n\nCREATE TABLE suppliers ( \n id INT PRIMARY KEY, \n name VARCHAR(255), \n location VARCHAR(255) \n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, location) VALUES (5, 'Supplier V', 'Seattle') ON CONFLICT (id) DO UPDATE SET name = 'Supplier V', location = 'Seattle';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, quantity, price) VALUES ('Product A', 100, 10.50) ON CONFLICT (id) DO UPDATE SET name = excluded.name, quantity = excluded.quantity, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, contact_name, contact_email) VALUES ('Supplier X', 'John Doe', 'john.doe@example.com') ON CONFLICT (id) DO UPDATE SET name = excluded.name, contact_name = excluded.contact_name, contact_email = excluded.contact_email;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO orders (product_id, supplier_id, quantity, order_date) VALUES (1, 1, 50, '2022-01-01') ON CONFLICT (id) DO UPDATE SET product_id = excluded.product_id, supplier_id = excluded.supplier_id, quantity = excluded.quantity, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (location, capacity, supervisor) VALUES ('Warehouse 1', 5000, 'Alice Smith') ON CONFLICT (id) DO UPDATE SET location = excluded.location, capacity = excluded.capacity, supervisor = excluded.supervisor;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, quantity, price) VALUES ('Product B', 200, 20.75) ON CONFLICT (id) DO UPDATE SET name = excluded.name, quantity = excluded.quantity, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, contact_name, contact_email) VALUES ('Supplier Y', 'Jane Smith', 'jane.smith@example.com') ON CONFLICT (id) DO UPDATE SET name = excluded.name, contact_name = excluded.contact_name, contact_email = excluded.contact_email;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO orders (product_id, supplier_id, quantity, order_date) VALUES (2, 2, 75, '2022-01-15') ON CONFLICT (id) DO UPDATE SET product_id = excluded.product_id, supplier_id = excluded.supplier_id, quantity = excluded.quantity, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (location, capacity, supervisor) VALUES ('Warehouse 2', 8000, 'Bob Johnson') ON CONFLICT (id) DO UPDATE SET location = excluded.location, capacity = excluded.capacity, supervisor = excluded.supervisor;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, quantity, price) VALUES ('Product C', 150, 15.25) ON CONFLICT (id) DO UPDATE SET name = excluded.name, quantity = excluded.quantity, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, contact_name, contact_email) VALUES ('Supplier Z', 'Mark Davis', 'mark.davis@example.com') ON CONFLICT (id) DO UPDATE SET name = excluded.name, contact_name = excluded.contact_name, contact_email = excluded.contact_email;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO orders (product_id, supplier_id, quantity, order_date) VALUES (3, 3, 100, '2022-01-30') ON CONFLICT (id) DO UPDATE SET product_id = excluded.product_id, supplier_id = excluded.supplier_id, quantity = excluded.quantity, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (location, capacity, supervisor) VALUES ('Warehouse 3', 10000, 'Sarah Lee') ON CONFLICT (id) DO UPDATE SET location = excluded.location, capacity = excluded.capacity, supervisor = excluded.supervisor;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, quantity, price) VALUES ('Product D', 120, 18.50) ON CONFLICT (id) DO UPDATE SET name = excluded.name, quantity = excluded.quantity, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, contact_name, contact_email) VALUES ('Supplier W', 'Michael Brown', 'michael.brown@example.com') ON CONFLICT (id) DO UPDATE SET name = excluded.name, contact_name = excluded.contact_name, contact_email = excluded.contact_email;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO orders (product_id, supplier_id, quantity, order_date) VALUES (4, 4, 90, '2022-02-05') ON CONFLICT (id) DO UPDATE SET product_id = excluded.product_id, supplier_id = excluded.supplier_id, quantity = excluded.quantity, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (location, capacity, supervisor) VALUES ('Warehouse 4', 12000, 'Tom Adams') ON CONFLICT (id) DO UPDATE SET location = excluded.location, capacity = excluded.capacity, supervisor = excluded.supervisor;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO products (name, quantity, price) VALUES ('Product E', 90, 22.00) ON CONFLICT (id) DO UPDATE SET name = excluded.name, quantity = excluded.quantity, price = excluded.price;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO suppliers (name, contact_name, contact_email) VALUES ('Supplier V', 'Emily White', 'emily.white@example.com') ON CONFLICT (id) DO UPDATE SET name = excluded.name, contact_name = excluded.contact_name, contact_email = excluded.contact_email;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO orders (product_id, supplier_id, quantity, order_date) VALUES (5, 5, 110, '2022-02-20') ON CONFLICT (id) DO UPDATE SET product_id = excluded.product_id, supplier_id = excluded.supplier_id, quantity = excluded.quantity, order_date = excluded.order_date;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nINSERT INTO warehouses (location, capacity, supervisor) VALUES ('Warehouse 5', 15000, 'Peter Young') ON CONFLICT (id) DO UPDATE SET location = excluded.location, capacity = excluded.capacity, supervisor = excluded.supervisor;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, quantity, price) VALUES (1, 'Product1', 100, 10.99) ON CONFLICT (id) DO UPDATE SET name = 'Product1', quantity = 100, price = 10.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, contact_name, contact_email) VALUES (1, 'Supplier1', 'John Doe', 'john@example.com') ON CONFLICT (id) DO UPDATE SET name = 'Supplier1', contact_name = 'John Doe', contact_email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO orders (id, product_id, supplier_id, quantity, order_date) VALUES (1, 1, 1, 10, '2021-10-01') ON CONFLICT (id) DO UPDATE SET product_id = 1, supplier_id = 1, quantity = 10, order_date = '2021-10-01';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity, supervisor) VALUES (1, 'Warehouse1', 1000, 'Alice Smith') ON CONFLICT (id) DO UPDATE SET location = 'Warehouse1', capacity = 1000, supervisor = 'Alice Smith';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, quantity, price) VALUES (2, 'Product2', 50, 19.99) ON CONFLICT (id) DO UPDATE SET name = 'Product2', quantity = 50, price = 19.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, contact_name, contact_email) VALUES (2, 'Supplier2', 'Jane Smith', 'jane@example.com') ON CONFLICT (id) DO UPDATE SET name = 'Supplier2', contact_name = 'Jane Smith', contact_email = 'jane@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO orders (id, product_id, supplier_id, quantity, order_date) VALUES (2, 2, 2, 8, '2021-10-05') ON CONFLICT (id) DO UPDATE SET product_id = 2, supplier_id = 2, quantity = 8, order_date = '2021-10-05';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity, supervisor) VALUES (2, 'Warehouse2', 2000, 'Bob Johnson') ON CONFLICT (id) DO UPDATE SET location = 'Warehouse2', capacity = 2000, supervisor = 'Bob Johnson';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, quantity, price) VALUES (3, 'Product3', 200, 5.99) ON CONFLICT (id) DO UPDATE SET name = 'Product3', quantity = 200, price = 5.99;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, contact_name, contact_email) VALUES (3, 'Supplier3', 'Alice Brown', 'alice@example.com') ON CONFLICT (id) DO UPDATE SET name = 'Supplier3', contact_name = 'Alice Brown', contact_email = 'alice@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO orders (id, product_id, supplier_id, quantity, order_date) VALUES (3, 3, 3, 15, '2021-10-10') ON CONFLICT (id) DO UPDATE SET product_id = 3, supplier_id = 3, quantity = 15, order_date = '2021-10-10';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity, supervisor) VALUES (3, 'Warehouse3', 1500, 'Cathy Lee') ON CONFLICT (id) DO UPDATE SET location = 'Warehouse3', capacity = 1500, supervisor = 'Cathy Lee';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, quantity, price) VALUES (4, 'Product4', 70, 15.50) ON CONFLICT (id) DO UPDATE SET name = 'Product4', quantity = 70, price = 15.50;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, contact_name, contact_email) VALUES (4, 'Supplier4', 'Mike Davis', 'mike@example.com') ON CONFLICT (id) DO UPDATE SET name = 'Supplier4', contact_name = 'Mike Davis', contact_email = 'mike@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO orders (id, product_id, supplier_id, quantity, order_date) VALUES (4, 4, 4, 20, '2021-10-15') ON CONFLICT (id) DO UPDATE SET product_id = 4, supplier_id = 4, quantity = 20, order_date = '2021-10-15';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity, supervisor) VALUES (4, 'Warehouse4', 1200, 'David Brown') ON CONFLICT (id) DO UPDATE SET location = 'Warehouse4', capacity = 1200, supervisor = 'David Brown';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO products (id, name, quantity, price) VALUES (5, 'Product5', 120, 8.75) ON CONFLICT (id) DO UPDATE SET name = 'Product5', quantity = 120, price = 8.75;",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO suppliers (id, name, contact_name, contact_email) VALUES (5, 'Supplier5', 'Sarah White', 'sarah@example.com') ON CONFLICT (id) DO UPDATE SET name = 'Supplier5', contact_name = 'Sarah White', contact_email = 'sarah@example.com';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO orders (id, product_id, supplier_id, quantity, order_date) VALUES (5, 5, 5, 25, '2021-10-20') ON CONFLICT (id) DO UPDATE SET product_id = 5, supplier_id = 5, quantity = 25, order_date = '2021-10-20';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    quantity INTEGER NOT NULL,\n    price DECIMAL NOT NULL\n);\n\nCREATE TABLE suppliers (\n    id SERIAL PRIMARY KEY,\n    name TEXT NOT NULL,\n    contact_name TEXT,\n    contact_email TEXT\n);\n\nCREATE TABLE orders (\n    id SERIAL PRIMARY KEY,\n    product_id INTEGER REFERENCES products(id),\n    supplier_id INTEGER REFERENCES suppliers(id),\n    quantity INTEGER NOT NULL,\n    order_date DATE NOT NULL\n);\n\nCREATE TABLE warehouses (\n    id SERIAL PRIMARY KEY,\n    location TEXT NOT NULL,\n    capacity INTEGER NOT NULL,\n    supervisor TEXT\n);\n\n### STATEMENT\n\nUPSERT INTO warehouses (id, location, capacity, supervisor) VALUES (5, 'Warehouse5', 1800, 'Emily Green') ON CONFLICT (id) DO UPDATE SET location = 'Warehouse5', capacity = 1800, supervisor = 'Emily Green';",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (1, 'Product A', 20.00, 50) ON DUPLICATE KEY UPDATE product_name = 'Product A', price = 20.00, stock_quantity = 50",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (2, 'Product B', 30.00, 40) ON DUPLICATE KEY UPDATE product_name = 'Product B', price = 30.00, stock_quantity = 40",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (3, 'Product C', 25.50, 60) ON DUPLICATE KEY UPDATE product_name = 'Product C', price = 25.50, stock_quantity = 60",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (4, 'Product D', 15.75, 70) ON DUPLICATE KEY UPDATE product_name = 'Product D', price = 15.75, stock_quantity = 70",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (5, 'Product E', 35.25, 45) ON DUPLICATE KEY UPDATE product_name = 'Product E', price = 35.25, stock_quantity = 45",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (6, 'Product F', 40.50, 55) ON DUPLICATE KEY UPDATE product_name = 'Product F', price = 40.50, stock_quantity = 55",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (7, 'Product G', 22.80, 65) ON DUPLICATE KEY UPDATE product_name = 'Product G', price = 22.80, stock_quantity = 65",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (8, 'Product H', 18.90, 73) ON DUPLICATE KEY UPDATE product_name = 'Product H', price = 18.90, stock_quantity = 73",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (9, 'Product I', 27.99, 48) ON DUPLICATE KEY UPDATE product_name = 'Product I', price = 27.99, stock_quantity = 48",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (10, 'Product J', 33.50, 62) ON DUPLICATE KEY UPDATE product_name = 'Product J', price = 33.50, stock_quantity = 62",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (11, 'Product K', 16.25, 70) ON DUPLICATE KEY UPDATE product_name = 'Product K', price = 16.25, stock_quantity = 70",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (12, 'Product L', 29.75, 58) ON DUPLICATE KEY UPDATE product_name = 'Product L', price = 29.75, stock_quantity = 58",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (13, 'Product M', 37.80, 47) ON DUPLICATE KEY UPDATE product_name = 'Product M', price = 37.80, stock_quantity = 47",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (14, 'Product N', 21.45, 65) ON DUPLICATE KEY UPDATE product_name = 'Product N', price = 21.45, stock_quantity = 65",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (15, 'Product O', 24.99, 52) ON DUPLICATE KEY UPDATE product_name = 'Product O', price = 24.99, stock_quantity = 52",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (16, 'Product P', 18.25, 67) ON DUPLICATE KEY UPDATE product_name = 'Product P', price = 18.25, stock_quantity = 67",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (17, 'Product Q', 31.10, 40) ON DUPLICATE KEY UPDATE product_name = 'Product Q', price = 31.10, stock_quantity = 40",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (18, 'Product R', 14.75, 75) ON DUPLICATE KEY UPDATE product_name = 'Product R', price = 14.75, stock_quantity = 75",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (19, 'Product S', 26.50, 55) ON DUPLICATE KEY UPDATE product_name = 'Product S', price = 26.50, stock_quantity = 55",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (20, 'Product T', 19.99, 70) ON DUPLICATE KEY UPDATE product_name = 'Product T', price = 19.99, stock_quantity = 70",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (1, 'Product 1', 10.99, 100) ON CONFLICT (product_id) DO UPDATE SET product_name = 'Product 1 Updated', price = 12.99, stock_quantity = 150",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO products (product_id, product_name, price, stock_quantity) VALUES (2, 'Product 2', 20.50, 50) ON CONFLICT (product_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO categories (category_id, category_name) VALUES (1, 'Category 1') ON CONFLICT (category_id) DO NOTHING",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO suppliers (supplier_id, supplier_name, contact_email) VALUES (1, 'Supplier 1', 'supplier1@example.com') ON CONFLICT (supplier_id) DO UPDATE SET supplier_name = 'Supplier 1 Updated', contact_email = 'supplier1_updated@example.com'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO orders (order_id, product_id, quantity_ordered, order_date) VALUES (1, 1, 5, NOW()) ON CONFLICT (order_id) DO UPDATE SET product_id = 2, quantity_ordered = 10, order_date = NOW() + INTERVAL '1 day'",
  "### TABLEDATA\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(255),\n    price DECIMAL(10, 2),\n    stock_quantity INT\n)\n\nCREATE TABLE categories (\n    category_id INT PRIMARY KEY,\n    category_name VARCHAR(255)\n)\n\nCREATE TABLE suppliers (\n    supplier_id INT PRIMARY KEY,\n    supplier_name VARCHAR(255),\n    contact_email VARCHAR(255)\n)\n\nCREATE TABLE orders (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    quantity_ordered INT,\n    order_date TIMESTAMP\n)\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    contact_number VARCHAR(15),\n    address TEXT\n)\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, contact_number, address) VALUES (1, 'Customer 1', '123-456-7890', '123 Street, City') ON CONFLICT (customer_id) DO NOTHING"
]