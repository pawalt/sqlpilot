[
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n  transaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  payment_method VARCHAR,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_information SET payment_method = 'Credit Card' WHERE transaction_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n  transaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  payment_method VARCHAR,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_information SET amount = 50.00 WHERE user_id = '987e6543-a21b-43c5-b678-926714163333';",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n  transaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  payment_method VARCHAR,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_information SET timestamp = '2021-10-15 08:30:00' WHERE user_id = '987e6543-a21b-43c5-b678-926714163333';",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n  transaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  payment_method VARCHAR,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_information SET payment_method = 'Credit Card' WHERE amount > 1000 AND user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n  transaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  payment_method VARCHAR,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_information SET amount = amount * 1.1, payment_method = 'PayPal' WHERE user_id = '123e4567-e89b-12d3-a456-426614174000' AND timestamp < '2022-07-01 00:00:00';",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n  transaction_id UUID PRIMARY KEY,\n  user_id UUID,\n  payment_method VARCHAR,\n  amount DECIMAL,\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_information SET payment_method = 'Bitcoin', amount = 9999.99 WHERE transaction_id = '1a2b3c4d-5e6f-7a8b-9c0d-1e1f2a3b4c5d';",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  user_id INT,\n  payment_amount DECIMAL,\n  payment_date TIMESTAMP\n);\n\nCREATE TABLE payment_history (\n  history_id INT PRIMARY KEY,\n  payment_id INT,\n  transaction_status VARCHAR,\n  transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_amount = 100.25 WHERE payment_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  user_id INT,\n  payment_amount DECIMAL,\n  payment_date TIMESTAMP\n);\n\nCREATE TABLE payment_history (\n  history_id INT PRIMARY KEY,\n  payment_id INT,\n  transaction_status VARCHAR,\n  transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_date = '2022-01-15 08:30:00' WHERE user_id = 101;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  user_id INT,\n  payment_amount DECIMAL,\n  payment_date TIMESTAMP\n);\n\nCREATE TABLE payment_history (\n  history_id INT PRIMARY KEY,\n  payment_id INT,\n  transaction_status VARCHAR,\n  transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_history SET transaction_status = 'SUCCESS' WHERE history_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  user_id INT,\n  payment_amount DECIMAL,\n  payment_date TIMESTAMP\n);\n\nCREATE TABLE payment_history (\n  history_id INT PRIMARY KEY,\n  payment_id INT,\n  transaction_status VARCHAR,\n  transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payments SET payment_amount = payment_amount * 1.1 WHERE payment_id = 100;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  user_id INT,\n  payment_amount DECIMAL,\n  payment_date TIMESTAMP\n);\n\nCREATE TABLE payment_history (\n  history_id INT PRIMARY KEY,\n  payment_id INT,\n  transaction_status VARCHAR,\n  transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payment_history SET transaction_status = 'Completed', transaction_date = NOW() WHERE payment_id = 200;",
  "### TABLEDATA\n\nCREATE TABLE payments (\n  payment_id INT PRIMARY KEY,\n  user_id INT,\n  payment_amount DECIMAL,\n  payment_date TIMESTAMP\n);\n\nCREATE TABLE payment_history (\n  history_id INT PRIMARY KEY,\n  payment_id INT,\n  transaction_status VARCHAR,\n  transaction_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPDATE payments p INNER JOIN payment_history ph ON p.payment_id = ph.payment_id SET p.payment_amount = p.payment_amount + 50 WHERE p.user_id = 500;",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n    id INT PRIMARY KEY,\n    card_number VARCHAR(16) NOT NULL,\n    card_holder_name VARCHAR(50) NOT NULL,\n    expiration_date DATE NOT NULL,\n    cvv VARCHAR(3) NOT NULL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    payment_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    FOREIGN KEY (payment_id) REFERENCES payment_information(id)\n);\n\nCREATE TABLE user_account (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE payment_information SET card_holder_name = 'John Doe' WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n    id INT PRIMARY KEY,\n    card_number VARCHAR(16) NOT NULL,\n    card_holder_name VARCHAR(50) NOT NULL,\n    expiration_date DATE NOT NULL,\n    cvv VARCHAR(3) NOT NULL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    payment_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    FOREIGN KEY (payment_id) REFERENCES payment_information(id)\n);\n\nCREATE TABLE user_account (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE transaction_history SET amount = 100.00 WHERE transaction_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n    id INT PRIMARY KEY,\n    card_number VARCHAR(16) NOT NULL,\n    card_holder_name VARCHAR(50) NOT NULL,\n    expiration_date DATE NOT NULL,\n    cvv VARCHAR(3) NOT NULL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    payment_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    FOREIGN KEY (payment_id) REFERENCES payment_information(id)\n);\n\nCREATE TABLE user_account (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_account SET email = 'example@email.com' WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n    id INT PRIMARY KEY,\n    card_number VARCHAR(16) NOT NULL,\n    card_holder_name VARCHAR(50) NOT NULL,\n    expiration_date DATE NOT NULL,\n    cvv VARCHAR(3) NOT NULL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    payment_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    FOREIGN KEY (payment_id) REFERENCES payment_information(id)\n);\n\nCREATE TABLE user_account (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE payment_information SET card_number='1234567890123456', expiration_date='2023-12-01' WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n    id INT PRIMARY KEY,\n    card_number VARCHAR(16) NOT NULL,\n    card_holder_name VARCHAR(50) NOT NULL,\n    expiration_date DATE NOT NULL,\n    cvv VARCHAR(3) NOT NULL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    payment_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    FOREIGN KEY (payment_id) REFERENCES payment_information(id)\n);\n\nCREATE TABLE user_account (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE transaction_history SET amount=150.75, transaction_date='2023-08-15 14:30:00' WHERE transaction_id=1001;",
  "### TABLEDATA\n\nCREATE TABLE payment_information (\n    id INT PRIMARY KEY,\n    card_number VARCHAR(16) NOT NULL,\n    card_holder_name VARCHAR(50) NOT NULL,\n    expiration_date DATE NOT NULL,\n    cvv VARCHAR(3) NOT NULL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    payment_id INT NOT NULL,\n    amount DECIMAL(10, 2) NOT NULL,\n    transaction_date TIMESTAMP NOT NULL,\n    FOREIGN KEY (payment_id) REFERENCES payment_information(id)\n);\n\nCREATE TABLE user_account (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) UNIQUE NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE user_account SET password='newpassword123' WHERE user_id=101;",
  "### TABLEDATA\n\nCREATE TABLE PaymentAccounts (\n  account_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  account_number VARCHAR(16) NOT NULL,\n  expiration_date DATE NOT NULL,\n  cvv INTEGER NOT NULL\n);\n\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE Users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  password VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE PaymentLogs (\n  log_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  log_date TIMESTAMP NOT NULL,\n  action VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE PaymentAccounts SET expiration_date = '2023-12-31' WHERE account_id = '123e4567-e89b-12d3-a456-426655440000';",
  "### TABLEDATA\n\nCREATE TABLE PaymentAccounts (\n  account_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  account_number VARCHAR(16) NOT NULL,\n  expiration_date DATE NOT NULL,\n  cvv INTEGER NOT NULL\n);\n\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE Users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  password VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE PaymentLogs (\n  log_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  log_date TIMESTAMP NOT NULL,\n  action VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Transactions SET amount = 100.50 WHERE transaction_id = '123e4567-e89b-12d3-a456-426655440001';",
  "### TABLEDATA\n\nCREATE TABLE PaymentAccounts (\n  account_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  account_number VARCHAR(16) NOT NULL,\n  expiration_date DATE NOT NULL,\n  cvv INTEGER NOT NULL\n);\n\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE Users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  password VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE PaymentLogs (\n  log_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  log_date TIMESTAMP NOT NULL,\n  action VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Users SET password = 'newpassword123' WHERE user_id = '123e4567-e89b-12d3-a456-426655440002';",
  "### TABLEDATA\n\nCREATE TABLE PaymentAccounts (\n  account_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  account_number VARCHAR(16) NOT NULL,\n  expiration_date DATE NOT NULL,\n  cvv INTEGER NOT NULL\n);\n\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE Users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  password VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE PaymentLogs (\n  log_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  log_date TIMESTAMP NOT NULL,\n  action VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE PaymentAccounts SET expiration_date = '2023-12-31' WHERE account_id = '6f24c1c6-ebd4-4a0d-9823-3ad9249a14b0';",
  "### TABLEDATA\n\nCREATE TABLE PaymentAccounts (\n  account_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  account_number VARCHAR(16) NOT NULL,\n  expiration_date DATE NOT NULL,\n  cvv INTEGER NOT NULL\n);\n\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE Users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  password VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE PaymentLogs (\n  log_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  log_date TIMESTAMP NOT NULL,\n  action VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Transactions SET amount = 1500.25, description = 'Payment for services' WHERE transaction_id = 'd822c0ab-3c1b-4b85-bcaa-9f394d7c3b6b';",
  "### TABLEDATA\n\nCREATE TABLE PaymentAccounts (\n  account_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  account_number VARCHAR(16) NOT NULL,\n  expiration_date DATE NOT NULL,\n  cvv INTEGER NOT NULL\n);\n\n\nCREATE TABLE Transactions (\n  transaction_id UUID PRIMARY KEY,\n  account_id UUID NOT NULL,\n  transaction_date TIMESTAMP NOT NULL,\n  amount DECIMAL(10, 2) NOT NULL,\n  description TEXT\n);\n\n\nCREATE TABLE Users (\n  user_id UUID PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  email VARCHAR(100) UNIQUE NOT NULL,\n  password VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE PaymentLogs (\n  log_id UUID PRIMARY KEY,\n  user_id UUID NOT NULL,\n  log_date TIMESTAMP NOT NULL,\n  action VARCHAR(50) NOT NULL\n);\n\n### STATEMENT\n\nUPDATE Users SET email = 'newemail@example.com' WHERE user_id = 'b117e7be-f0d7-4c4b-8899-450c33cb298f';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE payment_methods (\n    payment_method_id INT PRIMARY KEY,\n    user_id INT,\n    payment_type VARCHAR(50),\n    card_number VARCHAR(16),\n    expiration_date DATE,\n    cvv VARCHAR(3),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    user_id INT,\n    street VARCHAR(100),\n    city VARCHAR(50),\n    zip_code VARCHAR(10),\n    country VARCHAR(50),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE users SET email='new_email@example.com' WHERE user_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE payment_methods (\n    payment_method_id INT PRIMARY KEY,\n    user_id INT,\n    payment_type VARCHAR(50),\n    card_number VARCHAR(16),\n    expiration_date DATE,\n    cvv VARCHAR(3),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    user_id INT,\n    street VARCHAR(100),\n    city VARCHAR(50),\n    zip_code VARCHAR(10),\n    country VARCHAR(50),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE payment_methods SET payment_type='Credit Card' WHERE payment_method_id=1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE payment_methods (\n    payment_method_id INT PRIMARY KEY,\n    user_id INT,\n    payment_type VARCHAR(50),\n    card_number VARCHAR(16),\n    expiration_date DATE,\n    cvv VARCHAR(3),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    user_id INT,\n    street VARCHAR(100),\n    city VARCHAR(50),\n    zip_code VARCHAR(10),\n    country VARCHAR(50),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE addresses SET zip_code='12345' WHERE user_id=2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE payment_methods (\n    payment_method_id INT PRIMARY KEY,\n    user_id INT,\n    payment_type VARCHAR(50),\n    card_number VARCHAR(16),\n    expiration_date DATE,\n    cvv VARCHAR(3),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    user_id INT,\n    street VARCHAR(100),\n    city VARCHAR(50),\n    zip_code VARCHAR(10),\n    country VARCHAR(50),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE users SET email = 'newemail@example.com' WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE payment_methods (\n    payment_method_id INT PRIMARY KEY,\n    user_id INT,\n    payment_type VARCHAR(50),\n    card_number VARCHAR(16),\n    expiration_date DATE,\n    cvv VARCHAR(3),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    user_id INT,\n    street VARCHAR(100),\n    city VARCHAR(50),\n    zip_code VARCHAR(10),\n    country VARCHAR(50),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE payment_methods SET card_number = '1234567890123456' WHERE payment_method_id = 1",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100),\n    password_hash VARCHAR(100)\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date TIMESTAMP,\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE payment_methods (\n    payment_method_id INT PRIMARY KEY,\n    user_id INT,\n    payment_type VARCHAR(50),\n    card_number VARCHAR(16),\n    expiration_date DATE,\n    cvv VARCHAR(3),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE addresses (\n    address_id INT PRIMARY KEY,\n    user_id INT,\n    street VARCHAR(100),\n    city VARCHAR(50),\n    zip_code VARCHAR(10),\n    country VARCHAR(50),\n    FOREIGN KEY (user_id) REFERENCES users(user_id)\n)\n\nCREATE TABLE transactions_log (\n    log_id INT PRIMARY KEY,\n    transaction_id INT,\n    action VARCHAR(50),\n    timestamp TIMESTAMP,\n    FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id)\n)\n\n### STATEMENT\n\nUPDATE addresses SET country = 'USA', zip_code = '12345' WHERE user_id = 2"
]