<t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>UPDATE SaaS SET name = 'New Name' WHERE id = 1;</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>update saas set name = 'new name' where id = 1;</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>UPDATE SaaS SET description = 'New Description' WHERE id = 2;</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>update saas set description = 'new description' where id = 2;</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>UPDATE SaaS SET name = 'Updated Name', description = 'Updated Description' WHERE id = 3;</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>update saas set name = 'updated name', description = 'updated description' where id = 3;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>UPDATE customers SET customer_name = 'Alice' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>update customers set customer_name = 'alice' where customer_id = 1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>UPDATE customers SET customer_name = 'Alice' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>update customers set customer_name = 'alice' where customer_id = 1;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>UPDATE subscriptions SET end_date = '2022-12-31' WHERE subscription_id = 1001;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>update subscriptions set end_date = '2022-12-31' where subscription_id = 1001;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>UPDATE subscriptions SET end_date = '2022-12-31' WHERE subscription_id = 1001;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>update subscriptions set end_date = '2022-12-31' where subscription_id = 1001;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>UPDATE customers SET email = 'alice@example.com' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>update customers set email = 'alice@example.com' where customer_id = 1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>UPDATE customers SET email = 'alice@example.com' WHERE customer_id = 1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>update customers set email = 'alice@example.com' where customer_id = 1;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>UPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>update users set email = 'newemail@example.com' where username = 'john_doe';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>UPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>update users set email = 'newemail@example.com' where username = 'john_doe';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>UPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>update users set email = 'newemail@example.com' where username = 'john_doe';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>UPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>update users set email = 'newemail@example.com' where username = 'john_doe';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>UPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>update users set email = 'newemail@example.com' where username = 'john_doe';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>UPDATE users SET email = 'newemail@example.com' WHERE username = 'john_doe';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>update users set email = 'newemail@example.com' where username = 'john_doe';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>UPDATE subscriptions SET price = 29.99 WHERE plan_name = 'Premium';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>update subscriptions set price = 29.99 where plan_name = 'premium';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>UPDATE subscriptions SET price = 29.99 WHERE plan_name = 'Premium';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>update subscriptions set price = 29.99 where plan_name = 'premium';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>UPDATE subscriptions SET price = 29.99 WHERE plan_name = 'Premium';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>update subscriptions set price = 29.99 where plan_name = 'premium';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>UPDATE subscriptions SET price = 29.99 WHERE plan_name = 'Premium';</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>update subscriptions set price = 29.99 where plan_name = 'premium';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>UPDATE subscriptions SET price = 29.99 WHERE plan_name = 'Premium';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>update subscriptions set price = 29.99 where plan_name = 'premium';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>UPDATE subscriptions SET price = 29.99 WHERE plan_name = 'Premium';</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>update subscriptions set price = 29.99 where plan_name = 'premium';</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>UPDATE invoices SET amount = 150.75, paid = TRUE WHERE sub_id = 123;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>update invoices set amount = 150.75, paid = true where sub_id = 123;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>UPDATE invoices SET amount = 150.75, paid = TRUE WHERE sub_id = 123;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>update invoices set amount = 150.75, paid = true where sub_id = 123;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>UPDATE invoices SET amount = 150.75, paid = TRUE WHERE sub_id = 123;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>update invoices set amount = 150.75, paid = true where sub_id = 123;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>UPDATE invoices SET amount = 150.75, paid = TRUE WHERE sub_id = 123;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>update invoices set amount = 150.75, paid = true where sub_id = 123;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>UPDATE invoices SET amount = 150.75, paid = TRUE WHERE sub_id = 123;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>update invoices set amount = 150.75, paid = true where sub_id = 123;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>UPDATE invoices SET amount = 150.75, paid = TRUE WHERE sub_id = 123;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>update invoices set amount = 150.75, paid = true where sub_id = 123;</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE customers SET name='John Doe' WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update customers set name='john doe' where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE products SET price=15.99 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update products set price=15.99 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>UPDATE orders SET quantity=2, total_price=31.98 WHERE id = 1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>update orders set quantity=2, total_price=31.98 where id = 1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE users SET username='new_username' WHERE user_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update users set username='new_username' where user_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE organizations SET org_name='new_org_name' WHERE org_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update organizations set org_name='new_org_name' where org_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>UPDATE products SET price=20.99 WHERE product_id=1;</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>update products set price=20.99 where product_id=1;</stat>