[
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE helpdesk_support;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE helpdesk_support RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE helpdesk_support CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE helpdesk_support;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE helpdesk_support RESTART IDENTITY;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE helpdesk_support CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests, tickets;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets CASCADE;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE resolutions;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nTRUNCATE TABLE resolutions;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE resolutions;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE service_requests;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE tickets;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE resolutions;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Requests;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Tickets;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Resolutions;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Requests;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Tickets;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nTRUNCATE TABLE Resolutions;"
]