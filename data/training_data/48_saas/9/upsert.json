[
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (1, 'Request 1', 'Open', 'Low', 'Agent 1', '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (2, 'Request 2', 'Closed', 'Medium', 'Agent 2', '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (3, 'Request 3', 'Pending', 'High', 'Agent 3', '2022-01-03');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (4, 'Request 4', 'Resolved', 'Low', 'Agent 4', '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (5, 'Request 5', 'Open', 'Medium', 'Agent 5', '2022-01-05');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (6, 'Request 6', 'Closed', 'High', 'Agent 6', '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (7, 'Request 7', 'Pending', 'Low', 'Agent 7', '2022-01-07');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (8, 'Request 8', 'Resolved', 'Medium', 'Agent 8', '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (9, 'Request 9', 'Open', 'High', 'Agent 9', '2022-01-09');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (10, 'Request 10', 'Closed', 'Low', 'Agent 10', '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (11, 'Request 11', 'Pending', 'Medium', 'Agent 11', '2022-01-11');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (12, 'Request 12', 'Resolved', 'High', 'Agent 12', '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (13, 'Request 13', 'Open', 'Low', 'Agent 13', '2022-01-13');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (14, 'Request 14', 'Closed', 'Medium', 'Agent 14', '2022-01-14');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (15, 'Request 15', 'Pending', 'High', 'Agent 15', '2022-01-15');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (16, 'Request 16', 'Resolved', 'Low', 'Agent 16', '2022-01-16');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (17, 'Request 17', 'Open', 'Medium', 'Agent 17', '2022-01-17');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (18, 'Request 18', 'Closed', 'High', 'Agent 18', '2022-01-18');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (19, 'Request 19', 'Pending', 'Low', 'Agent 19', '2022-01-19');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (20, 'Request 20', 'Resolved', 'Medium', 'Agent 20', '2022-01-20');",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (1, 'Request Description 1', 'Pending', 'Low', 'Agent A', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request Description 1', request_status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (2, 'Request Description 2', 'Open', 'High', 'Agent B', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET assigned_support_agent = 'Agent C';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (3, 'Request Description 3', 'Closed', 'Medium', 'Agent D', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (4, 'Request Description 4', 'Pending', 'Low', 'Agent E', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (5, 'Request Description 5', 'Open', 'High', 'Agent F', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'Resolved', assigned_support_agent = 'Agent G';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (6, 'Request Description 6', 'Closed', 'Medium', 'Agent H', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_priority = 'Low', assigned_support_agent = 'Agent I';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (7, 'Request Description 7', 'Resolved', 'High', 'Agent J', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request Description 7', request_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (8, 'Request Description 8', 'In Progress', 'Medium', 'Agent K', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_priority = 'High', assigned_support_agent = 'Agent L';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (9, 'Request Description 9', 'Pending', 'Low', 'Agent M', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (10, 'Request Description 10', 'Open', 'High', 'Agent N', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET assigned_support_agent = 'Agent O';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (11, 'Request Description 11', 'Closed', 'Medium', 'Agent P', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (12, 'Request Description 12', 'Pending', 'Low', 'Agent Q', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (13, 'Request Description 13', 'Open', 'High', 'Agent R', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'Resolved', assigned_support_agent = 'Agent S';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (14, 'Request Description 14', 'Closed', 'Medium', 'Agent T', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_priority = 'Low', assigned_support_agent = 'Agent U';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (15, 'Request Description 15', 'Resolved', 'High', 'Agent V', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request Description 15', request_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (16, 'Request Description 16', 'In Progress', 'Medium', 'Agent W', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_priority = 'High', assigned_support_agent = 'Agent X';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (17, 'Request Description 17', 'Pending', 'Low', 'Agent Y', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (18, 'Request Description 18', 'Open', 'High', 'Agent Z', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET assigned_support_agent = 'Agent AA';",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (19, 'Request Description 19', 'Closed', 'Medium', 'Agent AB', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE helpdesk_support (\n    request_id SERIAL PRIMARY KEY,\n    request_description TEXT,\n    request_status VARCHAR(50),\n    request_priority VARCHAR(50),\n    assigned_support_agent VARCHAR(100),\n    created_at TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO helpdesk_support (request_id, request_description, request_status, request_priority, assigned_support_agent, created_at) VALUES (20, 'Request Description 20', 'Pending', 'Low', 'Agent AC', CURRENT_TIMESTAMP) ON CONFLICT (request_id) DO UPDATE SET request_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (101, 'Fix broken pipe', '2022-01-10 10:00:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (102, 'Install new faucet', '2022-01-15 14:30:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (1, 'Pending', 201, '2022-01-11 09:45:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (2, 'Completed', 202, '2022-01-16 11:20:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (103, 'Repair leaky faucet', '2022-01-20 15:00:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (104, 'Unclog drain', '2022-02-05 13:30:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (3, 'In Progress', 203, '2022-01-25 10:45:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (4, 'Pending', 204, '2022-02-08 14:15:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (105, 'Replace light fixture', '2022-02-10 08:00:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (106, 'Install ceiling fan', '2022-02-15 16:30:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (5, 'Completed', 205, '2022-02-12 11:00:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (6, 'Cancelled', 206, '2022-02-18 09:30:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (107, 'Repair electrical outlet', '2022-02-20 14:00:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (108, 'Paint living room walls', '2022-02-25 10:45:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (7, 'In Progress', 207, '2022-02-22 13:15:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (8, 'Completed', 208, '2022-02-28 10:30:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (109, 'Fix squeaky door', '2022-03-05 09:00:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (110, 'Install security cameras', '2022-03-10 14:30:00') ON CONFLICT (request_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (9, 'Pending', 209, '2022-03-08 08:45:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date) VALUES (10, 'InProgress', 210, '2022-03-12 10:00:00') ON CONFLICT (ticket_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (123, 'Request 1', '2022-01-01');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 1'), 'Open', 456, '2022-01-02');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (234, 'Request 2', '2022-01-03');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 2'), 'Closed', 789, '2022-01-04');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (345, 'Request 3', '2022-01-05');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 3'), 'In Progress', 1011, '2022-01-06');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (456, 'Request 4', '2022-01-07');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 4'), 'Closed', 1213, '2022-01-08');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (567, 'Request 5', '2022-01-09');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 5'), 'Open', 1415, '2022-01-10');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (678, 'Request 6', '2022-01-11');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 6'), 'In Progress', 1617, '2022-01-12');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (789, 'Request 7', '2022-01-13');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 7'), 'Closed', 1819, '2022-01-14');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (890, 'Request 8', '2022-01-15');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 8'), 'Open', 2021, '2022-01-16');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (901, 'Request 9', '2022-01-17');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 9'), 'In Progress', 2223, '2022-01-18');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (112, 'Request 10', '2022-01-19');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 10'), 'Closed', 2425, '2022-01-20');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (223, 'Request 11', '2022-01-21');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 11'), 'Open', 2627, '2022-01-22');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (334, 'Request 12', '2022-01-23');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 12'), 'In Progress', 2829, '2022-01-24');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (445, 'Request 13', '2022-01-25');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 13'), 'Closed', 3031, '2022-01-26');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (556, 'Request 14', '2022-01-27');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 14'), 'Open', 3233, '2022-01-28');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (667, 'Request 15', '2022-01-29');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 15'), 'In Progress', 3435, '2022-01-30');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (778, 'Request 16', '2022-01-31');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 16'), 'Closed', 3637, '2022-02-01');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (889, 'Request 17', '2022-02-02');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 17'), 'Open', 3839, '2022-02-03');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id SERIAL PRIMARY KEY,\n  customer_id INT,\n  request_description TEXT,\n  request_date TIMESTAMP\n);\n\n\nCREATE TABLE tickets (\n  ticket_id SERIAL PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  assignee_id INT,\n  ticket_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, request_date) VALUES (990, 'Request 18', '2022-02-04');\nINSERT INTO tickets (request_id, ticket_status, assignee_id, ticket_date)  VALUES ((SELECT request_id FROM service_requests WHERE request_description = 'Request 18'), 'In Progress', 4041, '2022-02-05');",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (1, 101, '2022-01-01 10:00:00', 'Issue 1') ON CONFLICT (request_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, request_timestamp = EXCLUDED.request_timestamp, issue_description = EXCLUDED.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (2, 102, '2022-01-02 11:00:00', 'Issue 2') ON CONFLICT (request_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, request_timestamp = EXCLUDED.request_timestamp, issue_description = EXCLUDED.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (3, 103, '2022-01-03 12:00:00', 'Issue 3') ON CONFLICT (request_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, request_timestamp = EXCLUDED.request_timestamp, issue_description = EXCLUDED.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (4, 104, '2022-01-04 13:00:00', 'Issue 4') ON CONFLICT (request_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, request_timestamp = EXCLUDED.request_timestamp, issue_description = EXCLUDED.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (5, 105, '2022-01-05 14:00:00', 'Issue 5') ON CONFLICT (request_id) DO UPDATE SET customer_id = EXCLUDED.customer_id, request_timestamp = EXCLUDED.request_timestamp, issue_description = EXCLUDED.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (1, 1, 'Open', 201) ON CONFLICT (ticket_id) DO UPDATE SET request_id = EXCLUDED.request_id, ticket_status = EXCLUDED.ticket_status, assigned_to_user_id = EXCLUDED.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (2, 2, 'In Progress', 202) ON CONFLICT (ticket_id) DO UPDATE SET request_id = EXCLUDED.request_id, ticket_status = EXCLUDED.ticket_status, assigned_to_user_id = EXCLUDED.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (3, 3, 'Pending', 203) ON CONFLICT (ticket_id) DO UPDATE SET request_id = EXCLUDED.request_id, ticket_status = EXCLUDED.ticket_status, assigned_to_user_id = EXCLUDED.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (4, 4, 'Closed', 204) ON CONFLICT (ticket_id) DO UPDATE SET request_id = EXCLUDED.request_id, ticket_status = EXCLUDED.ticket_status, assigned_to_user_id = EXCLUDED.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (5, 5, 'Resolved', 205) ON CONFLICT (ticket_id) DO UPDATE SET request_id = EXCLUDED.request_id, ticket_status = EXCLUDED.ticket_status, assigned_to_user_id = EXCLUDED.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (1, 1, '2022-01-01 15:00:00', 'Resolution Notes 1') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = EXCLUDED.ticket_id, resolution_timestamp = EXCLUDED.resolution_timestamp, resolution_notes = EXCLUDED.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (2, 2, '2022-01-02 16:00:00', 'Resolution Notes 2') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = EXCLUDED.ticket_id, resolution_timestamp = EXCLUDED.resolution_timestamp, resolution_notes = EXCLUDED.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (3, 3, '2022-01-03 17:00:00', 'Resolution Notes 3') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = EXCLUDED.ticket_id, resolution_timestamp = EXCLUDED.resolution_timestamp, resolution_notes = EXCLUDED.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (4, 4, '2022-01-04 18:00:00', 'Resolution Notes 4') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = EXCLUDED.ticket_id, resolution_timestamp = EXCLUDED.resolution_timestamp, resolution_notes = EXCLUDED.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (5, 5, '2022-01-05 19:00:00', 'Resolution Notes 5') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = EXCLUDED.ticket_id, resolution_timestamp = EXCLUDED.resolution_timestamp, resolution_notes = EXCLUDED.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (1, 101, '2022-01-01 08:00:00', 'Issue 1') ON CONFLICT (request_id) DO UPDATE SET customer_id = excluded.customer_id, request_timestamp = excluded.request_timestamp, issue_description = excluded.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (2, 102, '2022-01-02 09:00:00', 'Issue 2') ON CONFLICT (request_id) DO UPDATE SET customer_id = excluded.customer_id, request_timestamp = excluded.request_timestamp, issue_description = excluded.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (3, 103, '2022-01-03 10:00:00', 'Issue 3') ON CONFLICT (request_id) DO UPDATE SET customer_id = excluded.customer_id, request_timestamp = excluded.request_timestamp, issue_description = excluded.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (4, 104, '2022-01-04 11:00:00', 'Issue 4') ON CONFLICT (request_id) DO UPDATE SET customer_id = excluded.customer_id, request_timestamp = excluded.request_timestamp, issue_description = excluded.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (request_id, customer_id, request_timestamp, issue_description) VALUES (5, 105, '2022-01-05 12:00:00', 'Issue 5') ON CONFLICT (request_id) DO UPDATE SET customer_id = excluded.customer_id, request_timestamp = excluded.request_timestamp, issue_description = excluded.issue_description;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (1, 1, 'Open', 201) ON CONFLICT (ticket_id) DO UPDATE SET request_id = excluded.request_id, ticket_status = excluded.ticket_status, assigned_to_user_id = excluded.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (2, 2, 'Open', 202) ON CONFLICT (ticket_id) DO UPDATE SET request_id = excluded.request_id, ticket_status = excluded.ticket_status, assigned_to_user_id = excluded.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (3, 3, 'Open', 203) ON CONFLICT (ticket_id) DO UPDATE SET request_id = excluded.request_id, ticket_status = excluded.ticket_status, assigned_to_user_id = excluded.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (4, 4, 'Open', 204) ON CONFLICT (ticket_id) DO UPDATE SET request_id = excluded.request_id, ticket_status = excluded.ticket_status, assigned_to_user_id = excluded.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO tickets (ticket_id, request_id, ticket_status, assigned_to_user_id) VALUES (5, 5, 'Open', 205) ON CONFLICT (ticket_id) DO UPDATE SET request_id = excluded.request_id, ticket_status = excluded.ticket_status, assigned_to_user_id = excluded.assigned_to_user_id;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (1, 1, '2022-01-01 08:00:00', 'Resolved with solution 1') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = excluded.ticket_id, resolution_timestamp = excluded.resolution_timestamp, resolution_notes = excluded.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (2, 2, '2022-01-02 09:00:00', 'Resolved with solution 2') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = excluded.ticket_id, resolution_timestamp = excluded.resolution_timestamp, resolution_notes = excluded.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (3, 3, '2022-01-03 10:00:00', 'Resolved with solution 3') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = excluded.ticket_id, resolution_timestamp = excluded.resolution_timestamp, resolution_notes = excluded.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (4, 4, '2022-01-04 11:00:00', 'Resolved with solution 4') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = excluded.ticket_id, resolution_timestamp = excluded.resolution_timestamp, resolution_notes = excluded.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n  request_id INT PRIMARY KEY,\n  customer_id INT,\n  request_timestamp TIMESTAMP,\n  issue_description TEXT\n);\n\n\nCREATE TABLE tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(50),\n  assigned_to_user_id INT\n);\n\n\nCREATE TABLE resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_timestamp TIMESTAMP,\n  resolution_notes TEXT\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (resolution_id, ticket_id, resolution_timestamp, resolution_notes) VALUES (5, 5, '2022-01-05 12:00:00', 'Resolved with solution 5') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = excluded.ticket_id, resolution_timestamp = excluded.resolution_timestamp, resolution_notes = excluded.resolution_notes;",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (1, 'Request 1', '2022-01-01 10:00:00') ON CONFLICT (request_id) DO UPDATE SET customer_id = 1, request_description = 'Request 1', creation_date = '2022-01-01 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (1, 'Open', 'Ticket Description 1') ON CONFLICT (ticket_id) DO UPDATE SET request_id = 1, ticket_status = 'Open', ticket_description = 'Ticket Description 1';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (1, 'Resolution 1', '2022-01-02 10:00:00') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = 1, resolution_description = 'Resolution 1', resolution_date = '2022-01-02 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user1', 'user1@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'user1', email = 'user1@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (2, 'Request 2', '2022-01-03 10:00:00') ON CONFLICT (request_id) DO UPDATE SET customer_id = 2, request_description = 'Request 2', creation_date = '2022-01-03 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (2, 'Closed', 'Ticket Description 2') ON CONFLICT (ticket_id) DO UPDATE SET request_id = 2, ticket_status = 'Closed', ticket_description = 'Ticket Description 2';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (2, 'Resolution 2', '2022-01-04 10:00:00') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = 2, resolution_description = 'Resolution 2', resolution_date = '2022-01-04 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user2', 'user2@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'user2', email = 'user2@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (3, 'Request 3', '2022-01-05 10:00:00') ON CONFLICT (request_id) DO UPDATE SET customer_id = 3, request_description = 'Request 3', creation_date = '2022-01-05 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (3, 'In Progress', 'Ticket Description 3') ON CONFLICT (ticket_id) DO UPDATE SET request_id = 3, ticket_status = 'In Progress', ticket_description = 'Ticket Description 3';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (3, 'Resolution 3', '2022-01-06 10:00:00') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = 3, resolution_description = 'Resolution 3', resolution_date = '2022-01-06 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user3', 'user3@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'user3', email = 'user3@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (4, 'Request 4', '2022-01-07 10:00:00') ON CONFLICT (request_id) DO UPDATE SET customer_id = 4, request_description = 'Request 4', creation_date = '2022-01-07 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (4, 'Resolved', 'Ticket Description 4') ON CONFLICT (ticket_id) DO UPDATE SET request_id = 4, ticket_status = 'Resolved', ticket_description = 'Ticket Description 4';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (4, 'Resolution 4', '2022-01-08 10:00:00') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = 4, resolution_description = 'Resolution 4', resolution_date = '2022-01-08 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user4', 'user4@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'user4', email = 'user4@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (5, 'Request 5', '2022-01-09 10:00:00') ON CONFLICT (request_id) DO UPDATE SET customer_id = 5, request_description = 'Request 5', creation_date = '2022-01-09 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (5, 'Open', 'Ticket Description 5') ON CONFLICT (ticket_id) DO UPDATE SET request_id = 5, ticket_status = 'Open', ticket_description = 'Ticket Description 5';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (5, 'Resolution 5', '2022-01-10 10:00:00') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = 5, resolution_description = 'Resolution 5', resolution_date = '2022-01-10 10:00:00';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user5', 'user5@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'user5', email = 'user5@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (1, 'Request 1', '2022-11-01') ON CONFLICT (customer_id) DO UPDATE SET request_description = 'Updated Request 1';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (1, 'Open', 'Ticket for Request 1') ON CONFLICT (request_id) DO UPDATE SET ticket_status = 'In Progress';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (1, 'Resolved Ticket 1', '2022-11-10') ON CONFLICT (ticket_id) DO UPDATE SET resolution_description = 'Updated Resolution';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user1', 'user1@example.com') ON CONFLICT (username) DO UPDATE SET email = 'user1_updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (2, 'Request 2', '2022-11-02') ON CONFLICT (customer_id) DO UPDATE SET request_description = 'Updated Request 2';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (2, 'Closed', 'Ticket for Request 2') ON CONFLICT (request_id) DO UPDATE SET ticket_status = 'Resolved';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (2, 'Resolved Ticket 2', '2022-11-15') ON CONFLICT (ticket_id) DO UPDATE SET resolution_description = 'Updated Resolution';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user2', 'user2@example.com') ON CONFLICT (username) DO UPDATE SET email = 'user2_updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (3, 'Request 3', '2022-11-03') ON CONFLICT (customer_id) DO UPDATE SET request_description = 'Updated Request 3';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (3, 'In Progress', 'Ticket for Request 3') ON CONFLICT (request_id) DO UPDATE SET ticket_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (3, 'Resolved Ticket 3', '2022-11-20') ON CONFLICT (ticket_id) DO UPDATE SET resolution_description = 'Updated Resolution';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user3', 'user3@example.com') ON CONFLICT (username) DO UPDATE SET email = 'user3_updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO service_requests (customer_id, request_description, creation_date) VALUES (4, 'Request 4', '2022-11-04') ON CONFLICT (customer_id) DO UPDATE SET request_description = 'Updated Request 4';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO tickets (request_id, ticket_status, ticket_description) VALUES (4, 'Resolved', 'Ticket for Request 4') ON CONFLICT (request_id) DO UPDATE SET ticket_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO resolutions (ticket_id, resolution_description, resolution_date) VALUES (4, 'Resolved Ticket 4', '2022-11-25') ON CONFLICT (ticket_id) DO UPDATE SET resolution_description = 'Updated Resolution';",
  "### TABLEDATA\n\nCREATE TABLE service_requests (\n    request_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    request_description TEXT,\n    creation_date TIMESTAMP\n);\n\nCREATE TABLE tickets (\n    ticket_id SERIAL PRIMARY KEY,\n    request_id INT,\n    ticket_status VARCHAR(50),\n    ticket_description TEXT\n);\n\nCREATE TABLE resolutions (\n    resolution_id SERIAL PRIMARY KEY,\n    ticket_id INT,\n    resolution_description TEXT,\n    resolution_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nINSERT INTO users (username, email) VALUES ('user4', 'user4@example.com') ON CONFLICT (username) DO UPDATE SET email = 'user4_updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Requests (request_id, request_description, requester_name, request_date) VALUES (1, 'Example Request 1', 'John Doe', '2022-01-01') ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request 1', requester_name = 'Jane Smith', request_date = '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Tickets (ticket_id, request_id, ticket_status, ticket_priority) VALUES (1, 1, 'Open', 1) ON CONFLICT (ticket_id) DO UPDATE SET request_id = 2, ticket_status = 'In Progress', ticket_priority = 2;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Resolutions (resolution_id, ticket_id, resolution_text, resolution_date) VALUES (1, 1, 'Resolved the issue', '2022-03-01') ON CONFLICT (resolution_id) DO UPDATE SET ticket_id = 2, resolution_text = 'Issue resolved successfully', resolution_date = '2022-03-15';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email) VALUES (1, 'user1', 'user1@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'new_user1', email = 'new_user1@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Departments (department_id, department_name) VALUES (1, 'IT Department') ON CONFLICT (department_id) DO UPDATE SET department_name = 'Updated IT Department';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Requests (request_id, request_description, requester_name, request_date) VALUES (1, 'Request 1 Description', 'Requester 1', '2022-01-01') ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request 1 Description', requester_name = 'Updated Requester 1';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Tickets (ticket_id, request_id, ticket_status, ticket_priority) VALUES (1, 1, 'Open', 1) ON CONFLICT (ticket_id) DO UPDATE SET ticket_status = 'Updated Status';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Resolutions (resolution_id, ticket_id, resolution_text, resolution_date) VALUES (1, 1, 'Resolution for Ticket 1', '2022-01-15') ON CONFLICT (resolution_id) DO UPDATE SET resolution_text = 'Updated Resolution for Ticket 1';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email) VALUES (1, 'User1', 'user1@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'updateduser1@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Departments (department_id, department_name) VALUES (1, 'Department 1') ON CONFLICT (department_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Requests (request_id, request_description, requester_name, request_date) VALUES (2, 'Request 2 Description', 'Requester 2', '2022-01-02') ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request 2 Description', requester_name = 'Updated Requester 2';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Tickets (ticket_id, request_id, ticket_status, ticket_priority) VALUES (2, 2, 'Closed', 2) ON CONFLICT (ticket_id) DO UPDATE SET ticket_priority = 3;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Resolutions (resolution_id, ticket_id, resolution_text, resolution_date) VALUES (2, 2, 'Resolution for Ticket 2', '2022-01-18') ON CONFLICT (resolution_id) DO UPDATE SET resolution_text = 'Updated Resolution for Ticket 2';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email) VALUES (2, 'User2', 'user2@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'Updated User2';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Departments (department_id, department_name) VALUES (2, 'Department 2') ON CONFLICT (department_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Requests (request_id, request_description, requester_name, request_date) VALUES (3, 'Request 3 Description', 'Requester 3', '2022-01-03') ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request 3 Description', requester_name = 'Updated Requester 3';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Tickets (ticket_id, request_id, ticket_status, ticket_priority) VALUES (3, 3, 'In Progress', 3) ON CONFLICT (ticket_id) DO UPDATE SET ticket_status = 'Updated Status';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Resolutions (resolution_id, ticket_id, resolution_text, resolution_date) VALUES (3, 3, 'Resolution for Ticket 3', '2022-01-20') ON CONFLICT (resolution_id) DO UPDATE SET resolution_text = 'Updated Resolution for Ticket 3';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email) VALUES (3, 'User3', 'user3@example.com') ON CONFLICT (user_id) DO UPDATE SET email = 'updateduser3@example.com';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Departments (department_id, department_name) VALUES (3, 'Department 3') ON CONFLICT (department_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Requests (request_id, request_description, requester_name, request_date) VALUES (4, 'Request 4 Description', 'Requester 4', '2022-01-04') ON CONFLICT (request_id) DO UPDATE SET request_description = 'Updated Request 4 Description', requester_name = 'Updated Requester 4';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Tickets (ticket_id, request_id, ticket_status, ticket_priority) VALUES (4, 4, 'Resolved', 4) ON CONFLICT (ticket_id) DO UPDATE SET ticket_priority = 5;",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Resolutions (resolution_id, ticket_id, resolution_text, resolution_date) VALUES (4, 4, 'Resolution for Ticket 4', '2022-01-24') ON CONFLICT (resolution_id) DO UPDATE SET resolution_text = 'Updated Resolution for Ticket 4';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Users (user_id, username, email) VALUES (4, 'User4', 'user4@example.com') ON CONFLICT (user_id) DO UPDATE SET username = 'Updated User4';",
  "### TABLEDATA\n\nCREATE TABLE Requests (\n  request_id INT PRIMARY KEY,\n  request_description TEXT,\n  requester_name VARCHAR(50),\n  request_date DATE\n);\n\nCREATE TABLE Tickets (\n  ticket_id INT PRIMARY KEY,\n  request_id INT,\n  ticket_status VARCHAR(20),\n  ticket_priority INT,\n  FOREIGN KEY (request_id) REFERENCES Requests(request_id)\n);\n\nCREATE TABLE Resolutions (\n  resolution_id INT PRIMARY KEY,\n  ticket_id INT,\n  resolution_text TEXT,\n  resolution_date DATE,\n  FOREIGN KEY (ticket_id) REFERENCES Tickets(ticket_id)\n);\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  username VARCHAR(50),\n  email VARCHAR(100)\n);\n\nCREATE TABLE Departments (\n  department_id INT PRIMARY KEY,\n  department_name VARCHAR(50)\n);\n\n### STATEMENT\n\nINSERT INTO Departments (department_id, department_name) VALUES (4, 'Department 4') ON CONFLICT (department_id) DO NOTHING;"
]