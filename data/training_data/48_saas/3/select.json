[
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_description FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, COUNT(*) FROM interactions GROUP BY interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(user_id) AS avg_user_id FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT MAX(interaction_date) AS latest_interaction FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT MIN(interaction_date) AS earliest_interaction FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions ORDER BY interaction_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type IN ('Call', 'Meeting');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM interactions WHERE interaction_type = 'Chat';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM interactions WHERE interaction_description LIKE '%product%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_interactions FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, interaction_type, COUNT(*) AS num_interactions FROM interactions GROUP BY user_id, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM interactions LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date >= '2021-06-01' AND interaction_date < '2021-07-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE user_id = 123 AND interaction_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_type = 'Purchase' ORDER BY interaction_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM interactions WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, AVG(interaction_id) FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(interaction_id) AS num_interactions FROM interactions GROUP BY user_id HAVING num_interactions > 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type IN ('Comment', 'Like') ORDER BY interaction_date ASC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-03-31';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, COUNT(DISTINCT user_id) AS num_users FROM interactions GROUP BY interaction_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE user_id = 789 AND interaction_type = 'Visit';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_type, SUM(interaction_id) FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date = (SELECT MAX(interaction_date) FROM interactions);",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type = 'Comment' AND interaction_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT AVG(interaction_id) AS avg_interaction_id FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type = 'Share' UNION SELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type = 'Comment';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_description ILIKE '%important%' ORDER BY interaction_date ASC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type = 'Like' UNION ALL SELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type = 'Share' ORDER BY user_id ASC;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_date FROM interactions WHERE interaction_type = 'Purchase' AND user_id = 123 AND interaction_description LIKE '%discount%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date TIMESTAMP,\n    interaction_type VARCHAR(50),\n    interaction_description TEXT\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(interaction_id) AS total_interactions FROM interactions GROUP BY user_id ORDER BY total_interactions DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_id, user_id FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT user_id, interaction_date FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_company FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_description FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_company, customer_email FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_phone, customer_name FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_description FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_company FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_phone, customer_company FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_type, interaction_date FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description FROM user_interactions;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_company, customer_phone FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_email, customer_name FROM customer;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM user_interactions WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT * FROM user_interactions WHERE interaction_type = 'Click' AND interaction_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_interactions FROM user_interactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer WHERE customer_company = 'ABC Corp';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_date FROM user_interactions WHERE user_id = 1 AND interaction_date BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customer WHERE customer_id IN (SELECT user_id FROM user_interactions WHERE interaction_type = 'View');",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer WHERE customer_id IN (SELECT user_id FROM user_interactions WHERE interaction_type = 'Click' AND interaction_date >= '2021-01-01');",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email FROM customer WHERE customer_id NOT IN (SELECT user_id FROM user_interactions);",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, interaction_type FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id AND interaction_date >= '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_description FROM customer LEFT JOIN user_interactions ON customer.customer_id = user_interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_date FROM customer LEFT JOIN user_interactions ON customer.customer_id = user_interactions.user_id AND (interaction_type = 'View' OR interaction_type = 'Click');",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_date, customer_email FROM customer LEFT JOIN user_interactions ON customer.customer_id = user_interactions.user_id AND interaction_description LIKE '%important%';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_phone FROM customer WHERE customer_company = 'XYZ Corp' UNION SELECT customer_name, customer_phone FROM customer WHERE customer_company = 'ABC Corp';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, COUNT(*) AS total_interactions FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, MAX(interaction_date) AS last_interaction FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, AVG(DATEDIFF(CURRENT_DATE, interaction_date)) AS average_days_since_interaction FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type, COUNT(*) AS total_interactions FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id GROUP BY customer_name, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_date, interaction_description FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id WHERE interaction_description LIKE '%positive%';",
  "### TABLEDATA\n\nCREATE TABLE user_interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date DATE,\n    interaction_description TEXT\n);\n\nCREATE TABLE customer (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    customer_email VARCHAR(255),\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_date, interaction_description FROM customer JOIN user_interactions ON customer.customer_id = user_interactions.user_id WHERE interaction_description LIKE '%negative%' OR interaction_description LIKE '%complaint%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_date FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, interaction_type, interaction_description FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, account_balance FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, contact_email, phone_number FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM products;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_name, price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_id, product_category, quantity_in_stock FROM products;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, product_name, price FROM customers JOIN products ON customers.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, customer_name FROM interactions JOIN customers ON interactions.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, product_name FROM interactions JOIN products ON interactions.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, interaction_description FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, product_name FROM interactions LEFT JOIN products ON interactions.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, product_name FROM customers RIGHT JOIN products ON customers.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, interaction_description FROM customers FULL OUTER JOIN interactions ON customers.customer_id = interactions.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description, product_name FROM interactions FULL OUTER JOIN products ON interactions.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, product_name FROM customers INNER JOIN products ON customers.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_description, interaction_date FROM interactions WHERE interaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, customer_name, account_balance FROM customers WHERE account_balance < 0;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, customer_id, interaction_type FROM interactions WHERE interaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_description FROM interactions WHERE customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, contact_email, phone_number FROM customers WHERE account_balance > 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, contact_email FROM customers WHERE phone_number LIKE '%555%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM products WHERE price BETWEEN 10.00 AND 50.00;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_name, product_category, price FROM products WHERE quantity_in_stock > 0;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_id, SUM(account_balance) AS total_balance FROM customers GROUP BY customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_type, COUNT(*) AS interaction_count FROM interactions GROUP BY interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions JOIN customers ON interactions.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type, interaction_date FROM interactions JOIN customers ON interactions.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions INNER JOIN products ON interactions.interaction_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, price FROM customers LEFT JOIN products ON customers.customer_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions FULL OUTER JOIN customers ON interactions.customer_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT AVG(price) AS average_price, MAX(price) AS max_price, MIN(price) AS min_price FROM products;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, SUM(price) AS total_spent FROM customers JOIN interactions ON customers.customer_id = interactions.customer_id JOIN products ON interactions.product_id = products.product_id GROUP BY customer_name;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT product_category, SUM(quantity_in_stock) AS total_stock FROM products GROUP BY product_category;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_date FROM customers LEFT JOIN interactions ON customers.customer_id = interactions.customer_id WHERE interaction_date IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT customer_name, product_name, price FROM customers CROSS JOIN products WHERE price > 20.00;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    customer_id INT,\n    interaction_type VARCHAR(50),\n    interaction_date TIMESTAMP,\n    interaction_description TEXT\n);\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(100),\n    contact_email VARCHAR(100),\n    phone_number VARCHAR(15),\n    account_balance DECIMAL(10, 2)\n);\n\nCREATE TABLE products (\n    product_id INT PRIMARY KEY,\n    product_name VARCHAR(100),\n    product_category VARCHAR(50),\n    price DECIMAL(10, 2),\n    quantity_in_stock INT\n);\n\n### STATEMENT\n\nSELECT interaction_id, customer_name, product_name FROM interactions JOIN customers ON interactions.customer_id = customers.customer_id JOIN products ON interactions.product_id = products.product_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, name FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, email FROM users WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM accounts WHERE industry = 'Technology';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_id, account_name, account_manager FROM accounts;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount FROM deals WHERE deal_stage = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE id = 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM deals WHERE account_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_name, industry FROM accounts WHERE account_manager = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM users WHERE phone_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_name, industry, account_manager FROM accounts WHERE industry = 'Finance';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT interaction_date, interaction_type FROM interactions WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount FROM deals WHERE deal_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM accounts WHERE account_id = 15;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_name, industry, account_manager FROM accounts WHERE industry = 'Healthcare';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT id, name, email FROM users WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_type FROM interactions WHERE interaction_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_stage FROM deals WHERE account_id = 20;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name, i.interaction_date FROM users u JOIN interactions i ON u.id = i.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT a.account_name, d.deal_name, d.deal_amount FROM accounts a JOIN deals d ON a.account_id = d.account_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name, i.interaction_type, a.account_manager FROM users u JOIN interactions i ON u.id = i.user_id JOIN accounts a ON i.user_id = a.account_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name AS user_name, a.account_name AS account_name, d.deal_name AS deal_name FROM users u JOIN accounts a ON u.id = a.account_id JOIN deals d ON a.account_id = d.account_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT AVG(deal_amount) AS avg_amount FROM deals;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MAX(deal_amount) AS max_amount FROM deals WHERE deal_stage = 'Closed Won';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT MIN(deal_amount) AS min_amount FROM deals WHERE deal_stage = 'Closed Lost';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT industry, COUNT(*) AS total_accounts FROM accounts GROUP BY industry;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_manager, SUM(deal_amount) AS total_sales FROM accounts a JOIN deals d ON a.account_id = d.account_id GROUP BY account_manager;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name, COUNT(*) AS total_interactions FROM users u JOIN interactions i ON u.id = i.user_id GROUP BY u.id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT a.account_name, COUNT(*) AS total_deals, SUM(deal_amount) AS total_amount FROM accounts a JOIN deals d ON a.account_id = d.account_id GROUP BY a.account_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name, AVG(deal_amount) AS avg_deal_amount FROM users u JOIN interactions i ON u.id = i.user_id JOIN deals d ON u.id = d.account_id GROUP BY u.id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT DISTINCT(industry) AS unique_industries FROM accounts;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT SUM(deal_amount) AS total_deal_amount FROM deals;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT account_manager, MAX(deal_amount) AS max_deal_amount FROM accounts a JOIN deals d ON a.account_id = d.account_id GROUP BY account_manager;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name, i.interaction_date AS last_interaction_date FROM users u JOIN interactions i ON u.id = i.user_id WHERE i.interaction_date = (SELECT MAX(interaction_date) FROM interactions);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT a.account_name, COUNT(*) AS total_deals FROM accounts a JOIN deals d ON a.account_id = d.account_id WHERE d.deal_stage = 'Closed Won' GROUP BY a.account_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    email VARCHAR(100),\n    phone_number VARCHAR(15)\n);\n\nCREATE TABLE interactions (\n    interaction_id INT PRIMARY KEY,\n    user_id INT,\n    interaction_date DATE,\n    interaction_type VARCHAR(20),\n    interaction_notes TEXT\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR(50),\n    industry VARCHAR(50),\n    account_manager VARCHAR(50)\n);\n\nCREATE TABLE deals (\n    deal_id INT PRIMARY KEY,\n    account_id INT,\n    deal_name VARCHAR(50),\n    deal_amount DECIMAL(10, 2),\n    deal_stage VARCHAR(20)\n);\n\n### STATEMENT\n\nSELECT u.name, COUNT(*) AS total_deals_won FROM users u JOIN interactions i ON u.id = i.user_id JOIN deals d ON u.id = d.account_id WHERE d.deal_stage = 'Closed Won' GROUP BY u.id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_type FROM interactions;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, user_email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_company FROM customers;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount, deal_status FROM deals;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type, activity_date FROM activities;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_date, interaction_duration FROM interactions WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, user_email, user_phone FROM users WHERE user_role = 'Admin';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone FROM customers WHERE customer_company = 'ABC Inc';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount, deal_status FROM deals WHERE deal_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type, activity_description FROM activities WHERE activity_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_type, interaction_date FROM interactions WHERE interaction_type = 'Call';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, user_email, user_phone, user_role FROM users WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone, customer_company FROM customers WHERE customer_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount, deal_status, deal_closing_date FROM deals WHERE deal_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type, activity_date, activity_description FROM activities WHERE activity_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, user_id, interaction_type, interaction_date, interaction_duration FROM interactions WHERE user_id = 2 AND interaction_type = 'Email';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, user_email, user_phone, user_role FROM users WHERE user_role IN ('Admin', 'Manager');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, customer_email, customer_phone, customer_company FROM customers WHERE customer_company LIKE '%Tech%';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount, deal_status, deal_closing_date FROM deals WHERE deal_status IN ('Open', 'Pending');",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type, activity_date, activity_description FROM activities WHERE activity_description IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT interaction_id, interaction_type, interaction_date FROM interactions WHERE interaction_duration > 30;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, interaction_type, interaction_date FROM users JOIN interactions ON users.user_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, interaction_type, interaction_date FROM customers JOIN interactions ON customers.customer_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_amount, deal_status FROM deals WHERE deal_status = 'Closed';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_date, activity_description FROM activities WHERE activity_type = 'Meeting';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions JOIN users ON interactions.user_id = users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, customer_name, interaction_date FROM users JOIN interactions ON users.user_id = interactions.user_id JOIN customers ON interactions.user_id = customers.customer_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, deal_name, deal_closing_date FROM customers JOIN deals ON customers.customer_id = deals.deal_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT u.user_name, i.interaction_type, d.deal_amount FROM users u JOIN interactions i ON u.user_id = i.user_id JOIN deals d ON i.user_id = d.deal_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.activity_name, a.activity_date FROM customers c JOIN interactions i ON c.customer_id = i.user_id JOIN activities a ON i.user_id = a.activity_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, interaction_type, interaction_description FROM users JOIN interactions ON users.user_id = interactions.user_id WHERE interaction_type = 'Call';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, deal_name, deal_status, interaction_date FROM customers JOIN deals ON customers.customer_id = deals.deal_id JOIN interactions ON customers.customer_id = interactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT activity_name, activity_type, activity_description FROM activities WHERE activity_date >= '2022-06-01' AND activity_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, customer_name, deal_amount FROM users JOIN interactions ON users.user_id = interactions.user_id JOIN deals ON interactions.user_id = deals.deal_id WHERE deal_status = 'Open';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT c.customer_name, a.activity_name, a.activity_description FROM customers c JOIN interactions i ON c.customer_id = i.user_id JOIN activities a ON i.user_id = a.activity_id WHERE a.activity_date >= '2022-07-01';",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT * FROM interactions WHERE interaction_duration IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT user_name, interaction_type, interaction_duration FROM users JOIN interactions ON users.user_id = interactions.user_id WHERE interaction_duration > 0;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT customer_name, deal_name FROM customers JOIN deals ON customers.customer_id = deals.deal_id WHERE deal_amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE interactions (\n    interaction_id SERIAL PRIMARY KEY,\n    user_id INT NOT NULL,\n    interaction_type VARCHAR(50) NOT NULL,\n    interaction_date TIMESTAMP NOT NULL,\n    interaction_duration INT,\n    interaction_description TEXT\n);\n\nCREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    user_name VARCHAR(100) NOT NULL,\n    user_email VARCHAR(100) NOT NULL,\n    user_phone VARCHAR(20),\n    user_role VARCHAR(50)\n);\n\nCREATE TABLE customers (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name VARCHAR(100) NOT NULL,\n    customer_email VARCHAR(100) NOT NULL,\n    customer_phone VARCHAR(20),\n    customer_company VARCHAR(100)\n);\n\nCREATE TABLE deals (\n    deal_id SERIAL PRIMARY KEY,\n    deal_name VARCHAR(100) NOT NULL,\n    deal_amount DECIMAL NOT NULL,\n    deal_status VARCHAR(50),\n    deal_closing_date TIMESTAMP\n);\n\nCREATE TABLE activities (\n    activity_id SERIAL PRIMARY KEY,\n    activity_name VARCHAR(100) NOT NULL,\n    activity_type VARCHAR(50) NOT NULL,\n    activity_date TIMESTAMP NOT NULL,\n    activity_description TEXT\n);\n\n### STATEMENT\n\nSELECT deal_name, deal_status, deal_closing_date FROM deals WHERE deal_closing_date < CURRENT_TIMESTAMP;"
]