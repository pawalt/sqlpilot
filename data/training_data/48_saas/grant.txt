<t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>GRANT SELECT, INSERT, UPDATE ON SaaS TO user1</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>grant select, insert, update on saas to user1</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>GRANT INSERT, UPDATE, DELETE ON SaaS TO user2</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>grant insert, update, delete on saas to user2</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON SaaS TO user3</stat><divider><t>CREATE TABLE SaaS (id INT PRIMARY KEY, name VARCHAR(255), description TEXT, created_at TIMESTAMP, updated_at TIMESTAMP)</t><stat>grant select, insert, update, delete on saas to user3</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>GRANT SELECT ON customers TO marketing_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>grant select on customers to marketing_team</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>GRANT SELECT ON customers TO marketing_team</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>grant select on customers to marketing_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>GRANT INSERT, UPDATE, DELETE ON subscriptions TO billing_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>grant insert, update, delete on subscriptions to billing_team</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>GRANT INSERT, UPDATE, DELETE ON subscriptions TO billing_team</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>grant insert, update, delete on subscriptions to billing_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>GRANT ALL PRIVILEGES ON customers, subscriptions TO admin_team</stat><divider><t>CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))</t><stat>grant all privileges on customers, subscriptions to admin_team</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>GRANT ALL PRIVILEGES ON customers, subscriptions TO admin_team</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, FOREIGN KEY (customer_id) REFERENCES customers(customer_id))

CREATE TABLE customers (customer_id INT PRIMARY KEY, customer_name VARCHAR(50), email VARCHAR(50) UNIQUE, created_at TIMESTAMP)</t><stat>grant all privileges on customers, subscriptions to admin_team</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>grant select, insert, update, delete on users to my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>grant select, insert, update, delete on users to my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>grant select, insert, update, delete on users to my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>grant select, insert, update, delete on users to my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>grant select, insert, update, delete on users to my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>grant select, insert, update, delete on users to my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON subscriptions TO my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>grant select, insert, update, delete on subscriptions to my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON subscriptions TO my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>grant select, insert, update, delete on subscriptions to my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON subscriptions TO my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>grant select, insert, update, delete on subscriptions to my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON subscriptions TO my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>grant select, insert, update, delete on subscriptions to my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON subscriptions TO my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>grant select, insert, update, delete on subscriptions to my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON subscriptions TO my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>grant select, insert, update, delete on subscriptions to my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>GRANT SELECT, INSERT, UPDATE ON invoices TO my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>grant select, insert, update on invoices to my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>GRANT SELECT, INSERT, UPDATE ON invoices TO my_user;</stat><divider><t>CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>grant select, insert, update on invoices to my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>GRANT SELECT, INSERT, UPDATE ON invoices TO my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );</t><stat>grant select, insert, update on invoices to my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>GRANT SELECT, INSERT, UPDATE ON invoices TO my_user;</stat><divider><t>CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>grant select, insert, update on invoices to my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>GRANT SELECT, INSERT, UPDATE ON invoices TO my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );</t><stat>grant select, insert, update on invoices to my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>GRANT SELECT, INSERT, UPDATE ON invoices TO my_user;</stat><divider><t>CREATE TABLE invoices (
    invoice_id SERIAL PRIMARY KEY,
    sub_id INT REFERENCES subscriptions(sub_id),
    amount NUMERIC(10, 2) NOT NULL,
    invoice_date DATE,
    paid BOOLEAN DEFAULT FALSE
 );

CREATE TABLE subscriptions (
    sub_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(id),
    plan_name VARCHAR(50) NOT NULL,
    price NUMERIC(10, 2) NOT NULL,
    start_date DATE
 );

CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT now()
 );</t><stat>grant select, insert, update on invoices to my_user;</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE ON customers TO user1</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update on customers to user1</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT ON products TO user2</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select on products to user2</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON orders TO user3</stat><divider><t>CREATE TABLE subscriptions (id INT PRIMARY KEY, customer_id INT, start_date DATE, end_date DATE, plan VARCHAR(50), status VARCHAR(20), FOREIGN KEY (customer_id) REFERENCES customers(id))

CREATE TABLE orders (id INT PRIMARY KEY, customer_id INT, product_id INT, quantity INT, total_price DECIMAL(10, 2), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (product_id) REFERENCES products(id))

CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(50), price DECIMAL(10, 2))

CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(50))</t><stat>grant select, insert, update, delete on orders to user3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON users TO user_role1</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on users to user_role1</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON organizations TO user_role2</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on organizations to user_role2</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>GRANT SELECT, INSERT, UPDATE, DELETE ON products TO user_role3</stat><divider><t>CREATE TABLE payments (payment_id INT PRIMARY KEY, subscription_id INT NOT NULL, amount DECIMAL(10,2) NOT NULL, payment_date TIMESTAMP NOT NULL)

CREATE TABLE subscriptions (subscription_id INT PRIMARY KEY, user_id INT NOT NULL, org_id INT NOT NULL, product_id INT NOT NULL, start_date TIMESTAMP NOT NULL, end_date TIMESTAMP NOT NULL)

CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(255) NOT NULL, price DECIMAL(10,2) NOT NULL)

CREATE TABLE organizations (org_id INT PRIMARY KEY, org_name VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL)</t><stat>grant select, insert, update, delete on products to user_role3</stat>