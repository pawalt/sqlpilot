[
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    project_manager VARCHAR(255),\n    status VARCHAR(50) DEFAULT 'Active'\n)\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = '123e4567-e89b-12d3-a456-426614174001';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    project_manager VARCHAR(255),\n    status VARCHAR(50) DEFAULT 'Active'\n)\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_name = 'Example Project';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    project_manager VARCHAR(255),\n    status VARCHAR(50) DEFAULT 'Active'\n)\n\n### STATEMENT\n\nDELETE FROM projects WHERE end_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    project_manager VARCHAR(255),\n    status VARCHAR(50) DEFAULT 'Active'\n)\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 'a4aa71df-ec8a-4de5-824f-29993d9e3ec5';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    project_manager VARCHAR(255),\n    status VARCHAR(50) DEFAULT 'Active'\n)\n\n### STATEMENT\n\nDELETE FROM projects WHERE status = 'Completed' AND start_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE,\n    project_manager VARCHAR(255),\n    status VARCHAR(50) DEFAULT 'Active'\n)\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_manager = 'John Doe' AND (status = 'Inactive' OR end_date < '2022-07-01');",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    project_id INT,\n    task_description TEXT,\n    deadline DATE,\n    status VARCHAR(50) DEFAULT 'To Do',\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    project_id INT,\n    task_description TEXT,\n    deadline DATE,\n    status VARCHAR(50) DEFAULT 'To Do',\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE task_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    project_id INT,\n    task_description TEXT,\n    deadline DATE,\n    status VARCHAR(50) DEFAULT 'To Do',\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE project_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    project_id INT,\n    task_description TEXT,\n    deadline DATE,\n    status VARCHAR(50) DEFAULT 'To Do',\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE status = 'Completed';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    project_id INT,\n    task_description TEXT,\n    deadline DATE,\n    status VARCHAR(50) DEFAULT 'To Do',\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE end_date < CURRENT_DATE();",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id INT PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    start_date DATE,\n    end_date DATE\n);\n\n\nCREATE TABLE tasks (\n    task_id INT PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    project_id INT,\n    task_description TEXT,\n    deadline DATE,\n    status VARCHAR(50) DEFAULT 'To Do',\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE project_id IN (SELECT project_id FROM projects WHERE start_date < '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    project_description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    task_description TEXT,\n    task_due_date DATE,\n    project_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n    timeline_id SERIAL PRIMARY KEY,\n    timeline_date DATE,\n    timeline_description TEXT,\n    project_id INT,\n    task_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (task_id) REFERENCES tasks(task_id)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    project_description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    task_description TEXT,\n    task_due_date DATE,\n    project_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n    timeline_id SERIAL PRIMARY KEY,\n    timeline_date DATE,\n    timeline_description TEXT,\n    project_id INT,\n    task_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (task_id) REFERENCES tasks(task_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE task_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    project_description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    task_description TEXT,\n    task_due_date DATE,\n    project_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n    timeline_id SERIAL PRIMARY KEY,\n    timeline_date DATE,\n    timeline_description TEXT,\n    project_id INT,\n    task_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (task_id) REFERENCES tasks(task_id)\n);\n\n### STATEMENT\n\nDELETE FROM timelines WHERE timeline_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    project_description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    task_description TEXT,\n    task_due_date DATE,\n    project_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n    timeline_id SERIAL PRIMARY KEY,\n    timeline_date DATE,\n    timeline_description TEXT,\n    project_id INT,\n    task_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (task_id) REFERENCES tasks(task_id)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    project_description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    task_description TEXT,\n    task_due_date DATE,\n    project_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n    timeline_id SERIAL PRIMARY KEY,\n    timeline_date DATE,\n    timeline_description TEXT,\n    project_id INT,\n    task_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (task_id) REFERENCES tasks(task_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE task_id IN (SELECT task_id FROM timelines WHERE timeline_date < CURRENT_DATE);",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id SERIAL PRIMARY KEY,\n    project_name VARCHAR(255) NOT NULL,\n    project_description TEXT,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id SERIAL PRIMARY KEY,\n    task_name VARCHAR(255) NOT NULL,\n    task_description TEXT,\n    task_due_date DATE,\n    project_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n    timeline_id SERIAL PRIMARY KEY,\n    timeline_date DATE,\n    timeline_description TEXT,\n    project_id INT,\n    task_id INT,\n    FOREIGN KEY (project_id) REFERENCES projects(project_id),\n    FOREIGN KEY (task_id) REFERENCES tasks(task_id)\n);\n\n### STATEMENT\n\nDELETE FROM timelines WHERE project_id = (SELECT project_id FROM projects WHERE project_name = 'Sample Project');",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_name VARCHAR(255),\n    status VARCHAR(50),\n    assigned_to VARCHAR(100),\n    deadline DATE\n);\n\nCREATE TABLE timelines (\n    timeline_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_id UUID,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 'example_project_id';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_name VARCHAR(255),\n    status VARCHAR(50),\n    assigned_to VARCHAR(100),\n    deadline DATE\n);\n\nCREATE TABLE timelines (\n    timeline_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_id UUID,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE task_id = 'example_task_id';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_name VARCHAR(255),\n    status VARCHAR(50),\n    assigned_to VARCHAR(100),\n    deadline DATE\n);\n\nCREATE TABLE timelines (\n    timeline_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_id UUID,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM timelines WHERE timeline_id = 'example_timeline_id';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_name VARCHAR(255),\n    status VARCHAR(50),\n    assigned_to VARCHAR(100),\n    deadline DATE\n);\n\nCREATE TABLE timelines (\n    timeline_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_id UUID,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = '328cc63e-8f48-4c8c-b5ab-0a7d319ce3cf';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_name VARCHAR(255),\n    status VARCHAR(50),\n    assigned_to VARCHAR(100),\n    deadline DATE\n);\n\nCREATE TABLE timelines (\n    timeline_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_id UUID,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE status = 'completed';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n    project_id UUID PRIMARY KEY,\n    project_name VARCHAR(255),\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE tasks (\n    task_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_name VARCHAR(255),\n    status VARCHAR(50),\n    assigned_to VARCHAR(100),\n    deadline DATE\n);\n\nCREATE TABLE timelines (\n    timeline_id UUID PRIMARY KEY,\n    project_id UUID,\n    task_id UUID,\n    start_date DATE,\n    end_date DATE\n);\n\nCREATE TABLE users (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(100)\n);\n\n### STATEMENT\n\nDELETE FROM timelines WHERE project_id = '328cc63e-8f48-4c8c-b5ab-0a7d319ce3cf' AND end_date < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n project_id INT PRIMARY KEY,\n project_name TEXT NOT NULL,\n project_description TEXT\n);\n\nCREATE TABLE tasks (\n task_id INT PRIMARY KEY,\n task_name TEXT NOT NULL,\n task_description TEXT,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n timeline_id INT PRIMARY KEY,\n timeline_name TEXT NOT NULL,\n timeline_date DATE,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE users (\n user_id INT PRIMARY KEY,\n user_name TEXT NOT NULL,\n user_email TEXT UNIQUE\n);\n\nCREATE TABLE user_tasks (\n user_id INT REFERENCES users(user_id),\n task_id INT REFERENCES tasks(task_id),\n PRIMARY KEY (user_id, task_id)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n project_id INT PRIMARY KEY,\n project_name TEXT NOT NULL,\n project_description TEXT\n);\n\nCREATE TABLE tasks (\n task_id INT PRIMARY KEY,\n task_name TEXT NOT NULL,\n task_description TEXT,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n timeline_id INT PRIMARY KEY,\n timeline_name TEXT NOT NULL,\n timeline_date DATE,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE users (\n user_id INT PRIMARY KEY,\n user_name TEXT NOT NULL,\n user_email TEXT UNIQUE\n);\n\nCREATE TABLE user_tasks (\n user_id INT REFERENCES users(user_id),\n task_id INT REFERENCES tasks(task_id),\n PRIMARY KEY (user_id, task_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE task_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n project_id INT PRIMARY KEY,\n project_name TEXT NOT NULL,\n project_description TEXT\n);\n\nCREATE TABLE tasks (\n task_id INT PRIMARY KEY,\n task_name TEXT NOT NULL,\n task_description TEXT,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n timeline_id INT PRIMARY KEY,\n timeline_name TEXT NOT NULL,\n timeline_date DATE,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE users (\n user_id INT PRIMARY KEY,\n user_name TEXT NOT NULL,\n user_email TEXT UNIQUE\n);\n\nCREATE TABLE user_tasks (\n user_id INT REFERENCES users(user_id),\n task_id INT REFERENCES tasks(task_id),\n PRIMARY KEY (user_id, task_id)\n);\n\n### STATEMENT\n\nDELETE FROM timelines WHERE timeline_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE projects (\n project_id INT PRIMARY KEY,\n project_name TEXT NOT NULL,\n project_description TEXT\n);\n\nCREATE TABLE tasks (\n task_id INT PRIMARY KEY,\n task_name TEXT NOT NULL,\n task_description TEXT,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n timeline_id INT PRIMARY KEY,\n timeline_name TEXT NOT NULL,\n timeline_date DATE,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE users (\n user_id INT PRIMARY KEY,\n user_name TEXT NOT NULL,\n user_email TEXT UNIQUE\n);\n\nCREATE TABLE user_tasks (\n user_id INT REFERENCES users(user_id),\n task_id INT REFERENCES tasks(task_id),\n PRIMARY KEY (user_id, task_id)\n);\n\n### STATEMENT\n\nDELETE FROM projects WHERE project_id = 1 AND project_name = 'Example Project';",
  "### TABLEDATA\n\nCREATE TABLE projects (\n project_id INT PRIMARY KEY,\n project_name TEXT NOT NULL,\n project_description TEXT\n);\n\nCREATE TABLE tasks (\n task_id INT PRIMARY KEY,\n task_name TEXT NOT NULL,\n task_description TEXT,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n timeline_id INT PRIMARY KEY,\n timeline_name TEXT NOT NULL,\n timeline_date DATE,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE users (\n user_id INT PRIMARY KEY,\n user_name TEXT NOT NULL,\n user_email TEXT UNIQUE\n);\n\nCREATE TABLE user_tasks (\n user_id INT REFERENCES users(user_id),\n task_id INT REFERENCES tasks(task_id),\n PRIMARY KEY (user_id, task_id)\n);\n\n### STATEMENT\n\nDELETE FROM tasks WHERE project_id = 1 AND task_id IN (SELECT task_id FROM tasks WHERE task_name LIKE '%Example%');",
  "### TABLEDATA\n\nCREATE TABLE projects (\n project_id INT PRIMARY KEY,\n project_name TEXT NOT NULL,\n project_description TEXT\n);\n\nCREATE TABLE tasks (\n task_id INT PRIMARY KEY,\n task_name TEXT NOT NULL,\n task_description TEXT,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE timelines (\n timeline_id INT PRIMARY KEY,\n timeline_name TEXT NOT NULL,\n timeline_date DATE,\n project_id INT REFERENCES projects(project_id)\n);\n\nCREATE TABLE users (\n user_id INT PRIMARY KEY,\n user_name TEXT NOT NULL,\n user_email TEXT UNIQUE\n);\n\nCREATE TABLE user_tasks (\n user_id INT REFERENCES users(user_id),\n task_id INT REFERENCES tasks(task_id),\n PRIMARY KEY (user_id, task_id)\n);\n\n### STATEMENT\n\nDELETE FROM timelines WHERE project_id IN (SELECT project_id FROM projects WHERE project_name = 'Example Project');"
]