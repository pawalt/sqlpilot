<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><s>INSERT INTO hr_employees (first_name, last_name, department, hire_date) VALUES ('John', 'Doe', 'HR', '2022-01-10') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'HR', hire_date = '2022-01-10';</s>
<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><s>insert into hr_employees (first_name, last_name, department, hire_date) values ('john', 'doe', 'hr', '2022-01-10') on conflict (employee_id) do update set first_name = 'john', last_name = 'doe', department = 'hr', hire_date = '2022-01-10';</s>
<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><s>INSERT INTO hr_employees (first_name, last_name, department, hire_date) VALUES ('Jane', 'Smith', 'Marketing', '2021-12-15') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Jane', last_name = 'Smith', department = 'Marketing', hire_date = '2021-12-15';</s>
<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><s>insert into hr_employees (first_name, last_name, department, hire_date) values ('jane', 'smith', 'marketing', '2021-12-15') on conflict (employee_id) do update set first_name = 'jane', last_name = 'smith', department = 'marketing', hire_date = '2021-12-15';</s>
<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><s>INSERT INTO hr_employees (first_name, last_name, department, hire_date) VALUES ('Alice', 'Johnson', 'IT', '2022-02-05') ON CONFLICT (employee_id) DO UPDATE SET first_name = 'Alice', last_name = 'Johnson', department = 'IT', hire_date = '2022-02-05';</s>
<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><s>insert into hr_employees (first_name, last_name, department, hire_date) values ('alice', 'johnson', 'it', '2022-02-05') on conflict (employee_id) do update set first_name = 'alice', last_name = 'johnson', department = 'it', hire_date = '2022-02-05';</s>
<t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><s>UPSERT INTO employees (id, name, age, position, salary) VALUES (1, 'John Doe', 30, 'Manager', 50000.00)</s>
<t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><s>upsert into employees (id, name, age, position, salary) values (1, 'john doe', 30, 'manager', 50000.00)</s>
<t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><s>UPSERT INTO employees (id, name, age, position, salary) VALUES (1, 'John Doe', 30, 'Manager', 50000.00)</s>
<t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><s>upsert into employees (id, name, age, position, salary) values (1, 'john doe', 30, 'manager', 50000.00)</s>
<t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><s>UPSERT INTO employees (id, name, age, position, salary) VALUES (2, 'Jane Smith', 25, 'Developer', 60000.00)</s>
<t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><s>upsert into employees (id, name, age, position, salary) values (2, 'jane smith', 25, 'developer', 60000.00)</s>
<t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><s>UPSERT INTO employees (id, name, age, position, salary) VALUES (2, 'Jane Smith', 25, 'Developer', 60000.00)</s>
<t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><s>upsert into employees (id, name, age, position, salary) values (2, 'jane smith', 25, 'developer', 60000.00)</s>
<t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco')</s>
<t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco')</s>
<t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco')</s>
<t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco')</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>INSERT INTO employee (id, name, department) VALUES (1, 'John Doe', 'IT') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, department = EXCLUDED.department</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>insert into employee (id, name, department) values (1, 'john doe', 'it') on conflict (id) do update set name = excluded.name, department = excluded.department</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>INSERT INTO employee (id, name, department) VALUES (1, 'John Doe', 'IT') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, department = EXCLUDED.department</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>insert into employee (id, name, department) values (1, 'john doe', 'it') on conflict (id) do update set name = excluded.name, department = excluded.department</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>INSERT INTO employee (id, name, department) VALUES (1, 'John Doe', 'IT') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, department = EXCLUDED.department</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>insert into employee (id, name, department) values (1, 'john doe', 'it') on conflict (id) do update set name = excluded.name, department = excluded.department</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>INSERT INTO employee (id, name, department) VALUES (1, 'John Doe', 'IT') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, department = EXCLUDED.department</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>insert into employee (id, name, department) values (1, 'john doe', 'it') on conflict (id) do update set name = excluded.name, department = excluded.department</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>INSERT INTO employee (id, name, department) VALUES (1, 'John Doe', 'IT') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, department = EXCLUDED.department</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>insert into employee (id, name, department) values (1, 'john doe', 'it') on conflict (id) do update set name = excluded.name, department = excluded.department</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>INSERT INTO employee (id, name, department) VALUES (1, 'John Doe', 'IT') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, department = EXCLUDED.department</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>insert into employee (id, name, department) values (1, 'john doe', 'it') on conflict (id) do update set name = excluded.name, department = excluded.department</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>INSERT INTO department (id, name, location) VALUES (1, 'IT', 'New York') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location = EXCLUDED.location</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>insert into department (id, name, location) values (1, 'it', 'new york') on conflict (id) do update set name = excluded.name, location = excluded.location</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>INSERT INTO department (id, name, location) VALUES (1, 'IT', 'New York') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location = EXCLUDED.location</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>insert into department (id, name, location) values (1, 'it', 'new york') on conflict (id) do update set name = excluded.name, location = excluded.location</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>INSERT INTO department (id, name, location) VALUES (1, 'IT', 'New York') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location = EXCLUDED.location</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>insert into department (id, name, location) values (1, 'it', 'new york') on conflict (id) do update set name = excluded.name, location = excluded.location</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>INSERT INTO department (id, name, location) VALUES (1, 'IT', 'New York') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location = EXCLUDED.location</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>insert into department (id, name, location) values (1, 'it', 'new york') on conflict (id) do update set name = excluded.name, location = excluded.location</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>INSERT INTO department (id, name, location) VALUES (1, 'IT', 'New York') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location = EXCLUDED.location</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>insert into department (id, name, location) values (1, 'it', 'new york') on conflict (id) do update set name = excluded.name, location = excluded.location</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>INSERT INTO department (id, name, location) VALUES (1, 'IT', 'New York') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name, location = EXCLUDED.location</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>insert into department (id, name, location) values (1, 'it', 'new york') on conflict (id) do update set name = excluded.name, location = excluded.location</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>INSERT INTO salary (id, employee_id, amount) VALUES (1, 1, 50000.00) ON CONFLICT (id) DO UPDATE SET employee_id = EXCLUDED.employee_id, amount = EXCLUDED.amount</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>insert into salary (id, employee_id, amount) values (1, 1, 50000.00) on conflict (id) do update set employee_id = excluded.employee_id, amount = excluded.amount</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>INSERT INTO salary (id, employee_id, amount) VALUES (1, 1, 50000.00) ON CONFLICT (id) DO UPDATE SET employee_id = EXCLUDED.employee_id, amount = EXCLUDED.amount</s>
<t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>insert into salary (id, employee_id, amount) values (1, 1, 50000.00) on conflict (id) do update set employee_id = excluded.employee_id, amount = excluded.amount</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>INSERT INTO salary (id, employee_id, amount) VALUES (1, 1, 50000.00) ON CONFLICT (id) DO UPDATE SET employee_id = EXCLUDED.employee_id, amount = EXCLUDED.amount</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><s>insert into salary (id, employee_id, amount) values (1, 1, 50000.00) on conflict (id) do update set employee_id = excluded.employee_id, amount = excluded.amount</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>INSERT INTO salary (id, employee_id, amount) VALUES (1, 1, 50000.00) ON CONFLICT (id) DO UPDATE SET employee_id = EXCLUDED.employee_id, amount = EXCLUDED.amount</s>
<t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>insert into salary (id, employee_id, amount) values (1, 1, 50000.00) on conflict (id) do update set employee_id = excluded.employee_id, amount = excluded.amount</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>INSERT INTO salary (id, employee_id, amount) VALUES (1, 1, 50000.00) ON CONFLICT (id) DO UPDATE SET employee_id = EXCLUDED.employee_id, amount = EXCLUDED.amount</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><s>insert into salary (id, employee_id, amount) values (1, 1, 50000.00) on conflict (id) do update set employee_id = excluded.employee_id, amount = excluded.amount</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>INSERT INTO salary (id, employee_id, amount) VALUES (1, 1, 50000.00) ON CONFLICT (id) DO UPDATE SET employee_id = EXCLUDED.employee_id, amount = EXCLUDED.amount</s>
<t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><s>insert into salary (id, employee_id, amount) values (1, 1, 50000.00) on conflict (id) do update set employee_id = excluded.employee_id, amount = excluded.amount</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO employees (id, first_name, last_name, department, salary) VALUES (1, 'John', 'Doe', 'Engineering', 60000) ON CONFLICT (id) DO UPDATE SET first_name = 'John', last_name = 'Doe', department = 'Engineering', salary = 60000;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into employees (id, first_name, last_name, department, salary) values (1, 'john', 'doe', 'engineering', 60000) on conflict (id) do update set first_name = 'john', last_name = 'doe', department = 'engineering', salary = 60000;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO departments (id, name, location) VALUES (1, 'Engineering', 'San Francisco') ON CONFLICT (id) DO UPDATE SET name = 'Engineering', location = 'San Francisco';</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into departments (id, name, location) values (1, 'engineering', 'san francisco') on conflict (id) do update set name = 'engineering', location = 'san francisco';</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>UPSERT INTO positions (id, title, description, department_id) VALUES (1, 'Software Engineer', 'Develop software applications', 1) ON CONFLICT (id) DO UPDATE SET title = 'Software Engineer', description = 'Develop software applications', department_id = 1;</s>
<t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><s>upsert into positions (id, title, description, department_id) values (1, 'software engineer', 'develop software applications', 1) on conflict (id) do update set title = 'software engineer', description = 'develop software applications', department_id = 1;</s>
