<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>ALTER TABLE hr_employees ADD COLUMN email VARCHAR(100) NOT NULL;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>alter table hr_employees add column email varchar(100) not null;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>ALTER TABLE hr_employees DROP COLUMN department;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>alter table hr_employees drop column department;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>ALTER TABLE hr_employees ALTER COLUMN hire_date SET NOT NULL;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>alter table hr_employees alter column hire_date set not null;</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(50)</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>alter table employees add column email varchar(50)</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(50)</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>alter table employees add column email varchar(50)</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>ALTER TABLE employees MODIFY COLUMN position VARCHAR(100)</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>alter table employees modify column position varchar(100)</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>ALTER TABLE employees MODIFY COLUMN position VARCHAR(100)</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>alter table employees modify column position varchar(100)</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>ALTER TABLE departments DROP COLUMN location</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>alter table departments drop column location</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>ALTER TABLE departments DROP COLUMN location</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>alter table departments drop column location</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>ALTER TABLE employee ADD COLUMN salary DECIMAL(10,2)</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>alter table employee add column salary decimal(10,2)</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>ALTER TABLE employee ADD COLUMN salary DECIMAL(10,2)</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>alter table employee add column salary decimal(10,2)</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>ALTER TABLE employee ADD COLUMN salary DECIMAL(10,2)</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>alter table employee add column salary decimal(10,2)</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>ALTER TABLE employee ADD COLUMN salary DECIMAL(10,2)</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>alter table employee add column salary decimal(10,2)</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>ALTER TABLE employee ADD COLUMN salary DECIMAL(10,2)</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>alter table employee add column salary decimal(10,2)</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>ALTER TABLE employee ADD COLUMN salary DECIMAL(10,2)</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>alter table employee add column salary decimal(10,2)</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>ALTER TABLE department ALTER COLUMN location SET DATA TYPE TEXT</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>alter table department alter column location set data type text</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>ALTER TABLE department ALTER COLUMN location SET DATA TYPE TEXT</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>alter table department alter column location set data type text</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>ALTER TABLE department ALTER COLUMN location SET DATA TYPE TEXT</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>alter table department alter column location set data type text</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>ALTER TABLE department ALTER COLUMN location SET DATA TYPE TEXT</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>alter table department alter column location set data type text</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>ALTER TABLE department ALTER COLUMN location SET DATA TYPE TEXT</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>alter table department alter column location set data type text</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>ALTER TABLE department ALTER COLUMN location SET DATA TYPE TEXT</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>alter table department alter column location set data type text</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>ALTER TABLE salary DROP COLUMN id</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>alter table salary drop column id</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>ALTER TABLE salary DROP COLUMN id</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>alter table salary drop column id</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>ALTER TABLE salary DROP COLUMN id</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>alter table salary drop column id</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>ALTER TABLE salary DROP COLUMN id</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>alter table salary drop column id</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>ALTER TABLE salary DROP COLUMN id</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>alter table salary drop column id</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>ALTER TABLE salary DROP COLUMN id</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>alter table salary drop column id</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE employees ADD COLUMN email VARCHAR(100);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table employees add column email varchar(100);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE departments ADD COLUMN manager VARCHAR(50);</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table departments add column manager varchar(50);</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>alter table benefits drop column description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>ALTER TABLE benefits DROP COLUMN description;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>alter table benefits drop column description;</stat>