<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>DROP TABLE hr_employees;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>drop table hr_employees;</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>DROP TABLE employees</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>drop table employees</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>DROP TABLE employees</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>drop table employees</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>DROP TABLE departments</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>drop table departments</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>DROP TABLE departments</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>drop table departments</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>DROP TABLE salary</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>drop table salary</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>DROP TABLE salary</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>drop table salary</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>DROP TABLE salary</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>drop table salary</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>DROP TABLE salary</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>drop table salary</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>DROP TABLE salary</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>drop table salary</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>DROP TABLE salary</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>drop table salary</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>DROP TABLE department</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>drop table department</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>DROP TABLE department</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>drop table department</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>DROP TABLE department</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>drop table department</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>DROP TABLE department</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>drop table department</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>DROP TABLE department</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>drop table department</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>DROP TABLE department</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>drop table department</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>DROP TABLE employee</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>drop table employee</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>DROP TABLE employee</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>drop table employee</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>DROP TABLE employee</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>drop table employee</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>DROP TABLE employee</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>drop table employee</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>DROP TABLE employee</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>drop table employee</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>DROP TABLE employee</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>drop table employee</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>drop table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>DROP TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>drop table positions;</stat>