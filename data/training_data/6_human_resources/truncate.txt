<t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>TRUNCATE TABLE hr_employees;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>truncate table hr_employees;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>TRUNCATE TABLE hr_employees RESTART IDENTITY;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>truncate table hr_employees restart identity;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>TRUNCATE TABLE hr_employees CASCADE;</stat><divider><t>CREATE TABLE hr_employees (
    employee_id SERIAL PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(50),
    hire_date DATE
);</t><stat>truncate table hr_employees cascade;</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))

CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id INT PRIMARY KEY, name VARCHAR(50), location VARCHAR(50))

CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), age INT, position VARCHAR(50), salary DECIMAL(10,2))</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>TRUNCATE TABLE employee;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>truncate table employee;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>TRUNCATE TABLE employee;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>truncate table employee;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>TRUNCATE TABLE employee;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>truncate table employee;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>TRUNCATE TABLE employee;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>truncate table employee;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>TRUNCATE TABLE employee;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>truncate table employee;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>TRUNCATE TABLE employee;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>truncate table employee;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>TRUNCATE TABLE department;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>truncate table department;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>TRUNCATE TABLE department;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>truncate table department;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>TRUNCATE TABLE department;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>truncate table department;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>TRUNCATE TABLE department;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>truncate table department;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>TRUNCATE TABLE department;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>truncate table department;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>TRUNCATE TABLE department;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>truncate table department;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>TRUNCATE TABLE salary;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>truncate table salary;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>TRUNCATE TABLE salary;</stat><divider><t>CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>truncate table salary;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>TRUNCATE TABLE salary;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))</t><stat>truncate table salary;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>TRUNCATE TABLE salary;</stat><divider><t>CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>truncate table salary;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>TRUNCATE TABLE salary;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))</t><stat>truncate table salary;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>TRUNCATE TABLE salary;</stat><divider><t>CREATE TABLE salary (id INT PRIMARY KEY, employee_id INT, amount DECIMAL(10,2))

CREATE TABLE department (id INT PRIMARY KEY, name VARCHAR(255), location VARCHAR(255))

CREATE TABLE employee (id INT PRIMARY KEY, name VARCHAR(255), department VARCHAR(255))</t><stat>truncate table salary;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE employees;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table employees;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE departments;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table departments;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));</t><stat>truncate table positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>TRUNCATE TABLE positions;</stat><divider><t>CREATE TABLE benefits (id SERIAL PRIMARY KEY, type VARCHAR(50), description VARCHAR(255), employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));

CREATE TABLE positions (id SERIAL PRIMARY KEY, title VARCHAR(50), description VARCHAR(255), department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));

CREATE TABLE departments (id SERIAL PRIMARY KEY, name VARCHAR(50), location VARCHAR(50));

CREATE TABLE employees (id SERIAL PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50), department VARCHAR(50), salary INT);</t><stat>truncate table positions;</stat>