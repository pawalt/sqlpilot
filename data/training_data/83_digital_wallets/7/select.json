[
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income FROM monthly_financial_statements WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT month_year, total_income, total_expenses FROM monthly_financial_statements WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements WHERE month_year BETWEEN '2021-01-01' AND '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT SUM(total_income) AS total_income_sum FROM monthly_financial_statements WHERE user_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, total_expenses, net_profit FROM monthly_financial_statements WHERE user_id = 5 AND month_year >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, net_profit FROM monthly_financial_statements WHERE total_income > total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements WHERE total_income - total_expenses > 0;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income FROM monthly_financial_statements WHERE net_profit < 0;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(total_expenses) AS avg_expenses FROM monthly_financial_statements WHERE user_id = 6;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, net_profit FROM monthly_financial_statements WHERE total_income > 10000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT MAX(total_income) AS max_income FROM monthly_financial_statements WHERE user_id = 7;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE month_year = '2023-05-01';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income FROM monthly_financial_statements WHERE total_expenses < total_income;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) AS unique_users FROM monthly_financial_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income FROM monthly_financial_statements ORDER BY month_year ASC;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_expenses FROM monthly_financial_statements ORDER BY total_expenses DESC;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT AVG(total_income) AS avg_income, AVG(total_expenses) AS avg_expenses FROM monthly_financial_statements WHERE user_id = 8;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, net_profit FROM monthly_financial_statements WHERE net_profit IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_expenses FROM monthly_financial_statements WHERE total_income >= 5000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE net_profit > 0 AND total_income > total_expenses ORDER BY month_year DESC LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(total_income) AS average_income FROM monthly_financial_statements GROUP BY user_id HAVING average_income > 5000",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT month_year, SUM(total_income) AS total_income, SUM(total_expenses) AS total_expenses, SUM(net_profit) AS total_profit FROM monthly_financial_statements GROUP BY month_year ORDER BY month_year ASC",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM monthly_financial_statements WHERE net_profit < 0",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE total_income > 100000 AND total_expenses > 50000",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE month_year BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_profit FROM monthly_financial_statements WHERE total_profit IN (SELECT MAX(total_profit) FROM monthly_financial_statements)",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE user_id = 1001",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE net_profit IS NULL",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n  user_id INT,\n  month_year DATE,\n  total_income DECIMAL,\n  total_expenses DECIMAL,\n  net_profit DECIMAL\n);\n\n### STATEMENT\n\nSELECT user_id, month_year, total_income, total_expenses, net_profit FROM monthly_financial_statements WHERE total_expenses >= total_income",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements WHERE user_id = '12345678-90ab-cdef-1234-567890abcdef';",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_id, income FROM monthly_statements WHERE month = '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM user_details WHERE user_id = '12345678-90ab-cdef-1234-567890abcdef';",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT first_name, last_name FROM user_details WHERE email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM user_details;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(income) AS total_income FROM monthly_statements GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(expenses) AS total_expenses FROM monthly_statements GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements WHERE income > expenses;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements WHERE income BETWEEN 1000 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements ORDER BY income DESC;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements ORDER BY expenses ASC;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM user_details WHERE first_name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM user_details WHERE last_name = 'Doe';",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements WHERE user_id IN ('12345678-90ab-cdef-1234-567890abcdef', '87654321-fedc-ba09-4321-098765fedcba');",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM user_details;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT AVG(income) AS average_income FROM monthly_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT MAX(expenses) AS highest_expense FROM monthly_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT MIN(income) AS lowest_income FROM monthly_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_id FROM monthly_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_statements WHERE income > 1000 AND expenses < 500",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_id, month, income FROM monthly_statements WHERE month >= '2022-01-01' AND month <= '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_details.first_name, user_details.last_name, monthly_statements.income FROM user_details JOIN monthly_statements ON user_details.user_id = monthly_statements.user_id",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_details.first_name, user_details.last_name, monthly_statements.income FROM user_details INNER JOIN monthly_statements ON user_details.user_id = monthly_statements.user_id WHERE user_details.first_name LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT user_details.first_name, user_details.last_name, SUM(income) AS total_income FROM user_details JOIN monthly_statements ON user_details.user_id = monthly_statements.user_id GROUP BY user_details.first_name, user_details.last_name",
  "### TABLEDATA\n\nCREATE TABLE monthly_statements (\n    user_id UUID PRIMARY KEY,\n    month DATE NOT NULL,\n    income DECIMAL NOT NULL,\n    expenses DECIMAL NOT NULL\n);\n\n\nCREATE TABLE user_details (\n    user_id UUID PRIMARY KEY,\n    first_name VARCHAR (50) NOT NULL,\n    last_name VARCHAR (50) NOT NULL,\n    email VARCHAR (100) UNIQUE\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users, SUM(income) AS total_income FROM user_details JOIN monthly_statements ON user_details.user_id = monthly_statements.user_id",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, month, year FROM monthly_financial_statements WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incomes;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, amount FROM incomes WHERE income_date >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, amount FROM expenses WHERE expense_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, total_income, total_expenses FROM monthly_financial_statements WHERE month = 8 AND year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT SUM(total_income) AS total_monthly_income FROM monthly_financial_statements WHERE year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_income FROM incomes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(amount) AS min_expense FROM expenses GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) AS max_income FROM incomes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT DISTINCT year FROM monthly_financial_statements;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS avg_income FROM incomes GROUP BY user_id HAVING avg_income > 5000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, description FROM incomes WHERE amount > 10000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, month, year FROM monthly_financial_statements ORDER BY year DESC, month DESC;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, total_income, total_expenses FROM monthly_financial_statements WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, amount, description, expense_date FROM expenses WHERE user_id = '123e4567-e89b-12d3-a456-426614174000' AND amount < 0;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, amount, description, income_date FROM incomes WHERE amount > 0 AND income_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS avg_expense FROM expenses GROUP BY user_id HAVING avg_expense < 500;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements WHERE user_id = '8a584972-8867-4cce-b64f-cb5ccddf9c51';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, month, year, total_income FROM monthly_financial_statements WHERE year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, total_income, total_expenses FROM monthly_financial_statements WHERE total_income > total_expenses;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, month, year, total_income FROM monthly_financial_statements WHERE total_income BETWEEN 5000 AND 10000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM incomes WHERE amount > 1000 AND income_date >= '2021-01-01' AND income_date <= '2021-12-31';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_income FROM incomes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, description, COUNT(*) AS count FROM incomes GROUP BY user_id, description HAVING count > 1;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) AS max_income FROM incomes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS average_income FROM incomes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(amount) AS min_income FROM incomes GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM expenses WHERE amount > 500 AND expense_date = '2021-08-15';",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, description, COUNT(*) AS count FROM expenses GROUP BY user_id, description HAVING count > 2;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) AS max_expense FROM expenses GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS average_expense FROM expenses GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT user_id, MIN(amount) AS min_expense FROM expenses GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements ms JOIN incomes i ON ms.user_id = i.user_id WHERE ms.year = 2021 AND i.amount > 5000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT * FROM monthly_financial_statements ms JOIN expenses e ON ms.user_id = e.user_id WHERE ms.total_expenses > 10000;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT ms.user_id, ms.month, i.amount AS income_amount, e.amount AS expense_amount FROM monthly_financial_statements ms LEFT JOIN incomes i ON ms.user_id = i.user_id LEFT JOIN expenses e ON ms.user_id = e.user_id;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT ms.user_id, ms.year, SUM(i.amount) AS total_income, SUM(e.amount) AS total_expenses FROM monthly_financial_statements ms LEFT JOIN incomes i ON ms.user_id = i.user_id LEFT JOIN expenses e ON ms.user_id = e.user_id GROUP BY ms.user_id, ms.year;",
  "### TABLEDATA\n\nCREATE TABLE monthly_financial_statements (\n    user_id UUID PRIMARY KEY,\n    month INTEGER,\n    year INTEGER,\n    total_income DECIMAL,\n    total_expenses DECIMAL\n);\n\nCREATE TABLE incomes (\n    income_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    income_date DATE\n);\n\nCREATE TABLE expenses (\n    expense_id UUID PRIMARY KEY,\n    user_id UUID,\n    amount DECIMAL,\n    description VARCHAR,\n    expense_date DATE\n);\n\n### STATEMENT\n\nSELECT ms.user_id, ms.year, AVG(i.amount) AS average_income, AVG(e.amount) AS average_expense FROM monthly_financial_statements ms LEFT JOIN incomes i ON ms.user_id = i.user_id LEFT JOIN expenses e ON ms.user_id = e.user_id GROUP BY ms.user_id, ms.year;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT income_id, amount, date FROM Income WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT expense_id, amount, date FROM Expenses WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM MonthlyFinancialStatement WHERE user_id = 4 AND year = 2022;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE age BETWEEN 25 AND 40;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Income WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Expenses WHERE date BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_income FROM Income GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_expenses FROM Expenses GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(total_income) AS total_income, SUM(total_expenses) AS total_expenses FROM MonthlyFinancialStatement GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users ORDER BY age DESC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Income ORDER BY amount DESC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Expenses ORDER BY date ASC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Income INNER JOIN Users ON Income.user_id = Users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Expenses INNER JOIN Users ON Expenses.user_id = Users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM MonthlyFinancialStatement INNER JOIN Users ON MonthlyFinancialStatement.user_id = Users.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users LEFT JOIN Income ON Users.user_id = Income.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users RIGHT JOIN Expenses ON Users.user_id = Expenses.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users WHERE age > 30;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE age BETWEEN 25 AND 35;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, i.amount FROM Users u JOIN Income i ON u.user_id = i.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, SUM(i.amount) AS total_income FROM Users u JOIN Income i ON u.user_id = i.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, SUM(i.amount) AS total_income, SUM(e.amount) AS total_expenses FROM Users u JOIN Income i ON u.user_id = i.user_id JOIN Expenses e ON u.user_id = e.user_id GROUP BY u.username;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, m.month, m.year, m.total_income, m.total_expenses FROM Users u JOIN MonthlyFinancialStatement m ON u.user_id = m.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users u WHERE EXISTS (SELECT 1 FROM Income i WHERE u.user_id = i.user_id);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT * FROM Users u WHERE NOT EXISTS (SELECT 1 FROM Income i WHERE u.user_id = i.user_id);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, AVG(i.amount) AS avg_income FROM Users u JOIN Income i ON u.user_id = i.user_id GROUP BY u.username HAVING AVG(i.amount) > 500;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, MAX(i.amount) AS max_income FROM Users u JOIN Income i ON u.user_id = i.user_id GROUP BY u.username HAVING MAX(i.amount) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, MIN(i.amount) AS min_income FROM Users u JOIN Income i ON u.user_id = i.user_id GROUP BY u.username HAVING MIN(i.amount) < 100;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(e.amount) AS num_expenses FROM Users u JOIN Expenses e ON u.user_id = e.user_id GROUP BY u.username HAVING COUNT(e.amount) > 5;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, AVG(m.total_income) AS avg_total_income FROM Users u JOIN MonthlyFinancialStatement m ON u.user_id = m.user_id GROUP BY u.username HAVING AVG(m.total_income) > 2000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, MAX(m.total_expenses) AS max_total_expenses FROM Users u JOIN MonthlyFinancialStatement m ON u.user_id = m.user_id GROUP BY u.username HAVING MAX(m.total_expenses) > 500;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, MIN(m.total_income) AS min_total_income FROM Users u JOIN MonthlyFinancialStatement m ON u.user_id = m.user_id GROUP BY u.username HAVING MIN(m.total_income) < 500;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, COUNT(m.total_expenses) AS num_total_expenses FROM Users u JOIN MonthlyFinancialStatement m ON u.user_id = m.user_id GROUP BY u.username HAVING COUNT(m.total_expenses) > 3;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, e.amount AS expense_amount FROM Users u JOIN Expenses e ON u.user_id = e.user_id WHERE e.amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, i.amount AS income_amount FROM Users u JOIN Income i ON u.user_id = i.user_id WHERE i.amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT u.username, i.amount AS income_amount, e.amount AS expense_amount FROM Users u JOIN Income i ON u.user_id = i.user_id JOIN Expenses e ON u.user_id = e.user_id WHERE i.amount > 500 AND e.amount < 200;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255),\n    email VARCHAR(255),\n    age INT\n)\n\nCREATE TABLE Income (\n    income_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE Expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT,\n    amount DECIMAL(10, 2),\n    date DATE\n)\n\nCREATE TABLE MonthlyFinancialStatement (\n    statement_id INT PRIMARY KEY,\n    user_id INT,\n    month INT,\n    year INT,\n    total_income DECIMAL(10, 2),\n    total_expenses DECIMAL(10, 2)\n)\n\n### STATEMENT\n\nSELECT username, email, amount FROM Users JOIN Income ON Users.user_id = Income.user_id WHERE Income.amount > (SELECT AVG(amount) FROM Income);",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM income;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT income_id, user_id, amount FROM income WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT amount, source FROM income WHERE amount > 1000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM expenses;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT expense_id, user_id, amount FROM expenses WHERE user_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT amount, category FROM expenses WHERE category = 'groceries';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT transaction_id, user_id, amount FROM transactions WHERE user_id = 4;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT amount, type FROM transactions WHERE type = 'credit';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM financial_statements;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT statement_id, user_id, statement_date FROM financial_statements WHERE user_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT statement_date, statement_type FROM financial_statements WHERE statement_type = 'quarterly';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, amount, category FROM users INNER JOIN expenses ON users.user_id = expenses.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT t.amount, f.statement_type FROM transactions t INNER JOIN financial_statements f ON t.user_id = f.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT u.username, i.amount, t.type FROM users u INNER JOIN income i ON u.user_id = i.user_id INNER JOIN transactions t ON u.user_id = t.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT e.category, i.amount FROM expenses e INNER JOIN income i ON e.user_id = i.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT u.username, f.statement_date FROM users u INNER JOIN financial_statements f ON u.user_id = f.user_id ORDER BY f.statement_date DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM users JOIN income ON users.user_id = income.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, amount FROM users JOIN income ON users.user_id = income.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT category FROM expenses",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT statement_id, statement_date FROM financial_statements WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, amount FROM users WHERE user_id IN (SELECT user_id FROM income WHERE amount > 1000)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE type = 'credit'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(amount) AS total_income FROM income GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, amount FROM users JOIN transactions ON users.user_id = transactions.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, category FROM users JOIN expenses ON users.user_id = expenses.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, COUNT(transaction_id) AS num_transactions FROM transactions GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT SUM(amount) AS total_expenses FROM expenses WHERE user_id = 2",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, MAX(statement_date) FROM financial_statements GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, SUM(amount) AS total_income FROM users JOIN income ON users.user_id = income.user_id GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT statement_id, statement_type FROM financial_statements WHERE statement_date BETWEEN '2022-01-01' AND '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, AVG(amount) AS avg_income FROM users JOIN income ON users.user_id = income.user_id GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, MIN(amount) AS min_expense FROM expenses GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM expenses WHERE category LIKE 'utilities%'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, amount FROM users WHERE user_id NOT IN (SELECT user_id FROM expenses)",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT user_id, AVG(amount) AS avg_transaction_amount FROM transactions GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE income (\n    income_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    source VARCHAR(100) NOT NULL\n)\n\nCREATE TABLE expenses (\n    expense_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    category VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount DECIMAL(10, 2) NOT NULL,\n    type VARCHAR(50) NOT NULL\n)\n\nCREATE TABLE financial_statements (\n    statement_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    statement_date DATE NOT NULL,\n    statement_type VARCHAR(50) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(amount) AS highest_expense FROM expenses"
]