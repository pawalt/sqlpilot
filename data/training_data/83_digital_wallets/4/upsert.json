[
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('1c74d0e7-3584-4d8a-9f66-f24a67eedf4d', 1000.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('f41c4bc1-4c3d-4c94-a651-84ff7c3600f0', 500.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('c03834c9-2f48-45af-86c4-098feebea7a8', 750.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('dafe7b09-8154-43a0-a5f4-21f44a98e15b', 1200.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('68955f92-1c85-4b17-80f6-7bf5ec8716b9', 900.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('b85df310-c621-44bc-b091-2f8309e648e6', 600.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('6c023320-e9c7-42dc-a67a-91779c07e389', 1500.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('f657613c-7618-4b18-82ac-432638ff07b1', 800.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('1b7423aa-0ef3-4874-b9d3-ff8194708943', 1100.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('8e4f6150-334c-4e79-8e1f-4b2f6a0a92a6', 700.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('4d07c58d-38dd-46d8-b34f-6fc6c28d3079', 950.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('0b8552da-cbeb-49f4-b51a-8cd16fbd5fc0', 1350.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('7e6ebc85-fde0-412d-b21d-479da07f8aa4', 850.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('2e24abbe-060b-4680-bb2a-c200dc184cf4', 1050.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('9b9d612e-1f84-41b9-877d-4d20f6e531b5', 1250.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('d390066b-f772-460f-856f-6f9eac5a42a2', 870.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('5e73c148-6d46-49da-803a-3e0f2402ef9b', 980.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('1fa5de81-ea9e-49b0-9119-7d7a340fd674', 1450.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('c8d5c65c-a875-4ab7-a35a-4b41f174a6eb', 880.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES ('37d551ec-1d3c-40ab-8f27-2f91546bae15', 790.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('b02f4f02-5b45-4967-b605-819cb6496916', 1000) ON CONFLICT (account_id) DO UPDATE SET balance = 1000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('c5248e52-9342-4f7d-b548-6d3617dc06a8', 1500) ON CONFLICT (account_id) DO UPDATE SET balance = 1500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('d7ae43fa-e09b-47c5-9ce8-454a0c2b8b50', 2000) ON CONFLICT (account_id) DO UPDATE SET balance = 2000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('eaf91d38-6fe8-4b0f-bb7d-3a506f2df159', 2500) ON CONFLICT (account_id) DO UPDATE SET balance = 2500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('f1465314-060b-4ab6-b3bb-07a6389c2d0f', 3000) ON CONFLICT (account_id) DO UPDATE SET balance = 3000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('g841b523-bdb2-4b34-b53c-1adcfb3ac1ae', 3500) ON CONFLICT (account_id) DO UPDATE SET balance = 3500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('h0d853a4-6180-40da-82f2-21d9193beff1', 4000) ON CONFLICT (account_id) DO UPDATE SET balance = 4000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('i627de6a-7a9e-453e-89f6-e404f2e8c545', 4500) ON CONFLICT (account_id) DO UPDATE SET balance = 4500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('j9fa257c-58a7-496d-b5a5-0bde37ff7e6c', 5000) ON CONFLICT (account_id) DO UPDATE SET balance = 5000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('k3cbd9c7-5ede-4961-8d86-d9099e319d09', 5500) ON CONFLICT (account_id) DO UPDATE SET balance = 5500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('l3fe5124-d17e-4a63-ae33-3baf59b0443f', 6000) ON CONFLICT (account_id) DO UPDATE SET balance = 6000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('m114b57e-17b9-4f1c-ba4b-d0998a7f5cc4', 6500) ON CONFLICT (account_id) DO UPDATE SET balance = 6500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('nfc08f47-947c-41b1-9653-28977a6f5361', 7000) ON CONFLICT (account_id) DO UPDATE SET balance = 7000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('oh9dc39b-4c95-4a38-a67b-a21ff05ddfc9', 7500) ON CONFLICT (account_id) DO UPDATE SET balance = 7500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('p18c01e4-47f2-4810-82af-df60fb7e225d', 8000) ON CONFLICT (account_id) DO UPDATE SET balance = 8000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('q137791d-047e-47d7-afe8-af2939371e48', 8500) ON CONFLICT (account_id) DO UPDATE SET balance = 8500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('r01f6d4d-c16b-4cee-b1ed-8e2931c210b3', 9000) ON CONFLICT (account_id) DO UPDATE SET balance = 9000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('s01de1f6-5fe8-4b74-a63c-ce198eae1255', 9500) ON CONFLICT (account_id) DO UPDATE SET balance = 9500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('t49f3174-d2d9-4fec-aba6-3520a7ccb238', 10000) ON CONFLICT (account_id) DO UPDATE SET balance = 10000;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id UUID PRIMARY KEY,\n    balance DECIMAL\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES ('u4c0a0d7-0135-4935-aa4d-8b45f0e48e07', 10500) ON CONFLICT (account_id) DO UPDATE SET balance = 10500;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (1, 1000) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (2, 2000) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (3, 1500) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (4, 500) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (5, 3000) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (6, 2500) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (7, 1200) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (8, 1800) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (9, 3500) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (10, 400) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (11, 2700) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (12, 600) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (13, 3200) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (14, 150) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (15, 3900) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (16, 800) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (17, 2200) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (18, 700) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (19, 2100) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (20, 1100) ON CONFLICT (account_id) DO UPDATE SET balance = EXCLUDED.balance",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (1, 'John Doe', 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (1, 100.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (1, 1, 50.00, '2022-04-15 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (2, 'Jane Smith', 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (2, 150.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (2, 2, 75.00, '2022-04-16 12:30:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (3, 'Alice Johnson', 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (3, 200.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (3, 3, 100.00, '2022-04-17 13:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (4, 'Bob Adams', 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (4, 75.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (4, 4, 40.00, '2022-04-18 14:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (5, 'Eva Brown', 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (5, 300.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (5, 5, 90.00, '2022-04-19 15:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (6, 'Michael Clark', 'Checking') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (6, 120.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (6, 6, 60.00, '2022-04-20 16:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO accounts (account_id, account_name, account_type) VALUES (7, 'Sarah Roberts', 'Savings') ON CONFLICT (account_id) DO UPDATE SET account_name = excluded.account_name, account_type = excluded.account_type;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (account_id, balance) VALUES (7, 250.00) ON CONFLICT (account_id) DO UPDATE SET balance = excluded.balance;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE account_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    amount DECIMAL,\n    timestamp TIMESTAMP\n);\n\nCREATE TABLE accounts (\n    account_id INT PRIMARY KEY,\n    account_name VARCHAR,\n    account_type VARCHAR\n);\n\n### STATEMENT\n\nINSERT INTO account_transactions (transaction_id, account_id, amount, timestamp) VALUES (7, 7, 110.00, '2022-04-21 17:00:00') ON CONFLICT (transaction_id) DO UPDATE SET account_id = excluded.account_id, amount = excluded.amount, timestamp = excluded.timestamp;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (1, 100.50);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (2, 200.75);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (3, 300.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (4, 400.25);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (5, 500.50);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (6, 600.75);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (7, 700.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (8, 800.25);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (9, 900.50);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (10, 1000.75);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (1, 1, 50.25, '2022-09-01 08:00:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (2, 2, 75.50, '2022-09-02 10:30:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (3, 3, 100.75, '2022-09-03 12:45:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (4, 4, 125.00, '2022-09-04 15:00:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (5, 5, 150.25, '2022-09-05 17:15:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (6, 6, 175.50, '2022-09-06 19:30:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (7, 7, 200.75, '2022-09-07 21:45:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (8, 8, 225.00, '2022-09-08 23:59:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (9, 9, 250.25, '2022-09-09 08:15:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (10, 10, 275.50, '2022-09-10 10:30:00');",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (1, 1, '2022-09-01 08:00:00', 150.75);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (2, 2, '2022-09-02 10:30:00', 276.25);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (3, 3, '2022-09-03 12:45:00', 401.50);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (4, 4, '2022-09-04 15:00:00', 526.75);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (5, 5, '2022-09-05 17:15:00', 652.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (6, 6, '2022-09-06 19:30:00', 777.25);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (7, 7, '2022-09-07 21:45:00', 902.50);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (8, 8, '2022-09-08 23:59:00', 1027.75);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (9, 9, '2022-09-09 08:15:00', 1153.00);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (10, 10, '2022-09-10 10:30:00', 1278.25);",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (1, 100.50) ON DUPLICATE KEY UPDATE balance = 100.50;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (2, 250.75) ON DUPLICATE KEY UPDATE balance = 250.75;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (101, 1, 50.25, '2022-01-15 10:30:00') ON DUPLICATE KEY UPDATE amount = 50.25;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (102, 2, 75.30, '2022-01-16 11:45:00') ON DUPLICATE KEY UPDATE amount = 75.30;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (201, 1, '2022-01-15 12:00:00', 150.75) ON DUPLICATE KEY UPDATE new_balance = 150.75;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (202, 2, '2022-01-16 14:30:00', 325.50) ON DUPLICATE KEY UPDATE new_balance = 325.50;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (3, 300.90) ON DUPLICATE KEY UPDATE balance = 300.90;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (4, 400.67) ON DUPLICATE KEY UPDATE balance = 400.67;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (103, 3, 90.20, '2022-01-17 09:00:00') ON DUPLICATE KEY UPDATE amount = 90.20;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (104, 4, 110.45, '2022-01-18 10:30:00') ON DUPLICATE KEY UPDATE amount = 110.45;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (203, 3, '2022-01-17 11:30:00', 390.10) ON DUPLICATE KEY UPDATE new_balance = 390.10;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (204, 4, '2022-01-18 13:45:00', 511.12) ON DUPLICATE KEY UPDATE new_balance = 511.12;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (5, 500.25) ON DUPLICATE KEY UPDATE balance = 500.25;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (6, 600.30) ON DUPLICATE KEY UPDATE balance = 600.30;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (105, 5, 120.50, '2022-01-19 15:00:00') ON DUPLICATE KEY UPDATE amount = 120.50;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO transactions (transaction_id, account_id, amount, transaction_date) VALUES (106, 6, 140.75, '2022-01-20 16:30:00') ON DUPLICATE KEY UPDATE amount = 140.75;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (205, 5, '2022-01-19 17:45:00', 620.75) ON DUPLICATE KEY UPDATE new_balance = 620.75;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_updates (update_id, account_id, update_date, new_balance) VALUES (206, 6, '2022-01-20 19:00:00', 740.05) ON DUPLICATE KEY UPDATE new_balance = 740.05;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (7, 700.50) ON DUPLICATE KEY UPDATE balance = 700.50;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n  account_id INT PRIMARY KEY,\n  balance DECIMAL\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  account_id INT,\n  amount DECIMAL,\n  transaction_date TIMESTAMP\n);\n\nCREATE TABLE account_updates (\n  update_id INT PRIMARY KEY,\n  account_id INT,\n  update_date TIMESTAMP,\n  new_balance DECIMAL\n);\n\n### STATEMENT\n\nUPSERT INTO account_balances (account_id, balance) VALUES (8, 800.75) ON DUPLICATE KEY UPDATE balance = 800.75;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balance (account_id, balance) VALUES (1, 1000) ON CONFLICT (account_id) DO UPDATE SET balance = 1000;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (1, 1, 100, '2023-06-15 10:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (1, 1, 500, '2023-06-15 12:00:00') ON CONFLICT (transaction_id) DO UPDATE SET credit_amount = 500;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (1, 1, 200, '2023-06-15 15:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balance (account_id, balance) VALUES (2, 500) ON CONFLICT (account_id) DO UPDATE SET balance = 500;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (2, 2, 200, '2023-06-16 09:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (2, 2, 300, '2023-06-16 11:00:00') ON CONFLICT (transaction_id) DO UPDATE SET credit_amount = 300;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (2, 2, 100, '2023-06-16 14:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balance (account_id, balance) VALUES (3, 700) ON CONFLICT (account_id) DO UPDATE SET balance = 700;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (3, 3, 300, '2023-06-17 08:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (3, 3, 200, '2023-06-17 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET credit_amount = 200;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (3, 3, 100, '2023-06-17 12:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balance (account_id, balance) VALUES (4, 300) ON CONFLICT (account_id) DO UPDATE SET balance = 300;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (4, 4, 150, '2023-06-18 10:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (4, 4, 100, '2023-06-18 11:00:00') ON CONFLICT (transaction_id) DO UPDATE SET credit_amount = 100;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (4, 4, 50, '2023-06-18 14:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balance (account_id, balance) VALUES (5, 900) ON CONFLICT (account_id) DO UPDATE SET balance = 900;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (5, 5, 400, '2023-06-19 09:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (5, 5, 300, '2023-06-19 10:00:00') ON CONFLICT (transaction_id) DO UPDATE SET credit_amount = 300;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (5, 5, 100, '2023-06-19 13:00:00') ON CONFLICT (transaction_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balance (account_id, balance) VALUES (6, 800) ON CONFLICT (account_id) DO UPDATE SET balance = 800;",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO account_balance (account_id, balance) VALUES (1, 1000) ON DUPLICATE KEY UPDATE balance = balance + 100",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (1, 1, 500, '2022-01-15 10:30:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 500, transaction_date = '2022-01-15 10:30:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (1, 1, 200, '2022-02-10 15:45:00') ON DUPLICATE KEY UPDATE credit_amount = credit_amount + 200, credit_date = '2022-02-10 15:45:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (1, 1, 300, '2022-03-05 08:00:00') ON DUPLICATE KEY UPDATE debit_amount = debit_amount + 300, debit_date = '2022-03-05 08:00:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO account_balance (account_id, balance) VALUES (2, 2000) ON DUPLICATE KEY UPDATE balance = balance + 200",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (2, 2, 700, '2022-02-20 14:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 700, transaction_date = '2022-02-20 14:00:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (2, 2, 150, '2022-03-01 09:30:00') ON DUPLICATE KEY UPDATE credit_amount = credit_amount + 150, credit_date = '2022-03-01 09:30:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (2, 2, 250, '2022-03-15 12:45:00') ON DUPLICATE KEY UPDATE debit_amount = debit_amount + 250, debit_date = '2022-03-15 12:45:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO account_balance (account_id, balance) VALUES (3, 3000) ON DUPLICATE KEY UPDATE balance = balance + 300",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (3, 3, 900, '2022-01-10 11:00:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 900, transaction_date = '2022-01-10 11:00:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (3, 3, 120, '2022-02-05 13:30:00') ON DUPLICATE KEY UPDATE credit_amount = credit_amount + 120, credit_date = '2022-02-05 13:30:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (3, 3, 180, '2022-03-20 10:15:00') ON DUPLICATE KEY UPDATE debit_amount = debit_amount + 180, debit_date = '2022-03-20 10:15:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO account_balance (account_id, balance) VALUES (4, 4000) ON DUPLICATE KEY UPDATE balance = balance + 400",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO transaction_history (transaction_id, account_id, transaction_amount, transaction_date) VALUES (4, 4, 800, '2022-02-05 12:30:00') ON DUPLICATE KEY UPDATE transaction_amount = transaction_amount + 800, transaction_date = '2022-02-05 12:30:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO credit_transactions (transaction_id, account_id, credit_amount, credit_date) VALUES (4, 4, 80, '2022-03-10 16:45:00') ON DUPLICATE KEY UPDATE credit_amount = credit_amount + 80, credit_date = '2022-03-10 16:45:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balance (\n    account_id INT PRIMARY KEY,\n    balance DECIMAL\n);\n\nCREATE TABLE transaction_history (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    transaction_amount DECIMAL,\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE credit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    credit_amount DECIMAL,\n    credit_date TIMESTAMP\n);\n\nCREATE TABLE debit_transactions (\n    transaction_id INT PRIMARY KEY,\n    account_id INT,\n    debit_amount DECIMAL,\n    debit_date TIMESTAMP\n);\n\n### STATEMENT\n\nUPSERT INTO debit_transactions (transaction_id, account_id, debit_amount, debit_date) VALUES (4, 4, 320, '2022-03-25 09:00:00') ON DUPLICATE KEY UPDATE debit_amount = debit_amount + 320, debit_date = '2022-03-25 09:00:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (id, account_number, account_name, balance) VALUES (1, 12345, 'Savings', 1000.00) ON DUPLICATE KEY UPDATE balance = balance + VALUES(balance)",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (1, 12345, 'Deposit', 500.00, '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE amount = amount + VALUES(amount)",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (1, 'john_doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE username = VALUES(username), email = VALUES(email)",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, event, event_date, user_id) VALUES (1, 'Login', '2022-01-01 09:00:00', 1) ON DUPLICATE KEY UPDATE event_date = VALUES(event_date)",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_sessions (session_id, user_id, session_start, session_end) VALUES (1, 1, '2022-01-01 09:00:00', '2022-01-01 10:00:00') ON DUPLICATE KEY UPDATE session_end = '2022-01-01 12:00:00'",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (id, account_number, account_name, balance) VALUES (1, 1001, 'Savings Account', 5000.00) ON DUPLICATE KEY UPDATE balance = balance + 1000.00;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (101, 1001, 'Deposit', 1000.00, '2022-01-15 12:00:00') ON DUPLICATE KEY UPDATE amount = amount + 1000.00, transaction_date = '2022-01-15 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (1, 'john_doe', 'john.doe@example.com') ON DUPLICATE KEY UPDATE username = 'john_doe_updated';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, event, event_date, user_id) VALUES (501, 'Login', '2022-01-15 10:00:00', 1) ON DUPLICATE KEY UPDATE event = 'Logout';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_sessions (session_id, user_id, session_start, session_end) VALUES (101, 1, '2022-01-15 10:00:00', '2022-01-15 12:00:00') ON DUPLICATE KEY UPDATE session_end = '2022-01-15 12:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (id, account_number, account_name, balance) VALUES (2, 1002, 'Checking Account', 3000.00) ON DUPLICATE KEY UPDATE balance = balance + 500.00;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (102, 1002, 'Withdrawal', 500.00, '2022-01-15 13:00:00') ON DUPLICATE KEY UPDATE amount = amount - 500.00, transaction_date = '2022-01-15 13:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (2, 'jane_doe', 'jane.doe@example.com') ON DUPLICATE KEY UPDATE email = 'jane.doe_updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, event, event_date, user_id) VALUES (502, 'Logout', '2022-01-15 14:00:00', 2) ON DUPLICATE KEY UPDATE event_date = '2022-01-15 14:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_sessions (session_id, user_id, session_start, session_end) VALUES (102, 2, '2022-01-15 14:00:00', '2022-01-15 16:00:00') ON DUPLICATE KEY UPDATE session_end = '2022-01-15 16:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (id, account_number, account_name, balance) VALUES (3, 1003, 'Savings Account', 7000.00) ON DUPLICATE KEY UPDATE balance = balance + 2000.00;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (103, 1003, 'Deposit', 2000.00, '2022-01-15 15:00:00') ON DUPLICATE KEY UPDATE amount = amount + 2000.00, transaction_date = '2022-01-15 15:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (3, 'alice_smith', 'alice.smith@example.com') ON DUPLICATE KEY UPDATE username = 'alice_smith_updated';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, event, event_date, user_id) VALUES (503, 'Login', '2022-01-15 16:00:00', 3) ON DUPLICATE KEY UPDATE event = 'Logout';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_sessions (session_id, user_id, session_start, session_end) VALUES (103, 3, '2022-01-15 16:00:00', '2022-01-15 18:00:00') ON DUPLICATE KEY UPDATE session_end = '2022-01-15 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO account_balances (id, account_number, account_name, balance) VALUES (4, 1004, 'Checking Account', 1500.00) ON DUPLICATE KEY UPDATE balance = balance - 200.00;",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO transactions (transaction_id, account_number, transaction_type, amount, transaction_date) VALUES (104, 1004, 'Withdrawal', 200.00, '2022-01-15 17:00:00') ON DUPLICATE KEY UPDATE amount = amount - 200.00, transaction_date = '2022-01-15 17:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO users (user_id, username, email) VALUES (4, 'bob_johnson', 'bob.johnson@example.com') ON DUPLICATE KEY UPDATE email = 'bob.johnson_updated@example.com';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO audit_logs (log_id, event, event_date, user_id) VALUES (504, 'Logout', '2022-01-15 18:00:00', 4) ON DUPLICATE KEY UPDATE event_date = '2022-01-15 18:00:00';",
  "### TABLEDATA\n\nCREATE TABLE account_balances (\n    id INT PRIMARY KEY,\n    account_number INT,\n    account_name VARCHAR(255),\n    balance DECIMAL(10,2)\n);\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    account_number INT,\n    transaction_type VARCHAR(50),\n    amount DECIMAL(10,2),\n    transaction_date TIMESTAMP\n);\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50),\n    email VARCHAR(255)\n);\n\nCREATE TABLE audit_logs (\n    log_id INT PRIMARY KEY,\n    event VARCHAR(50),\n    event_date TIMESTAMP,\n    user_id INT\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    session_start TIMESTAMP,\n    session_end TIMESTAMP\n);\n\n### STATEMENT\n\nINSERT INTO user_sessions (session_id, user_id, session_start, session_end) VALUES (104, 4, '2022-01-15 18:00:00', '2022-01-15 20:00:00') ON DUPLICATE KEY UPDATE session_end = '2022-01-15 20:00:00';"
]