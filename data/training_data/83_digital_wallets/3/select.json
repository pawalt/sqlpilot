[
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT total_spending FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT loyalty_level FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, loyalty_level FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT total_spending, loyalty_level FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending, loyalty_level FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE total_spending > 100;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE loyalty_level = 'Gold';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE total_spending > 500;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE loyalty_level = 'Platinum';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending, loyalty_level FROM loyalty_programs WHERE user_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs ORDER BY loyalty_level ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE user_id = 3 ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(user_id) FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(total_spending) FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT MAX(total_spending) FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT * FROM loyalty_programs WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE total_spending > 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, loyalty_level FROM loyalty_programs WHERE loyalty_level = 'Gold';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending, loyalty_level FROM loyalty_programs WHERE total_spending BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(total_spending) AS average_spending FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE total_spending < (SELECT AVG(total_spending) FROM loyalty_programs);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, loyalty_level FROM loyalty_programs WHERE total_spending > (SELECT MAX(total_spending) FROM loyalty_programs);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT SUM(total_spending) AS total_spending_sum FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS total_count FROM loyalty_programs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, loyalty_level FROM loyalty_programs WHERE total_spending > (SELECT total_spending FROM loyalty_programs WHERE user_id = 456);",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE loyalty_level IN ('Gold', 'Platinum');",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT DISTINCT loyalty_level FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending, loyalty_level FROM loyalty_programs ORDER BY loyalty_level ASC;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT AVG(total_spending) AS average_spending, MAX(total_spending) AS max_spending FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE loyalty_level LIKE '%m%';",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending FROM loyalty_programs WHERE user_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT loyalty_level) AS unique_levels FROM loyalty_programs;",
  "### TABLEDATA\n\nCREATE TABLE loyalty_programs (\n    user_id INT PRIMARY KEY,\n    total_spending DECIMAL,\n    loyalty_level VARCHAR\n);\n\n### STATEMENT\n\nSELECT user_id, total_spending, loyalty_level FROM loyalty_programs WHERE loyalty_level IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, name FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE user_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT transaction_id, amount FROM transactions WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users JOIN transactions ON users.user_id = transactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, amount FROM users JOIN transactions ON users.user_id = transactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, name, SUM(amount) AS total_amount FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, name FROM users WHERE user_id BETWEEN 1 AND 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE timestamp BETWEEN '2022-01-01' AND '2022-01-31';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS avg_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_transactions FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%@example.com';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(amount) AS max_amount FROM transactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM users ORDER BY user_id DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, TIMESTAMPDIFF(MINUTE, timestamp, NOW()) AS minutes_ago FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT user_id) AS total_users FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE name = 'John' OR name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE user_id > 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, t.amount FROM users u JOIN transactions t ON u.user_id = t.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, SUM(t.amount) AS total_amount FROM users u JOIN transactions t ON u.user_id = t.user_id GROUP BY u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, t.amount FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE t.amount > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, t.amount FROM users u LEFT JOIN transactions t ON u.user_id = t.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(amount) AS average_amount FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM transactions WHERE timestamp > '2021-01-01';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, COUNT(t.transaction_id) AS total_transactions FROM users u JOIN transactions t ON u.user_id = t.user_id GROUP BY u.user_id HAVING COUNT(t.transaction_id) > 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE user_id IN (SELECT user_id FROM transactions WHERE amount > 500);",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, MAX(t.amount) AS max_amount FROM users u JOIN transactions t ON u.user_id = t.user_id GROUP BY u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, AVG(t.amount) AS average_amount FROM users u JOIN transactions t ON u.user_id = t.user_id GROUP BY u.name;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, t.amount FROM users u RIGHT JOIN transactions t ON u.user_id = t.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE user_id NOT IN (SELECT user_id FROM transactions);",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT name FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM transactions ORDER BY timestamp DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, SUM(t.amount) AS total_amount FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE t.timestamp BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY u.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n  user_id INT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\nCREATE TABLE transactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  amount DECIMAL(10, 2),\n  timestamp TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.name, t.amount, timestamp FROM users u LEFT JOIN transactions t ON u.user_id = t.user_id ORDER BY timestamp DESC LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT user_id, username FROM users WHERE total_spending > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT email FROM users WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users WHERE total_spending < 50;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT * FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT transaction_id, amount_spent FROM transactions WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT * FROM loyalty_program;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT user_id, loyalty_points FROM loyalty_program WHERE loyalty_points > 100;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, transactions.amount_spent FROM users JOIN transactions ON users.user_id = transactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, transactions.amount_spent, loyalty_program.loyalty_points FROM users JOIN transactions ON users.user_id = transactions.user_id JOIN loyalty_program ON users.user_id = loyalty_program.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, transactions.amount_spent, loyalty_program.loyalty_points FROM users LEFT JOIN transactions ON users.user_id = transactions.user_id LEFT JOIN loyalty_program ON users.user_id = loyalty_program.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, SUM(transactions.amount_spent) AS total_spent FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, AVG(transactions.amount_spent) AS avg_spent FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, COUNT(transactions.transaction_id) AS num_transactions FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT MIN(amount_spent) AS min_spent, MAX(amount_spent) AS max_spent FROM transactions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, AVG(loyalty_program.loyalty_points) AS avg_points FROM users JOIN loyalty_program ON users.user_id = loyalty_program.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, SUM(loyalty_program.loyalty_points) AS total_points FROM users JOIN loyalty_program ON users.user_id = loyalty_program.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, SUM(transactions.amount_spent) AS total_spent, SUM(loyalty_program.loyalty_points) AS total_points FROM users JOIN transactions ON users.user_id = transactions.user_id JOIN loyalty_program ON users.user_id = loyalty_program.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT users.username, COUNT(DISTINCT transactions.transaction_id) AS distinct_transactions FROM users JOIN transactions ON users.user_id = transactions.user_id GROUP BY users.username;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending > 1000",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE total_spending > 5000 ORDER BY total_spending DESC LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent FROM users u JOIN transactions t ON u.user_id = t.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, t.timestamp FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE t.amount_spent > 100 ORDER BY t.timestamp DESC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, lp.loyalty_points FROM users u JOIN transactions t ON u.user_id = t.user_id JOIN loyalty_program lp ON u.user_id = lp.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, SUM(t.amount_spent) AS total_spent FROM users u JOIN transactions t ON u.user_id = t.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, AVG(t.amount_spent) AS avg_spent FROM users u JOIN transactions t ON u.user_id = t.user_id GROUP BY u.username HAVING AVG(t.amount_spent) > 500",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT username, email FROM users WHERE username LIKE 'A%' AND total_spending < 500",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, t.timestamp FROM users u LEFT JOIN transactions t ON u.user_id = t.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, t.timestamp FROM users u RIGHT JOIN transactions t ON u.user_id = t.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, t.timestamp FROM users u FULL JOIN transactions t ON u.user_id = t.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT u.username FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE t.amount_spent > 1000",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, t.timestamp FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE TIMESTAMPDIFF(HOUR, t.timestamp, NOW()) < 24",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, lp.loyalty_points FROM users u JOIN transactions t ON u.user_id = t.user_id LEFT JOIN loyalty_program lp ON u.user_id = lp.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, COUNT(lp.loyalty_points) AS num_points FROM users u JOIN transactions t ON u.user_id = t.user_id LEFT JOIN loyalty_program lp ON u.user_id = lp.user_id GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT DISTINCT u.username, CASE WHEN t.amount_spent > 500 THEN 'High' ELSE 'Low' END AS spending_category FROM users u JOIN transactions t ON u.user_id = t.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, t.amount_spent, t.timestamp FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE EXTRACT(MONTH FROM t.timestamp) = 10",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, AVG(t.amount_spent) AS avg_spent FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE EXTRACT(YEAR FROM t.timestamp) = 2021 GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, SUM(t.amount_spent) AS total_spent FROM users u JOIN transactions t ON u.user_id = t.user_id WHERE t.timestamp BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY u.username",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    total_spending DECIMAL\n)\n\nCREATE TABLE transactions (\n    transaction_id INT PRIMARY KEY,\n    user_id INT REFERENCES users(user_id),\n    amount_spent DECIMAL,\n    timestamp TIMESTAMP\n)\n\nCREATE TABLE loyalty_program (\n    user_id INT REFERENCES users(user_id),\n    loyalty_points INT\n)\n\n### STATEMENT\n\nSELECT u.username, LPAD(user_id, 5, '0') AS padded_user_id FROM users u",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, name, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE name = 'John Doe';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name, total_spending FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY name ASC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending > 1000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending BETWEEN 500 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT AVG(total_spending) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT MAX(total_spending) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT MIN(total_spending) FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, name, email, total_spending FROM users WHERE total_spending > 5000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT DISTINCT name FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending > 1000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, name, email FROM users WHERE total_spending BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT COUNT(user_id) AS total_users FROM users WHERE total_spending < 500;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name FROM users WHERE total_spending > 2000 ORDER BY name DESC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE name LIKE 'J%';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT AVG(total_spending) AS avg_spending FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT DISTINCT email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending > (SELECT AVG(total_spending) FROM users);",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name, total_spending FROM users WHERE total_spending IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT MAX(total_spending) AS max_spending FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name, total_spending FROM users WHERE total_spending > (SELECT MAX(total_spending) FROM users) - 500;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE total_spending > (SELECT AVG(total_spending) FROM users) * 2;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending > 3000 OR name = 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT user_id, email FROM users WHERE total_spending > 500 AND name IN ('Bob', 'Charlie');",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE name = 'Alice' AND (total_spending > 1000 OR email LIKE '%@example.com');",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name, total_spending FROM users WHERE name <> 'Alice';",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE total_spending > 500 ORDER BY total_spending DESC, name ASC;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT name, email FROM users WHERE total_spending > 1500 AND email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE users (\n        user_id UUID PRIMARY KEY,\n        name STRING,\n        email STRING,\n        total_spending DECIMAL\n)\n\n### STATEMENT\n\nSELECT * FROM users WHERE name = 'Alice' UNION SELECT * FROM users WHERE total_spending > 2000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT group_name FROM LoyaltyGroups WHERE points_required > 100;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_id, transaction_amount FROM UserTransactions WHERE transaction_amount > 50;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM Rewards WHERE points_required < 500;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_id, transaction_date FROM UserTransactions WHERE user_id = 123;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_id, reward_name FROM UserRewards JOIN Rewards ON UserRewards.reward_id = Rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE user_id = 456;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM UserRewards WHERE redeemed = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending BETWEEN 1000 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT group_name, points_required FROM LoyaltyGroups WHERE group_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) FROM UserTransactions WHERE user_id = 789 GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE user_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_id, transaction_amount FROM UserTransactions WHERE transaction_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_id, reward_name FROM UserRewards JOIN Rewards ON UserRewards.reward_id = Rewards.reward_id WHERE user_id = 789;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE user_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_id, SUM(transaction_amount) AS total_spent FROM UserTransactions GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending > (SELECT AVG(total_spending) FROM Users);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT group_name, COUNT(*) AS num_members FROM LoyaltyGroups JOIN Users ON LoyaltyGroups.group_id = Users.user_id GROUP BY group_name;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, transaction_amount, transaction_date FROM Users JOIN UserTransactions ON Users.user_id = UserTransactions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending, reward_name FROM Users JOIN UserRewards ON Users.user_id = UserRewards.user_id JOIN Rewards ON UserRewards.reward_id = Rewards.reward_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending, reward_name FROM Users INNER JOIN UserRewards USING(user_id) INNER JOIN Rewards USING(reward_id);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, SUM(transaction_amount) AS total_spent FROM Users JOIN UserTransactions ON Users.user_id = UserTransactions.user_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT group_name, AVG(total_spending) AS avg_spending FROM Users JOIN LoyaltyGroups JOIN UserRewards ON Users.user_id = UserRewards.user_id GROUP BY group_name;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, COUNT(transaction_id) AS transaction_count FROM Users JOIN UserTransactions ON Users.user_id = UserTransactions.user_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, SUM(points_required) AS total_points FROM Users JOIN UserRewards ON Users.user_id = UserRewards.user_id JOIN Rewards ON UserRewards.reward_id = Rewards.reward_id GROUP BY user_name;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, transaction_amount FROM Users JOIN UserTransactions ON Users.user_id = UserTransactions.user_id WHERE transaction_date BETWEEN '2022-01-01' AND '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE user_id IN (SELECT user_id FROM UserTransactions WHERE transaction_amount > 500);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE EXISTS (SELECT * FROM UserTransactions WHERE Users.user_id = UserTransactions.user_id);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE NOT EXISTS (SELECT * FROM UserTransactions WHERE Users.user_id = UserTransactions.user_id);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users ORDER BY total_spending DESC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending > (SELECT AVG(total_spending) FROM Users);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending = (SELECT MAX(total_spending) FROM Users);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE user_name LIKE '%John%';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, total_spending FROM Users WHERE total_spending NOT BETWEEN 1000 AND 5000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT AVG(total_spending) FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT SUM(transaction_amount) FROM UserTransactions;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT group_name, COUNT(*) AS loyalty_members FROM LoyaltyGroups LEFT JOIN Users ON LoyaltyGroups.group_id = Users.user_id GROUP BY group_name;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, points_required FROM Users JOIN UserRewards ON Users.user_id = UserRewards.user_id JOIN Rewards ON UserRewards.reward_id = Rewards.reward_id WHERE group_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, SUM(points_required) AS total_points FROM Users JOIN UserRewards ON Users.user_id = UserRewards.user_id JOIN Rewards ON UserRewards.reward_id = Rewards.reward_id GROUP BY user_name HAVING total_points > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n  user_id INT PRIMARY KEY,\n  user_name VARCHAR(50),\n  total_spending DECIMAL\n)\n\nCREATE TABLE LoyaltyGroups (\n  group_id INT PRIMARY KEY,\n  group_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserTransactions (\n  transaction_id INT PRIMARY KEY,\n  user_id INT,\n  transaction_amount DECIMAL,\n  transaction_date TIMESTAMP\n)\n\nCREATE TABLE Rewards (\n  reward_id INT PRIMARY KEY,\n  reward_name VARCHAR(50),\n  points_required INT\n)\n\nCREATE TABLE UserRewards (\n  user_reward_id INT PRIMARY KEY,\n  user_id INT,\n  reward_id INT,\n  redeemed BOOLEAN\n)\n\n### STATEMENT\n\nSELECT user_name, COUNT(reward_id) AS number_of_rewards FROM Users JOIN UserRewards ON Users.user_id = UserRewards.user_id GROUP BY user_name HAVING number_of_rewards >= 3;"
]