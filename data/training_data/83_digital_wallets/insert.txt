<t>CREATE TABLE digital_wallets(id INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2))</t><stat>INSERT INTO digital_wallets (id, user_id, balance) VALUES (1, 101, 100.00);</stat><divider><t>CREATE TABLE digital_wallets(id INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2))</t><stat>insert into digital_wallets (id, user_id, balance) values (1, 101, 100.00);</stat><divider><t>CREATE TABLE digital_wallets(id INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2))</t><stat>INSERT INTO digital_wallets (id, user_id, balance) VALUES (2, 102, 150.25);</stat><divider><t>CREATE TABLE digital_wallets(id INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2))</t><stat>insert into digital_wallets (id, user_id, balance) values (2, 102, 150.25);</stat><divider><t>CREATE TABLE digital_wallets(id INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2))</t><stat>INSERT INTO digital_wallets (id, user_id, balance) VALUES (3, 103, 75.50);</stat><divider><t>CREATE TABLE digital_wallets(id INT PRIMARY KEY, user_id INT, balance DECIMAL(10,2))</t><stat>insert into digital_wallets (id, user_id, balance) values (3, 103, 75.50);</stat><divider><t>CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);
</t><stat>INSERT INTO users (username, email) VALUES ('Alice', 'alice@example.com');</stat><divider><t>CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);
</t><stat>insert into users (username, email) values ('alice', 'alice@example.com');</stat><divider><t>CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);


CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO users (username, email) VALUES ('Alice', 'alice@example.com');</stat><divider><t>CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);


CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>insert into users (username, email) values ('alice', 'alice@example.com');</stat><divider><t>CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);
</t><stat>INSERT INTO users (username, email) VALUES ('Bob', 'bob@example.com');</stat><divider><t>CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);
</t><stat>insert into users (username, email) values ('bob', 'bob@example.com');</stat><divider><t>CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);


CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO users (username, email) VALUES ('Bob', 'bob@example.com');</stat><divider><t>CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);


CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>insert into users (username, email) values ('bob', 'bob@example.com');</stat><divider><t>CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);
</t><stat>INSERT INTO transactions (user_id, amount, transaction_date) VALUES (1, 100.50, '2022-01-01 08:00:00');</stat><divider><t>CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);


CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);
</t><stat>insert into transactions (user_id, amount, transaction_date) values (1, 100.50, '2022-01-01 08:00:00');</stat><divider><t>CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);


CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>INSERT INTO transactions (user_id, amount, transaction_date) VALUES (1, 100.50, '2022-01-01 08:00:00');</stat><divider><t>CREATE TABLE transactions (
    transaction_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    amount DECIMAL(10,2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL
);


CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE
);
</t><stat>insert into transactions (user_id, amount, transaction_date) values (1, 100.50, '2022-01-01 08:00:00');</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>INSERT INTO Users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>INSERT INTO Users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john_doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Transactions (transaction_id, user_id, amount) VALUES (1, 1, 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into transactions (transaction_id, user_id, amount) values (1, 1, 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Transactions (transaction_id, user_id, amount) VALUES (1, 1, 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into transactions (transaction_id, user_id, amount) values (1, 1, 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Transactions (transaction_id, user_id, amount) VALUES (1, 1, 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into transactions (transaction_id, user_id, amount) values (1, 1, 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>INSERT INTO Transactions (transaction_id, user_id, amount) VALUES (1, 1, 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>insert into transactions (transaction_id, user_id, amount) values (1, 1, 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Transactions (transaction_id, user_id, amount) VALUES (1, 1, 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into transactions (transaction_id, user_id, amount) values (1, 1, 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>INSERT INTO Transactions (transaction_id, user_id, amount) VALUES (1, 1, 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>insert into transactions (transaction_id, user_id, amount) values (1, 1, 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Wallets (wallet_id, user_id, wallet_type, balance) VALUES (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into wallets (wallet_id, user_id, wallet_type, balance) values (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Wallets (wallet_id, user_id, wallet_type, balance) VALUES (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into wallets (wallet_id, user_id, wallet_type, balance) values (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Wallets (wallet_id, user_id, wallet_type, balance) VALUES (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into wallets (wallet_id, user_id, wallet_type, balance) values (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>INSERT INTO Wallets (wallet_id, user_id, wallet_type, balance) VALUES (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>insert into wallets (wallet_id, user_id, wallet_type, balance) values (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>INSERT INTO Wallets (wallet_id, user_id, wallet_type, balance) VALUES (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB</t><stat>insert into wallets (wallet_id, user_id, wallet_type, balance) values (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>INSERT INTO Wallets (wallet_id, user_id, wallet_type, balance) VALUES (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE Wallets (wallet_id INT PRIMARY KEY, user_id INT, wallet_type VARCHAR(50) NOT NULL, balance DOUBLE PRECISION DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Transactions (transaction_id INT PRIMARY KEY, user_id INT, amount DOUBLE PRECISION NOT NULL, transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES Users(user_id)) ENGINE=InnoDB

CREATE TABLE Users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DOUBLE PRECISION DEFAULT 0.0) ENGINE=InnoDB</t><stat>insert into wallets (wallet_id, user_id, wallet_type, balance) values (1, 1, 'savings', 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into users (user_id, username, email, balance) values (1, 'john_doe', 'john.doe@example.com', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO wallets (wallet_id, user_id, wallet_name, balance) VALUES (1, 1, 'John Doe Wallet', 1000.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into wallets (wallet_id, user_id, wallet_name, balance) values (1, 1, 'john doe wallet', 1000.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>INSERT INTO transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) VALUES (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE currencies (currency_id INT PRIMARY KEY, currency_name VARCHAR(50) NOT NULL, exchange_rate DECIMAL(10,2) NOT NULL)

CREATE TABLE transactions (transaction_id INT PRIMARY KEY, sender_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, receiver_wallet_id INT REFERENCES wallets(wallet_id) ON DELETE CASCADE, amount DECIMAL(10,2) NOT NULL, transaction_date TIMESTAMP DEFAULT NOW())

CREATE TABLE wallets (wallet_id INT PRIMARY KEY, user_id INT REFERENCES users(user_id) ON DELETE CASCADE, wallet_name VARCHAR(50) NOT NULL, balance DECIMAL(10,2) DEFAULT 0.00)

CREATE TABLE users (user_id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) UNIQUE, balance DECIMAL(10,2) DEFAULT 0.00)</t><stat>insert into transactions (transaction_id, sender_wallet_id, receiver_wallet_id, amount) values (1, 1, 2, 500.00)</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO users (user_id, username, email, balance) VALUES ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into users (user_id, username, email, balance) values ('11111111-1111-1111-1111-111111111111', 'john_doe', 'john@example.com', 1000.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO transactions (transaction_id, sender_id, receiver_id, amount, timestamp) VALUES ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into transactions (transaction_id, sender_id, receiver_id, amount, timestamp) values ('22222222-2222-2222-2222-222222222222', '11111111-1111-1111-1111-111111111111', '33333333-3333-3333-3333-333333333333', 500.00, now());</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>INSERT INTO wallets (wallet_id, user_id, balance) VALUES ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat><divider><t>CREATE TABLE payments ( payment_id UUID PRIMARY KEY, transaction_id UUID NOT NULL, card_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (transaction_id) REFERENCES transactions(transaction_id), FOREIGN KEY (card_id) REFERENCES cards(card_id) );

CREATE TABLE cards ( card_id UUID PRIMARY KEY, user_id UUID NOT NULL, card_number STRING NOT NULL, expiry_date DATE NOT NULL, cvv INTEGER NOT NULL, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE wallets ( wallet_id UUID PRIMARY KEY, user_id UUID NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(user_id) );

CREATE TABLE transactions ( transaction_id UUID PRIMARY KEY, sender_id UUID NOT NULL, receiver_id UUID NOT NULL, amount DECIMAL NOT NULL, timestamp TIMESTAMP NOT NULL DEFAULT now(), FOREIGN KEY (sender_id) REFERENCES users(user_id), FOREIGN KEY (receiver_id) REFERENCES users(user_id) );

CREATE TABLE users ( user_id UUID PRIMARY KEY, username STRING NOT NULL, email STRING NOT NULL, balance DECIMAL NOT NULL DEFAULT 0.0 );</t><stat>insert into wallets (wallet_id, user_id, balance) values ('33333333-3333-3333-3333-333333333333', '11111111-1111-1111-1111-111111111111', 500.00);</stat>