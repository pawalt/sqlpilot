[
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, username, phone_number FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, password_hash FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE email = 'user@example.com'",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE phone_number IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification ORDER BY email DESC",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, phone_number FROM UserIdentityVerification WHERE phone_number LIKE '555%'",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, verification_code FROM UserIdentityVerification WHERE verification_code = '123456'",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT AVG(LENGTH(username)) AS avg_username_length FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT DISTINCT email FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MIN(LENGTH(password_hash)) AS min_password_length FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE username LIKE 'admin%' AND password_hash = 'password123'",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email FROM UserIdentityVerification WHERE phone_number IS NULL",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, username, verification_code FROM UserIdentityVerification WHERE verification_code <> '654321'",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT email) FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE email IN ('user1@example.net', 'user2@example.com')",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT MAX(LENGTH(password_hash)) AS max_password_length FROM UserIdentityVerification",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username FROM UserIdentityVerification WHERE email LIKE '%@gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, phone_number FROM UserIdentityVerification WHERE verification_code = '123456';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, password_hash FROM UserIdentityVerification WHERE email = 'example@example.com';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE phone_number IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, verification_code FROM UserIdentityVerification WHERE username LIKE '%smith%';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE email LIKE '%@gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, username FROM UserIdentityVerification WHERE phone_number LIKE '123%';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, phone_number FROM UserIdentityVerification WHERE password_hash = 'abcdef';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE phone_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, username, verification_code FROM UserIdentityVerification WHERE username = 'jane_doe';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT username, phone_number FROM UserIdentityVerification WHERE email LIKE 'test%';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE verification_code = '654321';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, phone_number FROM UserIdentityVerification WHERE username = 'admin';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE phone_number LIKE '555%';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, username, verification_code FROM UserIdentityVerification WHERE phone_number IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE username LIKE '%_test%';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, password_hash FROM UserIdentityVerification WHERE verification_code = '999999';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE email IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT email, username, phone_number FROM UserIdentityVerification WHERE password_hash = 'password123';",
  "### TABLEDATA\n\nCREATE TABLE UserIdentityVerification (\n\temail VARCHAR(255) PRIMARY KEY,\n\tusername VARCHAR(50) NOT NULL,\n\tpassword_hash VARCHAR(255) NOT NULL,\n\tphone_number VARCHAR(15),\n\tverification_code VARCHAR(6) NOT NULL\n)\n\n### STATEMENT\n\nSELECT * FROM UserIdentityVerification WHERE verification_code IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Users",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Users",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM UserVerification",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, verification_code FROM UserVerification WHERE verified = FALSE",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE username LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, verification_code FROM UserVerification WHERE user_id = 10",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE user_id IN (1, 2, 3)",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE username = 'john_doe'",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Users WHERE email LIKE '%@example.com'",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE username = 'admin' AND password = 'admin123'",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, verification_code FROM UserVerification WHERE user_id = 5 AND verified = TRUE",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT MAX(user_id) FROM Users",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT MIN(user_id) FROM Users",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users ORDER BY user_id ASC",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users ORDER BY username DESC",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM Users",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT AVG(user_id) FROM Users",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM Users WHERE email IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM Users WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT username, email FROM Users WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email, verified FROM Users JOIN UserVerification ON Users.user_id = UserVerification.user_id;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM Users WHERE user_id IN (SELECT user_id FROM UserVerification WHERE verified = TRUE);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM Users WHERE username LIKE '%john%' AND email LIKE '%example.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, verification_code FROM Users JOIN UserVerification ON Users.user_id = UserVerification.user_id WHERE verified = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, password FROM Users WHERE NOT EXISTS (SELECT * FROM UserVerification WHERE Users.user_id = UserVerification.user_id);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT * FROM UserVerification WHERE user_id = (SELECT MAX(user_id) FROM Users);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE user_id BETWEEN 100 AND 200;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM Users WHERE email LIKE '%yahoo.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE username = 'admin' AND password = 'admin123';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, verification_code FROM UserVerification ORDER BY verification_id DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users ORDER BY username ASC;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, password FROM Users WHERE email NOT LIKE '%hotmail.com';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE user_id = (SELECT user_id FROM UserVerification WHERE verification_id = 1);",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT AVG(user_id) AS avg_user_id FROM Users;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM Users WHERE LENGTH(password) > 8;",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE username LIKE '%user%' OR email LIKE '%user%';",
  "### TABLEDATA\n\nCREATE TABLE Users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\n\nCREATE TABLE UserVerification (\n    verification_id INT PRIMARY KEY,\n    user_id INT,\n    verification_code VARCHAR(20) NOT NULL,\n    verified BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES Users(user_id)\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM Users WHERE username = 'john' AND email = 'john@example.com';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT id, username, email FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserActivities;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT activity_name, activity_date FROM UserActivities;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT id, activity_name, activity_date FROM UserActivities;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserAuthentications;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT login_time, logout_time FROM UserAuthentications;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT user_id, login_time, logout_time FROM UserAuthentications;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT ui.username, ua.activity_name, ua.activity_date FROM UserInformation ui JOIN UserActivities ua ON ui.id = ua.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT ua.activity_name, ua.activity_date, ua.user_id, ua.activity_id FROM UserActivities ua JOIN UserAuthentications uauth ON ua.user_id = uauth.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT ui.username, ua.activity_name, uauth.login_time FROM UserInformation ui JOIN UserActivities ua ON ui.id = ua.user_id JOIN UserAuthentications uauth ON ui.id = uauth.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT ui.username, ui.email, ua.activity_name, uauth.login_time FROM UserInformation ui JOIN UserActivities ua ON ui.id = ua.user_id JOIN UserAuthentications uauth ON ui.id = uauth.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT ui.username, ua.activity_name, uauth.login_time, uauth.logout_time FROM UserInformation ui JOIN UserActivities ua ON ui.id = ua.user_id JOIN UserAuthentications uauth ON ui.id = uauth.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT MAX(id) FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT MIN(id) FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT AVG(id) FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT SUM(id) FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT DISTINCT email FROM UserInformation;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT ui.username, ua.activity_name, uauth.login_time, COUNT(*) FROM UserInformation ui JOIN UserActivities ua ON ui.id = ua.user_id JOIN UserAuthentications uauth ON ui.id = uauth.user_id GROUP BY ui.username, ua.activity_name, uauth.login_time ORDER BY COUNT(*) DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserInformation WHERE id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT id, username, email FROM UserInformation WHERE username LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserInformation WHERE email = 'john.doe@example.com';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserActivities WHERE user_id = 1 AND activity_date > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_activities FROM UserActivities WHERE user_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, UserActivities.activity_name FROM UserInformation INNER JOIN UserActivities ON UserInformation.id = UserActivities.user_id;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, COUNT(UserActivities.activity_id) AS total_activities FROM UserInformation LEFT JOIN UserActivities ON UserInformation.id = UserActivities.user_id GROUP BY UserInformation.username;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserInformation WHERE id IN (SELECT user_id FROM UserActivities WHERE activity_date > '2022-01-01');",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserInformation WHERE id NOT IN (SELECT user_id FROM UserActivities);",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, COUNT(UserActivities.activity_id) AS total_activities FROM UserInformation JOIN UserActivities ON UserInformation.id = UserActivities.user_id GROUP BY UserInformation.username HAVING total_activities > 5;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserAuthentications WHERE user_id = 1 AND login_time BETWEEN '2022-01-01' AND '2022-02-01';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserInformation WHERE id = (SELECT user_id FROM UserAuthentications WHERE login_time BETWEEN '2022-01-01' AND '2022-02-01');",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, COUNT(UserActivities.activity_id) AS total_activities FROM UserInformation JOIN UserActivities ON UserInformation.id = UserActivities.user_id WHERE UserActivities.activity_date BETWEEN '2022-01-01' AND '2022-02-01' GROUP BY UserInformation.username;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, COUNT(UserActivities.activity_id) AS total_activities FROM UserInformation JOIN UserActivities ON UserInformation.id = UserActivities.user_id WHERE UserInformation.id BETWEEN 1 AND 10 GROUP BY UserInformation.username;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserActivities WHERE activity_date > '2022-01-01' ORDER BY activity_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserActivities WHERE activity_name LIKE '%running%';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, UserActivities.activity_name, UserActivities.activity_date FROM UserInformation INNER JOIN UserActivities ON UserInformation.id = UserActivities.user_id WHERE UserInformation.username = 'alice' AND UserActivities.activity_name = 'jogging';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, UserActivities.activity_name, UserActivities.activity_date FROM UserInformation INNER JOIN UserActivities ON UserInformation.id = UserActivities.user_id WHERE UserInformation.username = 'bob' AND UserActivities.activity_name = 'swimming';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT UserInformation.username, UserActivities.activity_name, UserActivities.activity_date FROM UserInformation INNER JOIN UserActivities ON UserInformation.id = UserActivities.user_id WHERE UserInformation.username = 'carol' AND UserActivities.activity_name = 'cycling';",
  "### TABLEDATA\n\nCREATE TABLE UserInformation (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, phone_number VARCHAR(15) NOT NULL);\n\n\nCREATE TABLE UserActivities (activity_id INT PRIMARY KEY, user_id INT, activity_name VARCHAR(100) NOT NULL, activity_date TIMESTAMP NOT NULL);\n\n\nCREATE TABLE UserAuthentications (auth_id INT PRIMARY KEY, user_id INT, login_time TIMESTAMP NOT NULL, logout_time TIMESTAMP);\n\n### STATEMENT\n\nSELECT * FROM UserAuthentications WHERE user_id = 1 AND logout_time IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_accounts WHERE created_at > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_id, full_name, date_of_birth FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_devices WHERE last_login < '2022-03-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT log_id, log_message FROM user_logs WHERE log_timestamp > '2022-04-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE username LIKE 'admin%';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT device_name FROM user_devices WHERE user_id = '123e4567-e89b-12d3-a456-426614174000';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM user_accounts WHERE created_at >= '2022-01-01' AND username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT full_name, phone_number FROM user_profiles WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_logs WHERE log_message ILIKE '%error%';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts ORDER BY created_at DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT COUNT(user_id) FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT MAX(date_of_birth) FROM user_profiles WHERE gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT DISTINCT gender FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT device_name FROM user_devices WHERE user_id IN (SELECT user_id FROM user_accounts WHERE username = 'bob_smith');",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_accounts.*, user_profiles.full_name FROM user_accounts INNER JOIN user_profiles ON user_accounts.user_id = user_profiles.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_id, COUNT(*) AS login_count FROM user_logs GROUP BY user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT AVG(CHAR_LENGTH(password_hash)) FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_id, TIMESTAMPDIFF(SECOND, created_at, NOW()) AS account_age_seconds FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_id, SUM(CHAR_LENGTH(log_message)) AS total_chars FROM user_logs GROUP BY user_id HAVING total_chars > 1000;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_devices WHERE device_name LIKE 'phone%';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM user_accounts WHERE email LIKE '%gmail.com';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT DISTINCT username FROM user_accounts ORDER BY created_at DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) AS login_count FROM user_accounts JOIN user_devices ON user_accounts.user_id = user_devices.user_id GROUP BY username HAVING login_count > 5;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_accounts.username, user_devices.device_name FROM user_accounts JOIN user_devices ON user_accounts.user_id = user_devices.user_id WHERE user_accounts.username = 'john_doe';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT full_name, date_of_birth FROM user_profiles WHERE gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, email, phone_number FROM user_accounts INNER JOIN user_profiles ON user_accounts.user_id = user_profiles.user_id WHERE user_profiles.date_of_birth > '1990-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE created_at >= '2021-01-01' AND created_at < '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT AVG(DATE_PART('year', AGE(date_of_birth))) AS avg_age FROM user_profiles;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT device_name, MAX(last_login) AS latest_login FROM user_devices GROUP BY device_name ORDER BY latest_login DESC;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_accounts.username FROM user_accounts LEFT JOIN user_devices ON user_accounts.user_id = user_devices.user_id WHERE user_devices.user_id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, log_message, log_timestamp FROM user_accounts INNER JOIN user_logs ON user_accounts.user_id = user_logs.user_id WHERE log_timestamp >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_accounts.username, user_profiles.phone_number FROM user_accounts LEFT JOIN user_profiles ON user_accounts.user_id = user_profiles.user_id;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_accounts WHERE username IN ('alice', 'bob', 'charlie');",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users, COUNT(DISTINCT user_id) AS unique_users FROM user_accounts;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, email FROM user_accounts WHERE email LIKE '%@domain.com';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) AS total_logs FROM user_accounts LEFT JOIN user_logs ON user_accounts.user_id = user_logs.user_id GROUP BY username;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT * FROM user_profiles WHERE date_of_birth BETWEEN '1990-01-01' AND '2000-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT user_accounts.username, COUNT(*) AS total_logs FROM user_accounts INNER JOIN user_logs ON user_accounts.user_id = user_logs.user_id GROUP BY user_accounts.username HAVING total_logs > 10;",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT DISTINCT user_devices.device_name FROM user_devices JOIN user_accounts ON user_devices.user_id = user_accounts.user_id WHERE user_accounts.created_at >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE user_accounts (\n    user_id UUID PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password_hash VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    created_at TIMESTAMP DEFAULT now()\n);\n\n\nCREATE TABLE user_profiles (\n    user_id UUID PRIMARY KEY,\n    full_name VARCHAR(100) NOT NULL,\n    phone_number VARCHAR(15),\n    date_of_birth DATE,\n    gender ENUM('Male', 'Female', 'Other')\n);\n\n\nCREATE TABLE user_devices (\n    device_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    device_name VARCHAR(50) NOT NULL,\n    last_login TIMESTAMP\n);\n\n\nCREATE TABLE user_logs (\n    log_id UUID PRIMARY KEY,\n    user_id UUID REFERENCES user_accounts(user_id),\n    log_message TEXT,\n    log_timestamp TIMESTAMP DEFAULT now()\n);\n\n### STATEMENT\n\nSELECT username, COUNT(*) AS device_count FROM user_accounts LEFT JOIN user_devices ON user_accounts.user_id = user_devices.user_id GROUP BY username HAVING device_count < 3;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, username FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, email FROM users;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, full_name FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, birthday FROM user_profile;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_identification;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, photo_id FROM user_identification;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, social_security_number FROM user_identification;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_devices;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, device_type FROM user_devices;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT device_id, last_login FROM user_devices;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT session_id, user_id FROM user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT session_id, login_time FROM user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, login_time, logout_time FROM user_sessions;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT users.user_id, users.username, user_devices.device_type FROM users INNER JOIN user_devices ON users.user_id = user_devices.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT users.username, user_profile.full_name, user_identification.photo_id FROM users INNER JOIN user_profile ON users.user_id = user_profile.user_id INNER JOIN user_identification ON users.user_id = user_identification.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT users.username, user_sessions.login_time, user_sessions.logout_time FROM users INNER JOIN user_sessions ON users.user_id = user_sessions.user_id;",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, username, email FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, full_name, birthday, phone_number FROM user_profile",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, photo_id, social_security_number FROM user_identification",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users JOIN user_profile ON users.user_id = user_profile.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_devices WHERE device_type = 'Mobile'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, login_time, logout_time FROM user_sessions WHERE user_id = 1",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, up.full_name, us.login_time FROM users u JOIN user_profile up ON u.user_id = up.user_id JOIN user_sessions us ON u.user_id = us.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, username, password, email FROM users WHERE username LIKE 'A%'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, ui.photo_id, ud.device_type FROM users u JOIN user_identification ui ON u.user_id = ui.user_id JOIN user_devices ud ON u.user_id = ud.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, ud.device_type, us.logout_time FROM users u JOIN user_devices ud ON u.user_id = ud.user_id JOIN user_sessions us ON u.user_id = us.user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users ORDER BY username ASC",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM user_profile WHERE birthday BETWEEN '1990-01-0' AND '1995-12-31'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, up.full_name, us.login_time FROM users u JOIN user_profile up ON u.user_id = up.user_id JOIN user_sessions us ON u.user_id = us.user_id WHERE us.logout_time IS NULL",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_users FROM users",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT device_type FROM user_devices",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT username, CONCAT('(', phone_number, ')') AS formatted_phone FROM user_profile WHERE phone_number IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT u.username, ui.social_security_number, us.login_time FROM users u JOIN user_identification ui ON u.user_id = ui.user_id JOIN user_sessions us ON u.user_id = us.user_id WHERE u.username = 'John_Doe'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT user_id, MAX(birthday) FROM user_profile GROUP BY user_id",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(DATEDIFF(logout_time, login_time)) AS avg_session_duration FROM user_sessions",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM users WHERE email LIKE '%gmail.com'",
  "### TABLEDATA\n\nCREATE TABLE users (\n    user_id INT PRIMARY KEY,\n    username VARCHAR(255) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    email VARCHAR(255) NOT NULL\n);\n\nCREATE TABLE user_profile (\n    user_id INT PRIMARY KEY,\n    full_name VARCHAR(255) NOT NULL,\n    birthday DATE,\n    phone_number VARCHAR(20)\n);\n\nCREATE TABLE user_identification (\n    user_id INT PRIMARY KEY,\n    photo_id VARCHAR(255) NOT NULL,\n    social_security_number VARCHAR(20) NOT NULL,\n    driver_license_number VARCHAR(20)\n);\n\nCREATE TABLE user_devices (\n    device_id INT PRIMARY KEY,\n    user_id INT,\n    device_type VARCHAR(100) NOT NULL,\n    last_login TIMESTAMP\n);\n\nCREATE TABLE user_sessions (\n    session_id INT PRIMARY KEY,\n    user_id INT,\n    login_time TIMESTAMP,\n    logout_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT DATE(login_time) FROM user_sessions"
]