<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><s>UPSERT INTO transportation (id, vehicle_name, capacity, route) VALUES (1, 'car', 4, 'A to B')</s>
<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><s>upsert into transportation (id, vehicle_name, capacity, route) values (1, 'car', 4, 'a to b')</s>
<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><s>UPSERT INTO transportation (id, vehicle_name, capacity, route) VALUES (2, 'bike', 1, 'X to Y')</s>
<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><s>upsert into transportation (id, vehicle_name, capacity, route) values (2, 'bike', 1, 'x to y')</s>
<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><s>UPSERT INTO transportation (id, vehicle_name, capacity, route) VALUES (3, 'bus', 30, 'City Loop')</s>
<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><s>upsert into transportation (id, vehicle_name, capacity, route) values (3, 'bus', 30, 'city loop')</s>
<t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><s>UPSERT INTO vehicles (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Car', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><s>upsert into vehicles (vehicle_id, vehicle_type, manufacturer, year) values (1, 'car', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><s>UPSERT INTO vehicles (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Car', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><s>upsert into vehicles (vehicle_id, vehicle_type, manufacturer, year) values (1, 'car', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><s>UPSERT INTO vehicles (vehicle_id, vehicle_type, manufacturer, year) VALUES (2, 'Truck', 'Ford', 2021) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><s>upsert into vehicles (vehicle_id, vehicle_type, manufacturer, year) values (2, 'truck', 'ford', 2021) on conflict (vehicle_id) do update set vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><s>UPSERT INTO vehicles (vehicle_id, vehicle_type, manufacturer, year) VALUES (2, 'Truck', 'Ford', 2021) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><s>upsert into vehicles (vehicle_id, vehicle_type, manufacturer, year) values (2, 'truck', 'ford', 2021) on conflict (vehicle_id) do update set vehicle_type = excluded.vehicle_type, manufacturer = excluded.manufacturer, year = excluded.year;</s>
<t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><s>UPSERT INTO routes (route_id, route_name, start_location, end_location) VALUES (1, 'Route 1', 'City A', 'City B') ON CONFLICT (route_id) DO UPDATE SET route_name = excluded.route_name, start_location = excluded.start_location, end_location = excluded.end_location;</s>
<t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><s>upsert into routes (route_id, route_name, start_location, end_location) values (1, 'route 1', 'city a', 'city b') on conflict (route_id) do update set route_name = excluded.route_name, start_location = excluded.start_location, end_location = excluded.end_location;</s>
<t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><s>UPSERT INTO routes (route_id, route_name, start_location, end_location) VALUES (1, 'Route 1', 'City A', 'City B') ON CONFLICT (route_id) DO UPDATE SET route_name = excluded.route_name, start_location = excluded.start_location, end_location = excluded.end_location;</s>
<t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><s>upsert into routes (route_id, route_name, start_location, end_location) values (1, 'route 1', 'city a', 'city b') on conflict (route_id) do update set route_name = excluded.route_name, start_location = excluded.start_location, end_location = excluded.end_location;</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>UPSERT INTO vehicles (id, name, type) VALUES (1, 'Car', 'Sedan')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>upsert into vehicles (id, name, type) values (1, 'car', 'sedan')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (id, name, type) VALUES (1, 'Car', 'Sedan')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>upsert into vehicles (id, name, type) values (1, 'car', 'sedan')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>UPSERT INTO vehicles (id, name, type) VALUES (1, 'Car', 'Sedan')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>upsert into vehicles (id, name, type) values (1, 'car', 'sedan')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>UPSERT INTO vehicles (id, name, type) VALUES (1, 'Car', 'Sedan')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>upsert into vehicles (id, name, type) values (1, 'car', 'sedan')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (id, name, type) VALUES (1, 'Car', 'Sedan')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>upsert into vehicles (id, name, type) values (1, 'car', 'sedan')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>UPSERT INTO vehicles (id, name, type) VALUES (1, 'Car', 'Sedan')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>upsert into vehicles (id, name, type) values (1, 'car', 'sedan')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>UPSERT INTO drivers (id, name, license_number) VALUES (1, 'John Doe', '12345')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>upsert into drivers (id, name, license_number) values (1, 'john doe', '12345')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>UPSERT INTO drivers (id, name, license_number) VALUES (1, 'John Doe', '12345')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>upsert into drivers (id, name, license_number) values (1, 'john doe', '12345')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>UPSERT INTO drivers (id, name, license_number) VALUES (1, 'John Doe', '12345')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>upsert into drivers (id, name, license_number) values (1, 'john doe', '12345')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>UPSERT INTO drivers (id, name, license_number) VALUES (1, 'John Doe', '12345')</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>upsert into drivers (id, name, license_number) values (1, 'john doe', '12345')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>UPSERT INTO drivers (id, name, license_number) VALUES (1, 'John Doe', '12345')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>upsert into drivers (id, name, license_number) values (1, 'john doe', '12345')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>UPSERT INTO drivers (id, name, license_number) VALUES (1, 'John Doe', '12345')</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>upsert into drivers (id, name, license_number) values (1, 'john doe', '12345')</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>UPSERT INTO routes (id, start_location, end_location, distance) VALUES (1, 'City A', 'City B', 100.5)</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>upsert into routes (id, start_location, end_location, distance) values (1, 'city a', 'city b', 100.5)</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>UPSERT INTO routes (id, start_location, end_location, distance) VALUES (1, 'City A', 'City B', 100.5)</s>
<t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>upsert into routes (id, start_location, end_location, distance) values (1, 'city a', 'city b', 100.5)</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>UPSERT INTO routes (id, start_location, end_location, distance) VALUES (1, 'City A', 'City B', 100.5)</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><s>upsert into routes (id, start_location, end_location, distance) values (1, 'city a', 'city b', 100.5)</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>UPSERT INTO routes (id, start_location, end_location, distance) VALUES (1, 'City A', 'City B', 100.5)</s>
<t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>upsert into routes (id, start_location, end_location, distance) values (1, 'city a', 'city b', 100.5)</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>UPSERT INTO routes (id, start_location, end_location, distance) VALUES (1, 'City A', 'City B', 100.5)</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><s>upsert into routes (id, start_location, end_location, distance) values (1, 'city a', 'city b', 100.5)</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>UPSERT INTO routes (id, start_location, end_location, distance) VALUES (1, 'City A', 'City B', 100.5)</s>
<t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><s>upsert into routes (id, start_location, end_location, distance) values (1, 'city a', 'city b', 100.5)</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Vehicle (vehicle_id, vehicle_type, manufacturer, year) VALUES (1, 'Sedan', 'Toyota', 2022) ON CONFLICT (vehicle_id) DO UPDATE SET vehicle_type = 'SUV', year = 2023</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into vehicle (vehicle_id, vehicle_type, manufacturer, year) values (1, 'sedan', 'toyota', 2022) on conflict (vehicle_id) do update set vehicle_type = 'suv', year = 2023</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Driver (driver_id, driver_name, license_number) VALUES (1, 'John Doe', '123456') ON CONFLICT (driver_id) DO UPDATE SET driver_name = 'Jane Doe', license_number = '654321'</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into driver (driver_id, driver_name, license_number) values (1, 'john doe', '123456') on conflict (driver_id) do update set driver_name = 'jane doe', license_number = '654321'</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>INSERT INTO Route (route_id, route_name) VALUES (1, 'City Route') ON CONFLICT (route_id) DO NOTHING</s>
<t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><s>insert into route (route_id, route_name) values (1, 'city route') on conflict (route_id) do nothing</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO vehicles (vehicle_id, make, model, year) VALUES (1, 'Toyota', 'Camry', 2015) ON CONFLICT (vehicle_id) DO UPDATE SET make = 'Toyota', model = 'Camry', year = 2015</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into vehicles (vehicle_id, make, model, year) values (1, 'toyota', 'camry', 2015) on conflict (vehicle_id) do update set make = 'toyota', model = 'camry', year = 2015</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO drivers (driver_id, name, age, license_number) VALUES (1, 'John Doe', 30, 'DL1234') ON CONFLICT (driver_id) DO UPDATE SET name = 'John Doe', age = 30, license_number = 'DL1234'</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into drivers (driver_id, name, age, license_number) values (1, 'john doe', 30, 'dl1234') on conflict (driver_id) do update set name = 'john doe', age = 30, license_number = 'dl1234'</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>UPSERT INTO trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) VALUES (1, 'City A', 'City B', 50.5, '2 hours', 1, 1) ON CONFLICT (trip_id) DO UPDATE SET start_location = 'City A', end_location = 'City B', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
<t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><s>upsert into trips (trip_id, start_location, end_location, distance, time_duration, vehicle_id, driver_id) values (1, 'city a', 'city b', 50.5, '2 hours', 1, 1) on conflict (trip_id) do update set start_location = 'city a', end_location = 'city b', distance = 50.5, time_duration = '2 hours', vehicle_id = 1, driver_id = 1</s>
