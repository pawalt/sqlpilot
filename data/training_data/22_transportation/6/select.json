[
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE route_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location = 'City A';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT route_id, start_location FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT end_location, estimated_time FROM routes WHERE distance < 50;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(distance) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT MAX(estimated_time) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT MIN(distance) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes ORDER BY distance DESC;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT start_location, end_location, distance FROM routes WHERE distance BETWEEN 50 AND 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location LIKE 'City%';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE estimated_time = 2.5;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT route_id, start_location, end_location, distance, estimated_time FROM routes WHERE route_id > 5;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(distance), MAX(distance), MIN(distance) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT start_location FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE end_location = 'City B' OR end_location = 'City C';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location = 'City A' AND end_location = 'City B';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT route_id, start_location, end_location, distance, estimated_time FROM routes WHERE distance < 75;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance > 100 AND estimated_time < 5",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT start_location, end_location FROM routes WHERE distance < 50",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT route_id, start_location, end_location FROM routes WHERE distance BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(distance) AS avg_distance FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT MIN(distance) AS min_distance, MAX(distance) AS max_distance FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_routes FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance > 50 ORDER BY estimated_time",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE end_location = 'New York'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location LIKE '%City%'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location = 'City A' AND end_location = 'City B'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT start_location, end_location, distance*2 AS double_distance FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT route_id, CONCAT(start_location, ' to ', end_location) AS route_description FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location = 'City A' OR end_location = 'City B'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance > 75 AND (start_location = 'City A' OR end_location = 'City B')",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT route_id, end_location, estimated_time FROM routes WHERE distance > 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT DISTINCT start_location FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT start_location, COUNT(*) AS num_routes FROM routes GROUP BY start_location",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT AVG(estimated_time) AS avg_time FROM routes WHERE distance < 50",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  start_location VARCHAR(255),\n  end_location VARCHAR(255),\n  distance FLOAT,\n  estimated_time FLOAT\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE start_location <> end_location",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination FROM routes WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT schedule_id, route_id, departure_time FROM schedules WHERE arrival_time > CURRENT_TIMESTAMP;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT origin, destination FROM routes WHERE distance BETWEEN 200 AND 500;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, departure_time, arrival_time FROM schedules WHERE departure_time > '2022-09-01';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(distance), MIN(distance), AVG(distance) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes ORDER BY distance DESC;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT origin, destination FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, COUNT(*) AS num_schedules FROM schedules GROUP BY route_id HAVING num_schedules > 3;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes WHERE origin = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes WHERE destination LIKE '%Florida%';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes WHERE origin != destination;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes WHERE distance = (SELECT MAX(distance) FROM routes);",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes INNER JOIN schedules ON routes.route_id = schedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes LEFT JOIN schedules ON routes.route_id = schedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes RIGHT JOIN schedules ON routes.route_id = schedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes FULL JOIN schedules ON routes.route_id = schedules.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance > 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT origin, destination FROM routes WHERE origin = 'New York' AND destination = 'Los Angeles'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT schedule_id, departure_time, arrival_time FROM schedules WHERE route_id = 1",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes JOIN schedules ON routes.route_id = schedules.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT routes.route_id, schedules.departure_time FROM routes LEFT JOIN schedules ON routes.route_id = schedules.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(distance) AS average_distance FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT DISTINCT origin FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS route_count FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes ORDER BY distance DESC",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE origin LIKE 'M%'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT schedule_id, origin, destination, departure_time, arrival_time FROM routes JOIN schedules ON routes.route_id = schedules.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance BETWEEN 50 AND 200",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(distance) AS average_distance FROM routes GROUP BY origin",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, COUNT(*) AS schedule_count FROM schedules GROUP BY route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(distance) AS max_distance FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(distance) AS average_distance, MAX(distance) AS max_distance FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, COUNT(*) AS schedule_count FROM schedules GROUP BY route_id HAVING COUNT(*) > 2",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE origin IN ('New York', 'Chicago', 'Miami')",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance INT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE SUBSTR(origin, 1, 1) = SUBSTR(destination, 1, 1)",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE max_capacity > 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT schedule_id, route_id, vehicle_id FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, departure_time, arrival_time FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT origin, destination, distance FROM routes WHERE distance > 500;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT vehicle_type, max_capacity, current_load FROM vehicles WHERE current_load < max_capacity;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE origin = 'New York';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE vehicle_type = 'Bus';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE departure_time >= NOW();",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes ORDER BY distance DESC;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type, max_capacity FROM vehicles ORDER BY max_capacity ASC;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT schedule_id, route_id, vehicle_id, departure_time FROM schedules ORDER BY departure_time;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type, max_capacity FROM vehicles LIMIT 3;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT schedule_id, route_id, vehicle_id, departure_time FROM schedules LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT AVG(distance) FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MAX(max_capacity) FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT MIN(departure_time) FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance > 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT origin, destination FROM routes WHERE distance < 50",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE max_capacity > 500",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles WHERE current_load < max_capacity * 0.7",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE departure_time > NOW()",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, vehicle_id, arrival_time FROM schedules WHERE arrival_time < NOW()",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT r.origin, v.current_load FROM routes r JOIN vehicles v ON r.route_id = v.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, v.max_capacity FROM routes JOIN vehicles v ON routes.route_id = v.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE origin LIKE 'New%'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE vehicle_type IN ('Car', 'Truck')",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE route_id IN (SELECT route_id FROM routes WHERE distance > 200)",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE vehicle_id IN (SELECT vehicle_id FROM vehicles WHERE max_capacity > 1000)",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT r.origin, v.vehicle_type, s.departure_time FROM routes r JOIN vehicles v ON r.route_id = v.vehicle_id JOIN schedules s ON r.route_id = s.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, v.max_capacity, s.arrival_time FROM routes JOIN vehicles v ON routes.route_id = v.vehicle_id JOIN schedules s ON routes.route_id = s.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance BETWEEN 100 AND 200",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE current_load > 0.8 * max_capacity",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT r.origin, v.vehicle_type, s.departure_time FROM routes r, vehicles v, schedules s WHERE r.route_id = v.vehicle_id AND r.route_id = s.route_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination, v.max_capacity FROM routes, vehicles v WHERE routes.route_id = v.vehicle_id",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE departure_time > '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50),\n  destination VARCHAR(50),\n  distance FLOAT\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50),\n  max_capacity FLOAT,\n  current_load FLOAT\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT,\n  vehicle_id INT,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE arrival_time < '2022-12-31'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT schedule_id, departure_time, arrival_time FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT driver_id, driver_name, license_type FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM routes WHERE route_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE vehicle_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE schedule_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drivers WHERE driver_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT route_id, origin, destination FROM routes WHERE distance_km > 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles WHERE capacity_kg >= 1000;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT schedule_id, departure_time, arrival_time FROM schedules WHERE departure_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT driver_id, driver_name, license_type FROM drivers WHERE license_type = 'CDL';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT r.origin, r.destination, s.departure_time, s.arrival_time FROM routes r JOIN schedules s ON r.route_id = s.route_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT v.vehicle_type, s.departure_time, s.arrival_time, d.driver_name FROM vehicles v JOIN schedules s ON v.vehicle_id = s.vehicle_id JOIN drivers d ON s.schedule_id = d.schedule_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT r.origin, r.destination, v.vehicle_type, d.driver_name FROM routes r JOIN schedules s ON r.route_id = s.route_id JOIN vehicles v ON s.vehicle_id = v.vehicle_id JOIN drivers d ON s.schedule_id = d.schedule_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT rt.route_id, rt.origin, rt.destination, rt.distance_km, vh.vehicle_type, vh.capacity_kg, vh.max_speed_kmh, sch.departure_time, sch.arrival_time, drv.driver_name, drv.license_type FROM routes rt JOIN schedules sch ON rt.route_id = sch.route_id JOIN vehicles vh ON sch.vehicle_id = vh.vehicle_id JOIN drivers drv ON sch.schedule_id = drv.schedule_id WHERE rt.distance_km > 100 AND vh.max_speed_kmh > 80",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT rt.route_id, rt.origin, rt.destination, rt.distance_km, vh.vehicle_type, vh.capacity_kg, vh.max_speed_kmh, sch.departure_time, sch.arrival_time, drv.driver_name, drv.license_type FROM routes rt JOIN schedules sch ON rt.route_id = sch.route_id JOIN vehicles vh ON sch.vehicle_id = vh.vehicle_id JOIN drivers drv ON sch.schedule_id = drv.schedule_id WHERE rt.origin = 'City A' AND vh.capacity_kg > 500",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id INT PRIMARY KEY,\n  origin VARCHAR(50) NOT NULL,\n  destination VARCHAR(50) NOT NULL,\n  distance_km DECIMAL(10,2) NOT NULL\n);\n\n\nCREATE TABLE vehicles (\n  vehicle_id INT PRIMARY KEY,\n  vehicle_type VARCHAR(50) NOT NULL,\n  capacity_kg INT NOT NULL,\n  max_speed_kmh INT NOT NULL\n);\n\n\nCREATE TABLE schedules (\n  schedule_id INT PRIMARY KEY,\n  route_id INT REFERENCES routes(route_id),\n  vehicle_id INT REFERENCES vehicles(vehicle_id),\n  departure_time TIMESTAMP NOT NULL,\n  arrival_time TIMESTAMP NOT NULL\n);\n\n\nCREATE TABLE drivers (\n  driver_id INT PRIMARY KEY,\n  driver_name VARCHAR(50) NOT NULL,\n  license_type VARCHAR(20) NOT NULL,\n  schedule_id INT REFERENCES schedules(schedule_id)\n);\n\n### STATEMENT\n\nSELECT rt.route_id, rt.origin, rt.destination, rt.distance_km, vh.vehicle_type, vh.capacity_kg, vh.max_speed_kmh,...",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT origin, destination FROM routes;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT vehicle_id, vehicle_type FROM vehicles;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT driver_id, driver_name FROM drivers;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT schedule_id, route_id, vehicle_id, driver_id FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT shipment_id, route_id, departure_time, arrival_time FROM shipments;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT route_id, COUNT(*) AS shipment_count FROM shipments GROUP BY route_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT vehicle_id, COUNT(*) AS schedule_count FROM schedules GROUP BY vehicle_id;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT origin, destination, distance FROM routes WHERE distance > 100;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT driver_name FROM drivers WHERE driver_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE capacity > 10;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT route_id, departure_time, arrival_time FROM shipments WHERE departure_time > '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT driver_id FROM schedules;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM routes ORDER BY distance DESC;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles ORDER BY capacity ASC;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT route_id, origin, destination, distance FROM routes LIMIT 5 OFFSET 10;",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM routes JOIN schedules ON routes.route_id = schedules.route_id WHERE origin = 'New York'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM vehicles WHERE capacity > 100",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT vehicles.vehicle_type, AVG(capacity) as avg_capacity FROM schedules JOIN vehicles ON schedules.vehicle_id = vehicles.vehicle_id GROUP BY vehicles.vehicle_type",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT drivers.driver_name, COUNT(*) as num_shipments FROM drivers JOIN schedules ON drivers.driver_id = schedules.driver_id JOIN shipments ON schedules.route_id = shipments.route_id GROUP BY drivers.driver_name",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT DISTINCT origin, destination FROM routes",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE distance BETWEEN 100 AND 200 ORDER BY distance DESC",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles WHERE vehicle_type IN ('Truck', 'Van')",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT SUM(capacity) as total_capacity FROM vehicles",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM routes WHERE origin = 'Los Angeles' OR destination = 'San Francisco'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT driver_name, departure_time, arrival_time FROM drivers JOIN schedules ON drivers.driver_id = schedules.driver_id WHERE departure_time >= '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM vehicles ORDER BY vehicle_type ASC, capacity DESC",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT driver_name, departure_time, arrival_time FROM drivers JOIN schedules ON drivers.driver_id = schedules.driver_id WHERE arrival_time < '2023-01-01'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT origin, destination, COUNT(*) as num_shipments FROM routes JOIN shipments ON routes.route_id = shipments.route_id GROUP BY origin, destination",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM drivers WHERE driver_name LIKE '%John%'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT vehicle_type, SUM(capacity) as total_capacity FROM vehicles GROUP BY vehicle_type HAVING total_capacity > 500",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM schedules WHERE arrival_time IS NOT NULL",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT driver_name, AVG(DATEDIFF(hour, departure_time, arrival_time)) as avg_duration FROM drivers JOIN schedules ON drivers.driver_id = schedules.driver_id GROUP BY driver_name",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT origin, destination, ROUND(AVG(distance),2) as avg_distance FROM routes GROUP BY origin, destination",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT * FROM shipments WHERE departure_time >= '2022-06-01' AND arrival_time <= '2022-06-30'",
  "### TABLEDATA\n\nCREATE TABLE routes (\n  route_id UUID PRIMARY KEY,\n  origin VARCHAR,\n  destination VARCHAR,\n  distance FLOAT\n)\n\nCREATE TABLE vehicles (\n  vehicle_id UUID PRIMARY KEY,\n  vehicle_type VARCHAR,\n  capacity FLOAT\n)\n\nCREATE TABLE drivers (\n  driver_id UUID PRIMARY KEY,\n  driver_name VARCHAR\n)\n\nCREATE TABLE schedules (\n  schedule_id UUID PRIMARY KEY,\n  route_id UUID,\n  vehicle_id UUID,\n  driver_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\nCREATE TABLE shipments (\n  shipment_id UUID PRIMARY KEY,\n  route_id UUID,\n  departure_time TIMESTAMP,\n  arrival_time TIMESTAMP\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT driver_id) as num_drivers FROM schedules"
]