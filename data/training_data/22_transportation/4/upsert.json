[
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (1, 'Bus', 4, 'Good service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (2, 'Train', 5, 'Excellent experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (3, 'Car', 3, 'Average journey')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (4, 'Bus', 2, 'Poor service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (5, 'Bike', 4, 'Smooth ride')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (6, 'Bus', 5, 'Outstanding service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (7, 'Train', 3, 'Delayed arrival')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (8, 'Car', 4, 'Comfortable drive')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (9, 'Bus', 2, 'Not satisfied')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (10, 'Train', 5, 'Highly recommended')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (11, 'Car', 3, 'OK service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (12, 'Bus', 4, 'Great experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (13, 'Bike', 5, 'Fun ride')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (14, 'Bus', 3, 'Average service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (15, 'Train', 4, 'Smooth journey')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (16, 'Car', 2, 'Uncomfortable ride')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (17, 'Bus', 5, 'Best service ever')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (18, 'Train', 3, 'Poor timing')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (19, 'Car', 4, 'Great drive')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (20, 'Bus', 1, 'Terrible experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (1, 'bus', 4, 'Good service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (2, 'train', 3, 'Average experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (3, 'car', 5, 'Excellent feedback')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (4, 'bike', 2, 'Needs improvement')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (5, 'bus', 1, 'Poor service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (6, 'train', 4, 'Satisfactory experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (7, 'bus', 3, 'Average service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (8, 'ferry', 5, 'Great experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (9, 'car', 2, 'Not so good feedback')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (10, 'bus', 5, 'Awesome service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (11, 'train', 1, 'Terrible experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (12, 'car', 3, 'Fair feedback')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (13, 'bike', 4, 'Good improvement')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (14, 'bus', 2, 'Mediocre service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (15, 'train', 5, 'Outstanding experience')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (16, 'ferry', 3, 'Enjoyable trip')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (17, 'car', 1, 'Poor feedback')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (18, 'bus', 4, 'Responsive service')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (19, 'train', 2, 'Room for improvement')",
  "### TABLEDATA\n\nCREATE TABLE CustomerFeedback (\n  customer_id INT PRIMARY KEY,\n  transport_type VARCHAR,\n  rating INT,\n  feedback_text TEXT\n)\n\n### STATEMENT\n\nUPSERT INTO CustomerFeedback (customer_id, transport_type, rating, feedback_text) VALUES (20, 'car', 5, 'Exceptional feedback')",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (1, 'John Doe', 'Great customer service') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (2, 'Jane Smith', 'Prompt delivery') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (3, 'Alice Johnson', 'Excellent experience') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (4, 'Bob Brown', 'Satisfied with the service') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (5, 'Mary Davis', 'Recommend this company') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (6, 'Tom Wilson', 'Customer support was helpful') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (7, 'Emily Garcia', 'Fast response time') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (8, 'Chris Lee', 'Impressed with the quality') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (9, 'Jessica Allen', 'Happy with the product') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (10, 'Alex Moore', 'Great value for money') ON CONFLICT (customer_id) DO UPDATE SET customer_name = excluded.customer_name, feedback = excluded.feedback;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (1, 1, 'Very satisfied with the transportation service', 5) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (2, 2, 'Fast and reliable transportation', 4) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (3, 3, 'Transportation was on time', 5) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (4, 4, 'Great transportation options', 4) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (5, 5, 'Efficient transportation service', 5) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (6, 6, 'Transportation booking was easy', 4) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (7, 7, 'Transportation provider was professional', 5) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (8, 8, 'Impressed with the transportation quality', 4) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (9, 9, 'Smooth transportation experience', 5) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (10, 10, 'Affordable transportation services', 4) ON CONFLICT (review_id) DO UPDATE SET review_text = excluded.review_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (1, 'John Doe', 'Great customer service') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (2, 'Alice Smith', 'Very satisfied with the product quality') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (3, 'Bob Johnson', 'Improvement needed in the delivery process') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (4, 'Emily Brown', 'Excellent customer support') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (1, 1, 'Fast and reliable service', 5) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (2, 2, 'Friendly staff and on-time delivery', 4) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (3, 3, 'Product arrived damaged', 2) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (4, 4, 'Excellent packaging', 5) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (5, 1, 'Courteous delivery person', 3) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (6, 2, 'Late delivery but good communication', 3) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (7, 3, 'Poor delivery experience', 1) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (8, 4, 'Efficient tracking system', 4) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (5, 'Sarah Wilson', 'Great experience overall') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (6, 'Michael Anderson', 'Quality products and prompt service') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (7, 'Laura Thomas', 'Satisfied with the customer support') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, feedback) VALUES (8, 'Mark Roberts', 'Fast delivery but packaging needs improvement') ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), feedback = VALUES(feedback);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (9, 5, 'On-time and safe delivery', 5) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (10, 6, 'Good selection of transportation options', 4) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (11, 7, 'Excellent customer service', 5) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (12, 8, 'Prompt response to queries', 4) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE customers ( \n    customer_id INT PRIMARY KEY, \n    customer_name VARCHAR(255), \n    feedback TEXT \n);\n\nCREATE TABLE transportation_reviews ( \n    review_id INT PRIMARY KEY, \n    customer_id INT, \n    review_text TEXT, \n    rating INT, \n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id) \n);\n\n### STATEMENT\n\nINSERT INTO transportation_reviews (review_id, customer_id, review_text, rating) VALUES (13, 5, 'Friendly delivery staff', 3) ON DUPLICATE KEY UPDATE review_text = VALUES(review_text), rating = VALUES(rating);",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (1, 'Great service!', 5) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Excellent service!', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_name) DO UPDATE SET email = 'johndoe@example.com', phone_number = '999-888-7777'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Express Shuttle', 'Shuttle', 4.7) ON CONFLICT (service_name) DO UPDATE SET service_type = 'Airport Shuttle', service_rating = 4.5",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (2, 'Average experience', 3) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Could be better', rating = 3",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Alice Smith', 'alice.smith@example.com', '987-654-3210') ON CONFLICT (customer_name) DO UPDATE SET email = 'alicesmith@example.com', phone_number = '111-222-3333'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('City Tours', 'Sightseeing', 4.2) ON CONFLICT (service_name) DO UPDATE SET service_type = 'Guided Tours', service_rating = 4.0",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (3, 'Poor service', 2) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Terrible experience', rating = 1",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Bob Johnson', 'bob.johnson@example.com', '555-666-7777') ON CONFLICT (customer_name) DO UPDATE SET email = 'bobjohnson@example.com', phone_number = '888-999-0000'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Luxury Limo', 'Transportation', 4.9) ON CONFLICT (service_name) DO UPDATE SET service_type = 'Limo Service', service_rating = 5.0",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (4, 'Awesome experience!', 5) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Incredible service!', rating = 5",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Emily Brown', 'emily.brown@example.com', '222-333-4444') ON CONFLICT (customer_name) DO UPDATE SET email = 'emilybrown@example.com', phone_number = '777-888-9999'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Airport Transfer', 'Transfer', 4.5) ON CONFLICT (service_name) DO UPDATE SET service_type = 'Private Transfers', service_rating = 4.3",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (5, 'Decent service', 3) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Could improve', rating = 2",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('David Wilson', 'david.wilson@example.com', '444-555-6666') ON CONFLICT (customer_name) DO UPDATE SET email = 'davidwilson@example.com', phone_number = '999-000-1111'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Cruise Transfers', 'Cruise Service', 4.3) ON CONFLICT (service_name) DO UPDATE SET service_type = 'Port Transfers', service_rating = 4.1",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (6, 'Disappointing service', 2) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Unsatisfactory experience', rating = 1",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Grace Lee', 'grace.lee@example.com', '666-777-8888') ON CONFLICT (customer_name) DO UPDATE SET email = 'gracelee@example.com', phone_number = '000-111-2222'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Sightseeing Bus', 'Bus Tour', 4.0) ON CONFLICT (service_name) DO UPDATE SET service_type = 'City Bus Tour', service_rating = 3.8",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (7, 'Mediocre service', 3) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = 'Not great', rating = 2",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Henry Turner', 'henry.turner@example.com', '777-888-9999') ON CONFLICT (customer_name) DO UPDATE SET email = 'henryturner@example.com', phone_number = '111-222-3333'",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Private Chauffeur', 'Chauffeur Service', 4.6) ON CONFLICT (service_name) DO UPDATE SET service_type = 'Personal Driver', service_rating = 4.4",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (1, 'Great service!', 5) ON CONFLICT ON CONSTRAINT feedback_pkey DO UPDATE SET feedback_text = 'Excellent service', rating = 5 WHERE feedback.customer_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('John Doe', 'john.doe@example.com', '123-456-7890') ON CONFLICT (customer_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Uber', 'Ride-Hailing', 4.5) ON CONFLICT (service_name) DO UPDATE SET service_rating = excluded.service_rating;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (2, 'Could improve the wait time', 3) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Jane Smith', 'jane.smith@example.com', '987-654-3210') ON CONFLICT (customer_name) DO UPDATE SET phone_number = '987-654-3210';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Lyft', 'Ride-Hailing', 4.3) ON CONFLICT (service_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (3, 'Excellent service overall', 5) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Alice Johnson', 'alice.johnson@example.com', '456-789-0123') ON CONFLICT (customer_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Taxi', 'Taxi Service', 3.8) ON CONFLICT (service_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (4, 'Average experience, can be better', 2) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Bob Brown', 'bob.brown@example.com', '789-012-3456') ON CONFLICT (customer_name) DO UPDATE SET email = 'bob.brown@new-email.com';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Bus', 'Public Transportation', 3.2) ON CONFLICT (service_name) DO UPDATE SET service_rating = 3.2;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (5, 'Poor service, needs improvement', 1) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Eva Davis', 'eva.davis@example.com', '012-345-6789') ON CONFLICT (customer_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Train', 'Rail Service', 4.0) ON CONFLICT (service_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (6, 'Satisfactory service but room for improvement', 3) ON CONFLICT (customer_id) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Michael Wilson', 'michael.wilson@example.com', '345-678-9012') ON CONFLICT (customer_name) DO UPDATE SET email = 'michael.wilson@new-email.com';",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Bike Rental', 'Outdoor Activity', 4.8) ON CONFLICT (service_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO feedback (customer_id, feedback_text, rating) VALUES (7, 'Good service, prompt response', 4) ON CONFLICT (customer_id) DO UPDATE SET feedback_text = excluded.feedback_text, rating = excluded.rating;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO customer (customer_name, email, phone_number) VALUES ('Sarah Lee', 'sarah.lee@example.com', '678-901-2345') ON CONFLICT (customer_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE feedback (\n    feedback_id SERIAL PRIMARY KEY,\n    customer_id INT,\n    feedback_text TEXT,\n    rating INT\n);\n\nCREATE TABLE customer (\n    customer_id SERIAL PRIMARY KEY,\n    customer_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE transportation_service (\n    service_id SERIAL PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    service_rating FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_service (service_name, service_type, service_rating) VALUES ('Subway', 'Subway Service', 3.5) ON CONFLICT (service_name) DO NOTHING;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (1, 'Express Delivery', 'Courier', 4.5) ON DUPLICATE KEY UPDATE service_name = 'Express Delivery', service_type = 'Courier', service_rating = 4.5;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (2, 'Next Day Shipping', 'Logistics', 4.2) ON DUPLICATE KEY UPDATE service_name = 'Next Day Shipping', service_type = 'Logistics', service_rating = 4.2;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (3, 'Same Day Pickup', 'Courier', 4.0) ON DUPLICATE KEY UPDATE service_name = 'Same Day Pickup', service_type = 'Courier', service_rating = 4.0;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (4, 'Air Freight', 'Freight', 4.8) ON DUPLICATE KEY UPDATE service_name = 'Air Freight', service_type = 'Freight', service_rating = 4.8;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (5, 'Local Transport', 'Courier', 4.3) ON DUPLICATE KEY UPDATE service_name = 'Local Transport', service_type = 'Courier', service_rating = 4.3;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (1, 'John Doe', 'john@example.com', TRUE) ON DUPLICATE KEY UPDATE customer_name = 'John Doe', customer_email = 'john@example.com', membership_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (2, 'Jane Smith', 'jane@example.com', FALSE) ON DUPLICATE KEY UPDATE customer_name = 'Jane Smith', customer_email = 'jane@example.com', membership_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (3, 'Alice Johnson', 'alice@example.com', TRUE) ON DUPLICATE KEY UPDATE customer_name = 'Alice Johnson', customer_email = 'alice@example.com', membership_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (4, 'Bob Brown', 'bob@example.com', FALSE) ON DUPLICATE KEY UPDATE customer_name = 'Bob Brown', customer_email = 'bob@example.com', membership_status = FALSE;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (5, 'Mike Wilson', 'mike@example.com', TRUE) ON DUPLICATE KEY UPDATE customer_name = 'Mike Wilson', customer_email = 'mike@example.com', membership_status = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (1, 1, 1, 5, 'Excellent service!') ON DUPLICATE KEY UPDATE service_id = 1, customer_id = 1, rating = 5, feedback_text = 'Excellent service!';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (2, 2, 2, 4, 'Very good experience.') ON DUPLICATE KEY UPDATE service_id = 2, customer_id = 2, rating = 4, feedback_text = 'Very good experience.';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (3, 3, 3, 3, 'Could be better.') ON DUPLICATE KEY UPDATE service_id = 3, customer_id = 3, rating = 3, feedback_text = 'Could be better.';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (4, 4, 4, 5, 'Super fast delivery!') ON DUPLICATE KEY UPDATE service_id = 4, customer_id = 4, rating = 5, feedback_text = 'Super fast delivery!';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (5, 5, 5, 4, 'Good service overall.') ON DUPLICATE KEY UPDATE service_id = 5, customer_id = 5, rating = 4, feedback_text = 'Good service overall.';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (1, 1, 'Great service!', '2023-04-15') ON DUPLICATE KEY UPDATE feedback_id = 1, review_text = 'Great service!', review_date = '2023-04-15';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (2, 2, 'Impressive logistics.', '2023-05-10') ON DUPLICATE KEY UPDATE feedback_id = 2, review_text = 'Impressive logistics.', review_date = '2023-05-10';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (3, 3, 'Room for improvement.', '2023-06-20') ON DUPLICATE KEY UPDATE feedback_id = 3, review_text = 'Room for improvement.', review_date = '2023-06-20';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (4, 4, 'Exceptional service!', '2023-07-25') ON DUPLICATE KEY UPDATE feedback_id = 4, review_text = 'Exceptional service!', review_date = '2023-07-25';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (5, 5, 'Satisfactory experience.', '2023-08-30') ON DUPLICATE KEY UPDATE feedback_id = 5, review_text = 'Satisfactory experience.', review_date = '2023-08-30';",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (1, 'Delivery Express', 'Delivery', 4.5) ON DUPLICATE KEY UPDATE service_name = VALUES(service_name), service_type = VALUES(service_type), service_rating = VALUES(service_rating);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (101, 'John Doe', 'john.doe@example.com', true) ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), membership_status = VALUES(membership_status);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (201, 1, 101, 4, 'Great service!') ON DUPLICATE KEY UPDATE service_id = VALUES(service_id), customer_id = VALUES(customer_id), rating = VALUES(rating), feedback_text = VALUES(feedback_text);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (301, 201, 'Excellent experience!', '2022-05-10') ON DUPLICATE KEY UPDATE feedback_id = VALUES(feedback_id), review_text = VALUES(review_text), review_date = VALUES(review_date);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (2, 'Travel Buddy', 'Travel', 4.7) ON DUPLICATE KEY UPDATE service_name = VALUES(service_name), service_type = VALUES(service_type), service_rating = VALUES(service_rating);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (102, 'Alice Smith', 'alice.smith@example.com', false) ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), membership_status = VALUES(membership_status);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (202, 2, 102, 4, 'Awesome trip!') ON DUPLICATE KEY UPDATE service_id = VALUES(service_id), customer_id = VALUES(customer_id), rating = VALUES(rating), feedback_text = VALUES(feedback_text);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (302, 202, 'Highly recommended!', '2022-05-12') ON DUPLICATE KEY UPDATE feedback_id = VALUES(feedback_id), review_text = VALUES(review_text), review_date = VALUES(review_date);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (3, 'Foodie Express', 'Food Delivery', 4.3) ON DUPLICATE KEY UPDATE service_name = VALUES(service_name), service_type = VALUES(service_type), service_rating = VALUES(service_rating);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (103, 'Emily Brown', 'emily.brown@example.com', true) ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), membership_status = VALUES(membership_status);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (203, 3, 103, 4, 'Delicious food!') ON DUPLICATE KEY UPDATE service_id = VALUES(service_id), customer_id = VALUES(customer_id), rating = VALUES(rating), feedback_text = VALUES(feedback_text);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (303, 203, 'Yummy!', '2022-05-15') ON DUPLICATE KEY UPDATE feedback_id = VALUES(feedback_id), review_text = VALUES(review_text), review_date = VALUES(review_date);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (4, 'City Shuttle', 'Transportation', 4.0) ON DUPLICATE KEY UPDATE service_name = VALUES(service_name), service_type = VALUES(service_type), service_rating = VALUES(service_rating);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (104, 'Mike Johnson', 'mike.johnson@example.com', false) ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), membership_status = VALUES(membership_status);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (204, 4, 104, 3, 'Average service.') ON DUPLICATE KEY UPDATE service_id = VALUES(service_id), customer_id = VALUES(customer_id), rating = VALUES(rating), feedback_text = VALUES(feedback_text);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (304, 204, 'Could be better.', '2022-05-18') ON DUPLICATE KEY UPDATE feedback_id = VALUES(feedback_id), review_text = VALUES(review_text), review_date = VALUES(review_date);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, service_rating) VALUES (5, 'Pet Taxi', 'Pet Services', 4.8) ON DUPLICATE KEY UPDATE service_name = VALUES(service_name), service_type = VALUES(service_type), service_rating = VALUES(service_rating);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO customers (customer_id, customer_name, customer_email, membership_status) VALUES (105, 'Sarah Taylor', 'sarah.taylor@example.com', true) ON DUPLICATE KEY UPDATE customer_name = VALUES(customer_name), customer_email = VALUES(customer_email), membership_status = VALUES(membership_status);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO feedback (feedback_id, service_id, customer_id, rating, feedback_text) VALUES (205, 5, 105, 5, 'Amazing service for pets!') ON DUPLICATE KEY UPDATE service_id = VALUES(service_id), customer_id = VALUES(customer_id), rating = VALUES(rating), feedback_text = VALUES(feedback_text);",
  "### TABLEDATA\n\nCREATE TABLE transportation_services (\n    service_id INT PRIMARY KEY,\n    service_name VARCHAR(255),\n    service_type VARCHAR(100),\n    service_rating FLOAT\n);\n\n\nCREATE TABLE customers (\n    customer_id INT PRIMARY KEY,\n    customer_name VARCHAR(255),\n    customer_email VARCHAR(255),\n    membership_status BOOLEAN\n);\n\n\nCREATE TABLE feedback (\n    feedback_id INT PRIMARY KEY,\n    service_id INT,\n    customer_id INT,\n    rating INT,\n    feedback_text TEXT,\n    FOREIGN KEY (service_id) REFERENCES transportation_services(service_id),\n    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)\n);\n\n\nCREATE TABLE reviews (\n    review_id INT PRIMARY KEY,\n    feedback_id INT,\n    review_text TEXT,\n    review_date DATE,\n    FOREIGN KEY (feedback_id) REFERENCES feedback(feedback_id)\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, review_date) VALUES (305, 205, 'Highly recommended for pet owners.', '2022-05-20') ON DUPLICATE KEY UPDATE feedback_id = VALUES(feedback_id), review_text = VALUES(review_text), review_date = VALUES(review_date);",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_feedback (feedback_id, customer_id, service_rating, comment) VALUES ('fa1e01b5-6d6c-41cc-bd8f-9ac15f2c3d38', 'ca41c2b4-4e7d-44e2-b15e-fcda57da95c8', 5, 'Great service, highly recommended') ON CONFLICT (feedback_id) DO UPDATE SET service_rating = 5, comment = 'Great service, highly recommended';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services (service_id, service_name, service_type, provider_name) VALUES ('0867e060-54f9-4f59-8896-7d25a706f902', 'Express Delivery', 'Courier', 'FastShip') ON CONFLICT (service_id) DO UPDATE SET service_name = 'Express Delivery', service_type = 'Courier', provider_name = 'FastShip';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_profiles (customer_id, first_name, last_name, email, phone_number) VALUES ('ca41c2b4-4e7d-44e2-b15e-fcda57da95c8', 'John', 'Doe', 'johndoe@example.com', '123-456-7890') ON CONFLICT (customer_id) DO UPDATE SET first_name = 'John', last_name = 'Doe', email = 'johndoe@example.com', phone_number = '123-456-7890';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO reviews (review_id, feedback_id, review_text, reviewer_name) VALUES ('f68f570c-b9cb-4ebe-bbb1-1fbb05947266', 'fa1e01b5-6d6c-41cc-bd8f-9ac15f2c3d38', 'Excellent service, great experience', 'Alice Smith') ON CONFLICT (review_id) DO UPDATE SET feedback_id = 'fa1e01b5-6d6c-41cc-bd8f-9ac15f2c3d38', review_text = 'Excellent service, great experience', reviewer_name = 'Alice Smith';",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO service_ratings (rating_id, service_id, rating_value) VALUES ('46067848-a599-45c3-b21f-cfc1e40e4b67', '0867e060-54f9-4f59-8896-7d25a706f902', 4) ON CONFLICT (rating_id) DO UPDATE SET service_id = '0867e060-54f9-4f59-8896-7d25a706f902', rating_value = 4;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_feedback(feedback_id, customer_id, service_rating, comment) VALUES ('c798570d-7916-4b52-8941-57e1a0dbb2f1', 'b6f0a6e2-2031-4bcf-848d-e8294e48012a', 5, 'Great service, highly recommend') ON CONFLICT(feedback_id) DO UPDATE SET service_rating = excluded.service_rating, comment = excluded.comment;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services(service_id, service_name, service_type, provider_name) VALUES ('e7e9e3a0-dab6-4550-9051-77352419bbcf', 'Express Delivery', 'Logistics', 'Fast Express') ON CONFLICT(service_id) DO UPDATE SET service_name = excluded.service_name, service_type = excluded.service_type, provider_name = excluded.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_profiles(customer_id, first_name, last_name, email, phone_number) VALUES ('b6f0a6e2-2031-4bcf-848d-e8294e48012a', 'John', 'Doe', 'johndoe@example.com', '123-456-7890') ON CONFLICT(customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO reviews(review_id, feedback_id, review_text, reviewer_name) VALUES ('4c50724e-54f1-4dc8-b38d-5b691519b55a', 'c798570d-7916-4b52-8941-57e1a0dbb2f1', 'Excellent service, very professional', 'Alice Smith') ON CONFLICT(review_id) DO UPDATE SET feedback_id = excluded.feedback_id, review_text = excluded.review_text, reviewer_name = excluded.reviewer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO service_ratings(rating_id, service_id, rating_value) VALUES ('ef9f445e-4ad9-4cc4-af33-ec84d3a94c92', 'e7e9e3a0-dab6-4550-9051-77352419bbcf', 4) ON CONFLICT(rating_id) DO UPDATE SET service_id = excluded.service_id, rating_value = excluded.rating_value;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_feedback(feedback_id, customer_id, service_rating, comment) VALUES ('f7f1d47b-bb23-4d2b-a260-ee1e8ebd55ee', 'b6f0a6e2-2031-4bcf-848d-e8294e48012a', 3, 'Service was average, room for improvement') ON CONFLICT(feedback_id) DO UPDATE SET service_rating = excluded.service_rating, comment = excluded.comment;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services(service_id, service_name, service_type, provider_name) VALUES ('61dcac76-78cc-49ee-bd3e-014e597580b8', 'Local Shuttle', 'Transportation', 'City Shuttle') ON CONFLICT(service_id) DO UPDATE SET service_name = excluded.service_name, service_type = excluded.service_type, provider_name = excluded.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_profiles(customer_id, first_name, last_name, email, phone_number) VALUES ('c2db4096-4f35-47f7-9e40-7f8cf92f1c83', 'Emily', 'Johnson', 'emilyjohnson@example.com', '987-654-3210') ON CONFLICT(customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO reviews(review_id, feedback_id, review_text, reviewer_name) VALUES ('7f709fc0-61cc-45e8-9384-3c5c3ba8df94', 'f7f1d47b-bb23-4d2b-a260-ee1e8ebd55ee', 'Decent service, could be better', 'Michael Johnson') ON CONFLICT(review_id) DO UPDATE SET feedback_id = excluded.feedback_id, review_text = excluded.review_text, reviewer_name = excluded.reviewer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO service_ratings(rating_id, service_id, rating_value) VALUES ('4e7cd39a-f0a8-47a7-9b71-1f46fdf69544', '61dcac76-78cc-49ee-bd3e-014e597580b8', 5) ON CONFLICT(rating_id) DO UPDATE SET service_id = excluded.service_id, rating_value = excluded.rating_value;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_feedback(feedback_id, customer_id, service_rating, comment) VALUES ('b290d4f8-2304-40c6-bae7-0662689af33f', 'c2db4096-4f35-47f7-9e40-7f8cf92f1c83', 4, 'Good service, would use again') ON CONFLICT(feedback_id) DO UPDATE SET service_rating = excluded.service_rating, comment = excluded.comment;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services(service_id, service_name, service_type, provider_name) VALUES ('c13a20de-ea80-40a2-80d2-f0a7fa4205cb', 'Airport Pickup', 'Transportation', 'City Transport') ON CONFLICT(service_id) DO UPDATE SET service_name = excluded.service_name, service_type = excluded.service_type, provider_name = excluded.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_profiles(customer_id, first_name, last_name, email, phone_number) VALUES ('e83c172b-4c12-4417-8a8b-27689bba3fb8', 'Sarah', 'Brown', 'sarahbrown@example.com', '555-123-4567') ON CONFLICT(customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO reviews(review_id, feedback_id, review_text, reviewer_name) VALUES ('31bfeb37-c5a0-41c2-a1f0-9689bf71c838', 'b290d4f8-2304-40c6-bae7-0662689af33f', 'Impressed with the service quality', 'David Roberts') ON CONFLICT(review_id) DO UPDATE SET feedback_id = excluded.feedback_id, review_text = excluded.review_text, reviewer_name = excluded.reviewer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO service_ratings(rating_id, service_id, rating_value) VALUES ('b25d0932-60b7-4073-807b-4a5424f3fcfa', 'c13a20de-ea80-40a2-80d2-f0a7fa4205cb', 3) ON CONFLICT(rating_id) DO UPDATE SET service_id = excluded.service_id, rating_value = excluded.rating_value;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_feedback(feedback_id, customer_id, service_rating, comment) VALUES ('244f1cd8-b53e-4059-bb7d-6f41ba32c1d3', 'e83c172b-4c12-4417-8a8b-27689bba3fb8', 2, 'Disappointing experience, needs improvement') ON CONFLICT(feedback_id) DO UPDATE SET service_rating = excluded.service_rating, comment = excluded.comment;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO transportation_services(service_id, service_name, service_type, provider_name) VALUES ('1933fc2a-73e6-453e-a13e-e1151325194b', 'Courier Service', 'Logistics', 'Rapid Courier') ON CONFLICT(service_id) DO UPDATE SET service_name = excluded.service_name, service_type = excluded.service_type, provider_name = excluded.provider_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_profiles(customer_id, first_name, last_name, email, phone_number) VALUES ('80a9a5c4-469f-420c-95ae-084e37344318', 'Thomas', 'Williams', 'thomaswilliams@example.com', '999-888-7777') ON CONFLICT(customer_id) DO UPDATE SET first_name = excluded.first_name, last_name = excluded.last_name, email = excluded.email, phone_number = excluded.phone_number;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO reviews(review_id, feedback_id, review_text, reviewer_name) VALUES ('a0b1cf11-3fd8-45d9-8556-4d1fa4a46749', '244f1cd8-b53e-4059-bb7d-6f41ba32c1d3', 'Poor service, would not recommend', 'Karen Turner') ON CONFLICT(review_id) DO UPDATE SET feedback_id = excluded.feedback_id, review_text = excluded.review_text, reviewer_name = excluded.reviewer_name;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO service_ratings(rating_id, service_id, rating_value) VALUES ('c9d62665-06a5-41c6-b9ef-cb74b6e1d4e8', '1933fc2a-73e6-453e-a13e-e1151325194b', 1) ON CONFLICT(rating_id) DO UPDATE SET service_id = excluded.service_id, rating_value = excluded.rating_value;",
  "### TABLEDATA\n\nCREATE TABLE customer_feedback (\n    feedback_id UUID PRIMARY KEY,\n    customer_id UUID,\n    service_rating INT,\n    comment TEXT\n);\n\nCREATE TABLE transportation_services (\n    service_id UUID PRIMARY KEY,\n    service_name TEXT,\n    service_type TEXT,\n    provider_name TEXT\n);\n\nCREATE TABLE customer_profiles (\n    customer_id UUID PRIMARY KEY,\n    first_name TEXT,\n    last_name TEXT,\n    email TEXT,\n    phone_number TEXT\n);\n\nCREATE TABLE reviews (\n    review_id UUID PRIMARY KEY,\n    feedback_id UUID,\n    review_text TEXT,\n    reviewer_name TEXT\n);\n\nCREATE TABLE service_ratings (\n    rating_id UUID PRIMARY KEY,\n    service_id UUID,\n    rating_value INT\n);\n\n### STATEMENT\n\nINSERT INTO customer_feedback(feedback_id, customer_id, service_rating, comment) VALUES ('f33f8c08-3239-4a38-9ec2-eeb0af4b1b43', '80a9a5c4-469f-420c-95ae-084e37344318', 5, 'Outstanding service, exceeded expectations') ON CONFLICT(feedback_id) DO UPDATE SET service_rating = excluded.service_rating, comment = excluded.comment;"
]