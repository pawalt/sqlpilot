<t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><stat>DROP TABLE transportation</stat><divider><t>CREATE TABLE transportation (id INT PRIMARY KEY, vehicle_name VARCHAR(50), capacity INT, route VARCHAR(100))</t><stat>drop table transportation</stat><divider><t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><stat>DROP TABLE vehicles;</stat><divider><t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><stat>drop table vehicles;</stat><divider><t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><stat>DROP TABLE vehicles;</stat><divider><t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><stat>drop table vehicles;</stat><divider><t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><stat>DROP TABLE routes;</stat><divider><t>CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);

CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));</t><stat>drop table routes;</stat><divider><t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><stat>DROP TABLE routes;</stat><divider><t>CREATE TABLE routes (route_id INT PRIMARY KEY, route_name VARCHAR(50), start_location VARCHAR(50), end_location VARCHAR(50));

CREATE TABLE vehicles (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(50), manufacturer VARCHAR(50), year INT);</t><stat>drop table routes;</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>DROP TABLE vehicles</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>drop table vehicles</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE vehicles</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table vehicles</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>DROP TABLE vehicles</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>drop table vehicles</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>DROP TABLE vehicles</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>drop table vehicles</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE vehicles</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table vehicles</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>DROP TABLE vehicles</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>drop table vehicles</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>DROP TABLE drivers</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>drop table drivers</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE drivers</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table drivers</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>DROP TABLE drivers</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>drop table drivers</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>DROP TABLE drivers</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>drop table drivers</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE drivers</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table drivers</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>DROP TABLE drivers</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>drop table drivers</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>DROP TABLE routes</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>drop table routes</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE routes</stat><divider><t>CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table routes</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>DROP TABLE routes</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)</t><stat>drop table routes</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>DROP TABLE routes</stat><divider><t>CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>drop table routes</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE routes</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table routes</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>DROP TABLE routes</stat><divider><t>CREATE TABLE routes (id INT PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT)

CREATE TABLE drivers (id INT PRIMARY KEY, name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE vehicles (id INT PRIMARY KEY, name VARCHAR(255), type VARCHAR(255))</t><stat>drop table routes</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Schedule</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists schedule</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Route</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists route</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS Driver</stat><divider><t>CREATE TABLE Schedule (schedule_id INT PRIMARY KEY, vehicle_id INT, route_id INT, departure_time TIMESTAMP, arrival_time TIMESTAMP)

CREATE TABLE Route (route_id INT PRIMARY KEY, route_name VARCHAR(255))

CREATE TABLE Driver (driver_id INT PRIMARY KEY, driver_name VARCHAR(255), license_number VARCHAR(255))

CREATE TABLE Vehicle (vehicle_id INT PRIMARY KEY, vehicle_type VARCHAR(255), manufacturer VARCHAR(255), year INT)</t><stat>drop table if exists driver</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS vehicles</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists vehicles</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS drivers</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists drivers</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))</t><stat>drop table if exists trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>DROP TABLE IF EXISTS trips</stat><divider><t>CREATE TABLE passengers (passenger_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT)

CREATE TABLE routes (route_id SERIAL PRIMARY KEY, route_name VARCHAR(255), distance FLOAT, start_location VARCHAR(255), end_location VARCHAR(255))

CREATE TABLE trips (trip_id SERIAL PRIMARY KEY, start_location VARCHAR(255), end_location VARCHAR(255), distance FLOAT, time_duration INTERVAL, vehicle_id INT, driver_id INT, FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id), FOREIGN KEY (driver_id) REFERENCES drivers(driver_id))

CREATE TABLE drivers (driver_id SERIAL PRIMARY KEY, name VARCHAR(255), age INT, license_number VARCHAR(255))

CREATE TABLE vehicles (vehicle_id SERIAL PRIMARY KEY, make VARCHAR(255), model VARCHAR(255), year INT)</t><stat>drop table if exists trips</stat>