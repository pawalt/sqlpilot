[
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE drug_name = 'Aspirin';",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, genotype FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT gene_name FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE response_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(response_score) FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, genotype, response_score FROM pharmacogenomics_data WHERE patient_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE genotype LIKE 'AA%';",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(response_score) FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE gene_name = 'CYP2C9';",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, genotype, response_score FROM pharmacogenomics_data ORDER BY response_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT gene_name) FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(response_score) AS average_score FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MIN(response_score) FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE drug_name IN ('Tylenol', 'Advil');",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, genotype, response_score FROM pharmacogenomics_data WHERE response_score < 0.3;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT SUM(response_score) FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE genotype = 'CC';",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, gene_name, genotype, response_score FROM pharmacogenomics_data WHERE drug_name = 'Lipitor' AND gene_name = 'ABCB1';",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(response_score) AS avg_score, MAX(response_score) AS max_score, MIN(response_score) AS min_score FROM pharmacogenomics_data;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE response_score > 0.5 AND genotype = 'AA'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, response_score FROM pharmacogenomics_data WHERE drug_name = 'Aspirin' AND genotype IN ('AA', 'AC')",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM pharmacogenomics_data WHERE gene_name LIKE '%CYP%'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(response_score) FROM pharmacogenomics_data WHERE drug_name = 'Paracetamol'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM pharmacogenomics_data",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE response_score <= 0.3 ORDER BY gene_name, response_score DESC",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, gene_name FROM pharmacogenomics_data GROUP BY drug_name",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT MAX(response_score) AS max_response_score, MIN(response_score) AS min_response_score FROM pharmacogenomics_data WHERE genotype = 'CC'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, AVG(response_score) AS avg_response_score FROM pharmacogenomics_data GROUP BY drug_name HAVING AVG(response_score) > 0.4",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE genotype LIKE 'A%' OR genotype LIKE '%A'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT count(*) FROM pharmacogenomics_data WHERE drug_name = 'Lisinopril' AND genotype = 'AA'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT AVG(response_score) AS avg_response_score, COUNT(*) AS total_records FROM pharmacogenomics_data WHERE drug_name = 'Clopidogrel' AND gene_name = 'CYP2C19'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT patient_id, drug_name, gene_name, genotype FROM pharmacogenomics_data WHERE response_score BETWEEN 0.25 AND 0.75",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, genotype, AVG(response_score) AS avg_response_score FROM pharmacogenomics_data GROUP BY drug_name, genotype ORDER BY drug_name, genotype",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT gene_name FROM pharmacogenomics_data WHERE response_score < 0.1",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT * FROM pharmacogenomics_data WHERE gene_name = 'VKORC1' OR gene_name = 'CYP2D6'",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT patient_id FROM pharmacogenomics_data WHERE drug_name IN ('Warfarin', 'Metoprolol')",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS total_records FROM pharmacogenomics_data GROUP BY drug_name HAVING COUNT(*) > 1",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT DISTINCT genotype FROM pharmacogenomics_data WHERE response_score > 0.6",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(DISTINCT gene_name) AS unique_genes FROM pharmacogenomics_data GROUP BY drug_name HAVING unique_genes > 1",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_gene_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_score FROM drug_gene_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT id, drug_name, gene_name, interaction_score FROM drug_gene_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_class FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT target_gene, dosage FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT id, drug_name, drug_class, target_gene, dosage FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE interaction_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE gene_name = 'XYZ';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE interaction_score BETWEEN 0.3 AND 0.7;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE interaction_score < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions ORDER BY gene_name ASC;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions ORDER BY interaction_score DESC;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions OFFSET 3;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE drug_name = 'Drug A';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE drug_name LIKE '%Drug%';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) AS num_interactions FROM drug_gene_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_gene_interactions WHERE interaction_score > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE interaction_score < 0.2;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM drug_gene_interactions WHERE gene_name = 'ABC';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_score FROM drug_gene_interactions WHERE drug_name = 'DrugA' AND interaction_score > 0.8;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT MIN(interaction_score), MAX(interaction_score) FROM drug_gene_interactions;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT AVG(interaction_score) FROM drug_gene_interactions WHERE drug_name = 'DrugB';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_gene_interactions WHERE gene_name LIKE 'AB%';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions ORDER BY interaction_score DESC LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, AVG(interaction_score) AS avg_score FROM drug_gene_interactions GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, SUM(interaction_score) AS total_score FROM drug_gene_interactions GROUP BY drug_name, gene_name HAVING SUM(interaction_score) > 2;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT d1.drug_name, d2.drug_name, d1.interaction_score * d2.interaction_score AS interaction_product FROM drug_gene_interactions d1 JOIN drug_gene_interactions d2 ON d1.gene_name = d2.gene_name;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions UNION SELECT drug_name, target_gene AS gene_name, dosage AS interaction_score FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions WHERE id IN (SELECT id FROM drug_information);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM drug_gene_interactions WHERE gene_name LIKE '%A%' AND drug_name NOT LIKE '%B%';",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, SUM(interaction_score) FROM drug_gene_interactions GROUP BY drug_name HAVING SUM(interaction_score) BETWEEN 1 AND 3;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions WHERE drug_name = 'DrugA' UNION SELECT d1.drug_name, d1.gene_name, d1.interaction_score * d2.interaction_score AS interaction_product FROM drug_gene_interactions d1 JOIN drug_information d2 ON d1.gene_name = d2.target_gene;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions WHERE gene_name = (SELECT gene_name FROM drug_information WHERE drug_name = 'DrugC');",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions WHERE gene_name = ALL (SELECT target_gene FROM drug_information WHERE drug_name = 'DrugD');",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions WHERE interaction_score = ANY (SELECT dosage FROM drug_information);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT d1.* FROM drug_gene_interactions d1 LEFT JOIN drug_information d2 ON d1.gene_name = d2.target_gene WHERE d2.id IS NULL;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_score FROM drug_gene_interactions WHERE interaction_score > (SELECT AVG(interaction_score) FROM drug_gene_interactions);",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_id FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name FROM Gene;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_type FROM Gene;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugGeneInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT interaction_type, interaction_strength FROM DrugGeneInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_id, gene_id, interaction_type FROM DrugGeneInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT drug_id FROM DrugGeneInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT DISTINCT gene_id FROM DrugGeneInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_id, interaction_type FROM DrugGeneInteraction WHERE interaction_strength > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Drug WHERE drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name FROM Drug WHERE drug_id = 2;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM Gene WHERE gene_type = 'TypeA';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name FROM Gene WHERE gene_type = 'TypeB';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugGeneInteraction WHERE interaction_type = 'Type1';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_id, interaction_strength FROM DrugGeneInteraction WHERE gene_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, Gene.gene_name FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, Gene.gene_name FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id WHERE Drug.drug_id = 3;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, Gene.gene_name, DGI.interaction_type FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id JOIN DrugGeneInteraction DGI ON Drug.drug_id = DGI.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT * FROM DrugGeneInteraction WHERE interaction_strength > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, Gene.gene_name FROM Drug INNER JOIN Gene ON Drug.gene_id = Gene.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, DrugGeneInteraction.interaction_type FROM Drug LEFT JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Gene.gene_name, DrugGeneInteraction.interaction_strength FROM Gene LEFT JOIN DrugGeneInteraction ON Gene.gene_id = DrugGeneInteraction.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT Drug.drug_name, Gene.gene_name, DrugGeneInteraction.interaction_type, DrugGeneInteraction.interaction_strength FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id AND Gene.gene_id = DrugGeneInteraction.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_id, drug_name, gene_name FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name FROM Drug WHERE drug_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name FROM Gene WHERE gene_id = 10;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_strength FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id WHERE interaction_strength > 0.7;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id WHERE gene_type = 'Mutation';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name, AVG(interaction_strength) AS avg_strength FROM Gene JOIN DrugGeneInteraction ON Gene.gene_id = DrugGeneInteraction.gene_id GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, AVG(interaction_strength) AS avg_strength FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id GROUP BY drug_name, interaction_type;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name, COUNT(*) AS interaction_count FROM Gene JOIN DrugGeneInteraction ON Gene.gene_id = DrugGeneInteraction.gene_id GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS interaction_count FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_strength FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id WHERE interaction_strength BETWEEN 0.3 AND 0.6;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name, interaction_type, interaction_strength FROM Gene JOIN DrugGeneInteraction ON Gene.gene_id = DrugGeneInteraction.gene_id WHERE interaction_type = 'Inhibition' AND interaction_strength > 0.4;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id WHERE interaction_type IN ('Activation', 'Inhibition');",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_type FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id AND Gene.gene_id = DrugGeneInteraction.gene_id WHERE interaction_strength > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT gene_name, interaction_type, interaction_strength FROM Gene JOIN DrugGeneInteraction ON Gene.gene_id = DrugGeneInteraction.gene_id WHERE interaction_strength > (SELECT AVG(interaction_strength) FROM DrugGeneInteraction);",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_type, interaction_strength FROM Drug JOIN Gene ON Drug.gene_id = Gene.gene_id JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id AND Gene.gene_id = DrugGeneInteraction.gene_id ORDER BY interaction_strength DESC;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT * FROM gene_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name FROM gene_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_class FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, gene_function FROM gene_information WHERE gene_type = 'TypeA';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT * FROM interaction WHERE interaction_type = 'TypeX';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_target FROM drug_information WHERE drug_class = 'ClassA';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, gene_function FROM gene_information WHERE gene_id = 1;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT * FROM drug_information WHERE drug_id = 5;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, gene_function FROM gene_information WHERE gene_id = (SELECT gene_id FROM patient_genotype WHERE patient_id = 10);",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name FROM drug_information WHERE drug_id IN (SELECT drug_id FROM interaction WHERE gene_id = 3);",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name FROM gene_information WHERE gene_id NOT IN (SELECT gene_id FROM interaction);",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT DISTINCT gene_type FROM gene_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT AVG(patient_id) FROM patient_genotype;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT MAX(interaction_strength) FROM interaction;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT MIN(drug_id) FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, gene_function, interaction_type FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_target, gene_name FROM drug_information JOIN interaction ON drug_information.drug_id = interaction.drug_id JOIN gene_information ON interaction.gene_id = gene_information.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, drug_name FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id JOIN drug_information ON interaction.drug_id = drug_information.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_id, COUNT(*) AS total_interactions FROM interaction GROUP BY gene_id HAVING total_interactions > 5;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_id, AVG(LENGTH(drug_name)) AS avg_name_length FROM drug_information GROUP BY drug_id ORDER BY avg_name_length DESC;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, gene_type, gene_function FROM gene_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, drug_class, drug_target FROM drug_information;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, gene_type, gene_function, drug_name, drug_class, drug_target FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id JOIN drug_information ON drug_information.drug_id = interaction.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT * FROM gene_information WHERE gene_type = 'Type-A';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT * FROM gene_information ORDER BY gene_name DESC;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT * FROM gene_information LIMIT 10;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, COUNT(*) AS total_interactions FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, drug_name, interaction_type FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id JOIN drug_information ON drug_information.drug_id = interaction.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT patient_id, genotype, gene_name FROM patient_genotype JOIN gene_information ON patient_genotype.gene_id = gene_information.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, SUM(CASE WHEN interaction_type = 'Inhibitor' THEN 1 ELSE 0 END) AS total_inhibitors, SUM(CASE WHEN interaction_type = 'Activator' THEN 1 ELSE 0 END) AS total_activators FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, AVG(LENGTH(gene_function)) AS avg_gene_function_length FROM gene_information GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS total_interactions FROM drug_information JOIN interaction ON drug_information.drug_id = interaction.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, AVG(LENGTH(drug_target)) AS avg_drug_target_length FROM drug_information GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, drug_name, interaction_strength FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id JOIN drug_information ON drug_information.drug_id = interaction.drug_id WHERE interaction_strength > 'Medium';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_type, COUNT(*) AS total_genes FROM gene_information GROUP BY gene_type;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, drug_name, interaction_strength FROM gene_information JOIN interaction ON gene_information.gene_id = interaction.gene_id JOIN drug_information ON drug_information.drug_id = interaction.drug_id WHERE gene_name LIKE 'A%';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, MAX(LENGTH(gene_function)) AS max_gene_function_length FROM gene_information GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, MIN(LENGTH(drug_target)) AS min_drug_target_length FROM drug_information GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT gene_name, AVG(LENGTH(gene_function)) AS avg_gene_function_length FROM gene_information GROUP BY gene_name HAVING AVG(LENGTH(gene_function)) > 100;",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nSELECT drug_name, AVG(LENGTH(drug_target)) AS avg_drug_target_length FROM drug_information GROUP BY drug_name HAVING AVG(LENGTH(drug_target)) > 50;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Drug",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, drug_description FROM Drug",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Gene",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT gene_name, gene_description FROM Gene",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugGeneInteraction",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_id, gene_id, interaction_type FROM DrugGeneInteraction",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Patient",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, patient_age FROM Patient",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugPrescription",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_id, drug_id, prescription_date FROM DrugPrescription",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, drug_description, gene_name FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id JOIN Gene ON DrugGeneInteraction.gene_id = Gene.gene_id",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, drug_name, dosage FROM Patient JOIN DrugPrescription ON Patient.patient_id = DrugPrescription.patient_id JOIN Drug ON DrugPrescription.drug_id = Drug.drug_id",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, interaction_type, gene_name FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id JOIN Gene ON DrugGeneInteraction.gene_id = Gene.gene_id",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, patient_age, drug_name FROM Patient JOIN DrugPrescription ON Patient.patient_id = DrugPrescription.patient_id JOIN Drug ON DrugPrescription.drug_id = Drug.drug_id",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugGeneInteraction;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, drug_description FROM Drug;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT gene_name, gene_description FROM Gene;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_id, gene_id, interaction_type FROM DrugGeneInteraction WHERE interaction_type = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugPrescription WHERE prescription_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, patient_age FROM Patient WHERE patient_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM Drug WHERE drug_name LIKE '%pain%';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, gene_name FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id JOIN Gene ON DrugGeneInteraction.gene_id = Gene.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM Patient WHERE patient_age > 50;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugPrescription WHERE dosage = '50mg' AND prescription_date < '2022-06-01';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT gene_name FROM Gene;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, interaction_type FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id WHERE interaction_type = 'negative';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT AVG(patient_age) AS avg_age FROM Patient;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, COUNT(*) AS total_interactions FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id GROUP BY drug_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT * FROM DrugPrescription WHERE patient_id = 1001;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT drug_name, gene_name, interaction_type FROM Drug JOIN DrugGeneInteraction ON Drug.drug_id = DrugGeneInteraction.drug_id JOIN Gene ON DrugGeneInteraction.gene_id = Gene.gene_id WHERE interaction_type = 'positive';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, prescription_date FROM Patient JOIN DrugPrescription ON Patient.patient_id = DrugPrescription.patient_id WHERE drug_id = 2001;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT DISTINCT drug_name FROM DrugPrescription JOIN Drug ON DrugPrescription.drug_id = Drug.drug_id;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT gene_name, COUNT(*) AS total_interactions FROM Gene JOIN DrugGeneInteraction ON Gene.gene_id = DrugGeneInteraction.gene_id GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nSELECT patient_name, AVG(patient_age) AS avg_age FROM Patient GROUP BY patient_name HAVING AVG(patient_age) > 60;"
]