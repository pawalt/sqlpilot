[
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (1, 'DrugA', 'GeneX', 'AA', 0.8);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (2, 'DrugB', 'GeneY', 'AB', 0.6);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (3, 'DrugC', 'GeneZ', 'BB', 0.7);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (4, 'DrugD', 'GeneW', 'AA', 0.9);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (5, 'DrugE', 'GeneX', 'BB', 0.5);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (6, 'DrugA', 'GeneZ', 'AB', 0.7);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (7, 'DrugB', 'GeneX', 'BB', 0.4);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (8, 'DrugC', 'GeneY', 'AA', 0.6);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (9, 'DrugD', 'GeneZ', 'BB', 0.8);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (10, 'DrugE', 'GeneW', 'AA', 0.9);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (11, 'DrugA', 'GeneX', 'BB', 0.3);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (12, 'DrugB', 'GeneY', 'AA', 0.7);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (13, 'DrugC', 'GeneZ', 'BB', 0.6);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (14, 'DrugD', 'GeneW', 'AB', 0.8);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (15, 'DrugE', 'GeneX', 'AA', 0.4);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (16, 'DrugA', 'GeneZ', 'BB', 0.6);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (17, 'DrugB', 'GeneX', 'AA', 0.8);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (18, 'DrugC', 'GeneY', 'BB', 0.7);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (19, 'DrugD', 'GeneZ', 'AB', 0.9);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nUPSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (20, 'DrugE', 'GeneW', 'BB', 0.5);",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (1, 'DrugA', 'GeneA', 'AA', 0.8) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugA', gene_name='GeneA', genotype='AA', response_score=0.8;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (2, 'DrugB', 'GeneB', 'BB', 0.6) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugB', gene_name='GeneB', genotype='BB', response_score=0.6;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (3, 'DrugC', 'GeneC', 'CC', 0.7) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugC', gene_name='GeneC', genotype='CC', response_score=0.7;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (4, 'DrugD', 'GeneD', 'DD', 0.9) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugD', gene_name='GeneD', genotype='DD', response_score=0.9;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (5, 'DrugE', 'GeneE', 'EE', 0.5) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugE', gene_name='GeneE', genotype='EE', response_score=0.5;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (6, 'DrugF', 'GeneF', 'FF', 0.7) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugF', gene_name='GeneF', genotype='FF', response_score=0.7;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (7, 'DrugG', 'GeneG', 'GG', 0.6) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugG', gene_name='GeneG', genotype='GG', response_score=0.6;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (8, 'DrugH', 'GeneH', 'HH', 0.8) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugH', gene_name='GeneH', genotype='HH', response_score=0.8;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (9, 'DrugI', 'GeneI', 'II', 0.6) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugI', gene_name='GeneI', genotype='II', response_score=0.6;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (10, 'DrugJ', 'GeneJ', 'JJ', 0.7) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugJ', gene_name='GeneJ', genotype='JJ', response_score=0.7;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (11, 'DrugK', 'GeneK', 'KK', 0.9) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugK', gene_name='GeneK', genotype='KK', response_score=0.9;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (12, 'DrugL', 'GeneL', 'LL', 0.5) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugL', gene_name='GeneL', genotype='LL', response_score=0.5;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (13, 'DrugM', 'GeneM', 'MM', 0.6) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugM', gene_name='GeneM', genotype='MM', response_score=0.6;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (14, 'DrugN', 'GeneN', 'NN', 0.8) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugN', gene_name='GeneN', genotype='NN', response_score=0.8;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (15, 'DrugO', 'GeneO', 'OO', 0.7) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugO', gene_name='GeneO', genotype='OO', response_score=0.7;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (16, 'DrugP', 'GeneP', 'PP', 0.5) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugP', gene_name='GeneP', genotype='PP', response_score=0.5;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (17, 'DrugQ', 'GeneQ', 'QQ', 0.8) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugQ', gene_name='GeneQ', genotype='QQ', response_score=0.8;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (18, 'DrugR', 'GeneR', 'RR', 0.7) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugR', gene_name='GeneR', genotype='RR', response_score=0.7;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (19, 'DrugS', 'GeneS', 'SS', 0.6) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugS', gene_name='GeneS', genotype='SS', response_score=0.6;",
  "### TABLEDATA\n\nCREATE TABLE pharmacogenomics_data (\n    patient_id INT PRIMARY KEY,\n    drug_name VARCHAR(50) NOT NULL,\n    gene_name VARCHAR(50) NOT NULL,\n    genotype VARCHAR(10) NOT NULL,\n    response_score FLOAT NOT NULL\n);\n\n### STATEMENT\n\nINSERT INTO pharmacogenomics_data (patient_id, drug_name, gene_name, genotype, response_score) VALUES (20, 'DrugT', 'GeneT', 'TT', 0.9) ON CONFLICT (patient_id) DO UPDATE SET drug_name='DrugT', gene_name='GeneT', genotype='TT', response_score=0.9;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (1, 'Drug A', 'Gene X', 0.8) ON DUPLICATE KEY UPDATE interaction_score = 0.8;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (2, 'Drug B', 'Gene Y', 0.7) ON DUPLICATE KEY UPDATE interaction_score = 0.7;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (3, 'Drug C', 'Gene Z', 0.6) ON DUPLICATE KEY UPDATE interaction_score = 0.6;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (4, 'Drug D', 'Gene W', 0.9) ON DUPLICATE KEY UPDATE interaction_score = 0.9;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (5, 'Drug E', 'Gene V', 0.5) ON DUPLICATE KEY UPDATE interaction_score = 0.5;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (1, 'Drug A', 'Class X', 'Gene X', 10.0) ON DUPLICATE KEY UPDATE dosage = 10.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (2, 'Drug B', 'Class Y', 'Gene Y', 20.0) ON DUPLICATE KEY UPDATE dosage = 20.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (3, 'Drug C', 'Class Z', 'Gene Z', 30.0) ON DUPLICATE KEY UPDATE dosage = 30.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (4, 'Drug D', 'Class W', 'Gene W', 40.0) ON DUPLICATE KEY UPDATE dosage = 40.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (5, 'Drug E', 'Class V', 'Gene V', 50.0) ON DUPLICATE KEY UPDATE dosage = 50.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (6, 'Drug F', 'Gene U', 0.4) ON DUPLICATE KEY UPDATE interaction_score = 0.4;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (7, 'Drug G', 'Gene T', 0.3) ON DUPLICATE KEY UPDATE interaction_score = 0.3;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (8, 'Drug H', 'Gene S', 0.2) ON DUPLICATE KEY UPDATE interaction_score = 0.2;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (9, 'Drug I', 'Gene R', 0.1) ON DUPLICATE KEY UPDATE interaction_score = 0.1;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (10, 'Drug J', 'Gene Q', 0.2) ON DUPLICATE KEY UPDATE interaction_score = 0.2;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (6, 'Drug F', 'Class U', 'Gene U', 60.0) ON DUPLICATE KEY UPDATE dosage = 60.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (7, 'Drug G', 'Class T', 'Gene T', 70.0) ON DUPLICATE KEY UPDATE dosage = 70.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (8, 'Drug H', 'Class S', 'Gene S', 80.0) ON DUPLICATE KEY UPDATE dosage = 80.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (9, 'Drug I', 'Class R', 'Gene R', 90.0) ON DUPLICATE KEY UPDATE dosage = 90.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (10, 'Drug J', 'Class Q', 'Gene Q', 100.0) ON DUPLICATE KEY UPDATE dosage = 100.0;",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (1, 'DrugA', 'GeneX', 0.75) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (2, 'DrugB', 'GeneY', 0.85) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (3, 'DrugC', 'GeneZ', 0.92) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (4, 'DrugD', 'GeneT', 0.88) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (5, 'DrugE', 'GeneP', 0.95) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (1, 'DrugA', 'ClassX', 'GeneX', 10.5) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (2, 'DrugB', 'ClassY', 'GeneY', 15.7) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (3, 'DrugC', 'ClassZ', 'GeneZ', 22.1) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (4, 'DrugD', 'ClassT', 'GeneT', 18.3) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (5, 'DrugE', 'ClassP', 'GeneP', 25.9) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (6, 'DrugF', 'GeneQ', 0.81) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (7, 'DrugG', 'GeneS', 0.68) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (8, 'DrugH', 'GeneU', 0.77) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (9, 'DrugI', 'GeneV', 0.63) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_gene_interactions (id, drug_name, gene_name, interaction_score) VALUES (10, 'DrugJ', 'GeneW', 0.89) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), gene_name = VALUES(gene_name), interaction_score = VALUES(interaction_score);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (6, 'DrugFT', 'ClassQ', 'GeneQ', 6.4) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (7, 'DrugGS', 'ClassS', 'GeneS', 9.8) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (8, 'DrugHU', 'ClassU', 'GeneU', 7.7) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (9, 'DrugIV', 'ClassV', 'GeneV', 5.3) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE drug_gene_interactions(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_name VARCHAR(255),\n    interaction_score FLOAT\n);\n\n\nCREATE TABLE drug_information(\n    id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(255),\n    target_gene VARCHAR(255),\n    dosage FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO drug_information (id, drug_name, drug_class, target_gene, dosage) VALUES (10, 'DrugJW', 'ClassW', 'GeneW', 8.9) ON DUPLICATE KEY UPDATE drug_name = VALUES(drug_name), drug_class = VALUES(drug_class), target_gene = VALUES(target_gene), dosage = VALUES(dosage);",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (1, 'Drug1', 1) ON DUPLICATE KEY UPDATE drug_name='Drug1_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (1, 'Gene1', 'Type1') ON DUPLICATE KEY UPDATE gene_name='Gene1_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (1, 1, 1, 'Type1', 0.8) ON DUPLICATE KEY UPDATE interaction_strength=0.8;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (2, 'Drug2', 2) ON DUPLICATE KEY UPDATE drug_name='Drug2_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (2, 'Gene2', 'Type2') ON DUPLICATE KEY UPDATE gene_name='Gene2_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (2, 2, 2, 'Type2', 0.7) ON DUPLICATE KEY UPDATE interaction_strength=0.7;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (3, 'Drug3', 3) ON DUPLICATE KEY UPDATE drug_name='Drug3_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (3, 'Gene3', 'Type3') ON DUPLICATE KEY UPDATE gene_name='Gene3_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (3, 3, 3, 'Type3', 0.9) ON DUPLICATE KEY UPDATE interaction_strength=0.9;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (4, 'Drug4', 4) ON DUPLICATE KEY UPDATE drug_name='Drug4_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (4, 'Gene4', 'Type4') ON DUPLICATE KEY UPDATE gene_name='Gene4_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (4, 4, 4, 'Type4', 0.6) ON DUPLICATE KEY UPDATE interaction_strength=0.6;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (5, 'Drug5', 5) ON DUPLICATE KEY UPDATE drug_name='Drug5_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (5, 'Gene5', 'Type5') ON DUPLICATE KEY UPDATE gene_name='Gene5_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (5, 5, 5, 'Type5', 0.5) ON DUPLICATE KEY UPDATE interaction_strength=0.5;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (6, 'Drug6', 6) ON DUPLICATE KEY UPDATE drug_name='Drug6_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (6, 'Gene6', 'Type6') ON DUPLICATE KEY UPDATE gene_name='Gene6_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (6, 6, 6, 'Type6', 0.4) ON DUPLICATE KEY UPDATE interaction_strength=0.4;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (7, 'Drug7', 7) ON DUPLICATE KEY UPDATE drug_name='Drug7_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (7, 'Gene7', 'Type7') ON DUPLICATE KEY UPDATE gene_name='Gene7_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (7, 7, 7, 'Type7', 0.3) ON DUPLICATE KEY UPDATE interaction_strength=0.3;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (8, 'Drug8', 8) ON DUPLICATE KEY UPDATE drug_name='Drug8_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (8, 'Gene8', 'Type8') ON DUPLICATE KEY UPDATE gene_name='Gene8_updated';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (8, 8, 8, 'Type8', 0.2) ON DUPLICATE KEY UPDATE interaction_strength=0.2;",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (1, 'DrugA', 101) ON DUPLICATE KEY UPDATE drug_name='DrugA_updated', gene_id=101",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (2, 'DrugB', 102) ON DUPLICATE KEY UPDATE drug_name='DrugB_updated', gene_id=102",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO Drug (drug_id, drug_name, gene_id) VALUES (3, 'DrugC', 103) ON DUPLICATE KEY UPDATE drug_name='DrugC_updated', gene_id=103",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (101, 'GeneX', 'TypeA') ON DUPLICATE KEY UPDATE gene_name='GeneX_updated', gene_type='TypeA_updated'",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (102, 'GeneY', 'TypeB') ON DUPLICATE KEY UPDATE gene_name='GeneY_updated', gene_type='TypeB_updated'",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO Gene (gene_id, gene_name, gene_type) VALUES (103, 'GeneZ', 'TypeC') ON DUPLICATE KEY UPDATE gene_name='GeneZ_updated', gene_type='TypeC_updated'",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (1, 1, 101, 'TypeA_interaction', 0.5) ON DUPLICATE KEY UPDATE interaction_type='TypeA_updated_interaction', interaction_strength=0.7",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (2, 2, 102, 'TypeB_interaction', 0.8) ON DUPLICATE KEY UPDATE interaction_type='TypeB_updated_interaction', interaction_strength=0.9",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    gene_id INT\n);\n\n\nCREATE TABLE Gene (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50)\n);\n\n\nCREATE TABLE DrugGeneInteraction (\n    interaction_id INT PRIMARY KEY,\n    drug_id INT,\n    gene_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength FLOAT\n);\n\n### STATEMENT\n\nUPSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type, interaction_strength) VALUES (3, 3, 103, 'TypeC_interaction', 0.6) ON DUPLICATE KEY UPDATE interaction_type='TypeC_updated_interaction', interaction_strength=0.4",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (1, 'Gene1', 'Type1', 'Function1') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene1', gene_type = 'Type1', gene_function = 'Function1';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (1, 'Drug1', 'Class1', 'Target1') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug1', drug_class = 'Class1', drug_target = 'Target1';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (1, 1, 1, 'Type1', 'Strength1') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 1, drug_id = 1, interaction_type = 'Type1', interaction_strength = 'Strength1';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (1, 1, 'Genotype1') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 1, genotype = 'Genotype1';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (2, 'Gene2', 'Type2', 'Function2') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene2', gene_type = 'Type2', gene_function = 'Function2';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (2, 'Drug2', 'Class2', 'Target2') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug2', drug_class = 'Class2', drug_target = 'Target2';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (2, 2, 2, 'Type2', 'Strength2') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 2, drug_id = 2, interaction_type = 'Type2', interaction_strength = 'Strength2';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (2, 2, 'Genotype2') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 2, genotype = 'Genotype2';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (3, 'Gene3', 'Type3', 'Function3') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene3', gene_type = 'Type3', gene_function = 'Function3';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (3, 'Drug3', 'Class3', 'Target3') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug3', drug_class = 'Class3', drug_target = 'Target3';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (3, 3, 3, 'Type3', 'Strength3') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 3, drug_id = 3, interaction_type = 'Type3', interaction_strength = 'Strength3';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (3, 3, 'Genotype3') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 3, genotype = 'Genotype3';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (4, 'Gene4', 'Type4', 'Function4') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene4', gene_type = 'Type4', gene_function = 'Function4';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (4, 'Drug4', 'Class4', 'Target4') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug4', drug_class = 'Class4', drug_target = 'Target4';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (4, 4, 4, 'Type4', 'Strength4') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 4, drug_id = 4, interaction_type = 'Type4', interaction_strength = 'Strength4';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (4, 4, 'Genotype4') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 4, genotype = 'Genotype4';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (5, 'Gene5', 'Type5', 'Function5') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene5', gene_type = 'Type5', gene_function = 'Function5';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (5, 'Drug5', 'Class5', 'Target5') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug5', drug_class = 'Class5', drug_target = 'Target5';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (5, 5, 5, 'Type5', 'Strength5') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 5, drug_id = 5, interaction_type = 'Type5', interaction_strength = 'Strength5';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (5, 5, 'Genotype5') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 5, genotype = 'Genotype5';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (1, 'Gene_A', 'Type_A', 'Function_A') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene_A', gene_type = 'Type_A', gene_function = 'Function_A';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO gene_information (gene_id, gene_name, gene_type, gene_function) VALUES (2, 'Gene_B', 'Type_B', 'Function_B') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Gene_B', gene_type = 'Type_B', gene_function = 'Function_B';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (1, 'Drug_A', 'Class_A', 'Target_A') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug_A', drug_class = 'Class_A', drug_target = 'Target_A';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO drug_information (drug_id, drug_name, drug_class, drug_target) VALUES (2, 'Drug_B', 'Class_B', 'Target_B') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Drug_B', drug_class = 'Class_B', drug_target = 'Target_B';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (1, 1, 1, 'Type_A', 'Strong') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 1, drug_id = 1, interaction_type = 'Type_A', interaction_strength = 'Strong';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO interaction (interaction_id, gene_id, drug_id, interaction_type, interaction_strength) VALUES (2, 2, 2, 'Type_B', 'Weak') ON CONFLICT (interaction_id) DO UPDATE SET gene_id = 2, drug_id = 2, interaction_type = 'Type_B', interaction_strength = 'Weak';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (1, 1, 'AA') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 1, genotype = 'AA';",
  "### TABLEDATA\n\nCREATE TABLE gene_information (\n    gene_id INT PRIMARY KEY,\n    gene_name VARCHAR(255),\n    gene_type VARCHAR(50),\n    gene_function TEXT\n);\n\nCREATE TABLE drug_information (\n    drug_id INT PRIMARY KEY,\n    drug_name VARCHAR(255),\n    drug_class VARCHAR(50),\n    drug_target VARCHAR(255)\n);\n\nCREATE TABLE interaction (\n    interaction_id INT PRIMARY KEY,\n    gene_id INT,\n    drug_id INT,\n    interaction_type VARCHAR(50),\n    interaction_strength VARCHAR(20),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id),\n    FOREIGN KEY(drug_id) REFERENCES drug_information(drug_id)\n);\n\nCREATE TABLE patient_genotype (\n    patient_id INT PRIMARY KEY,\n    gene_id INT,\n    genotype VARCHAR(10),\n    FOREIGN KEY(gene_id) REFERENCES gene_information(gene_id)\n);\n\n### STATEMENT\n\nINSERT INTO patient_genotype (patient_id, gene_id, genotype) VALUES (2, 2, 'AB') ON CONFLICT (patient_id) DO UPDATE SET gene_id = 2, genotype = 'AB';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (1, 'Drug A', 'Description for Drug A') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug A', drug_description = 'Updated Description for Drug A';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (1, 'Gene X', 'Description for Gene X') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene X', gene_description = 'Updated Description for Gene X';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (1, 1, 1, 'Interaction Type 1') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 1, gene_id = 1, interaction_type = 'Updated Interaction Type 1';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (1, 'Patient 1', 30, 'Male') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 1', patient_age = 30, patient_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (1, 1, 1, '2022-01-01', 'Dosage 1') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 1, drug_id = 1, prescription_date = '2022-01-01', dosage = 'Updated Dosage 1';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (2, 'Drug B', 'Description for Drug B') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug B', drug_description = 'Updated Description for Drug B';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (2, 'Gene Y', 'Description for Gene Y') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene Y', gene_description = 'Updated Description for Gene Y';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT IN...   [...continued...]]}  ^^You have generated the UPSERT SQL statements for the given database schema. Let me know if you need anything else.  ^^Great! Here are 20 example UPSERT SQL statements for the provided database schema:1. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (1, 'Drug A', 'Description for Drug A') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug A', drug_description = 'Updated Description for Drug A';```2. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (1, 'Gene X', 'Description for Gene X') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene X', gene_description = 'Updated Description for Gene X';```3. UPSERT statement for DrugGeneInteraction table:```sqlINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (1, 1, 1, 'Interaction Type 1') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 1, gene_id = 1, interaction_type = 'Updated Interaction Type 1';```4. UPSERT statement for Patient table:```sqlINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (1, 'Patient 1', 30, 'Male') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 1', patient_age = 30, patient_gender = 'Male';```5. UPSERT statement for DrugPrescription table:```sqlINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (1, 1, 1, '2022-01-01', 'Dosage 1') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 1, drug_id = 1, prescription_date = '2022-01-01', dosage = 'Updated Dosage 1';```6. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (2, 'Drug B', 'Description for Drug B') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug B', drug_description = 'Updated Description for Drug B';```7. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (2, 'Gene Y', 'Description for Gene Y') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene Y', gene_description = 'Updated Description for Gene Y';```8. UPSERT statement for DrugGeneInteraction table:```sqlINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (2, 2, 2, 'Interaction Type 2') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 2, gene_id = 2, interaction_type = 'Updated Interaction Type 2';```9. UPSERT statement for Patient table:```sqlINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (2, 'Patient 2', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 2', patient_age = 25, patient_gender = 'Female';```10. UPSERT statement for DrugPrescription table:```sqlINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (2, 2, 2, '2022-01-02', 'Dosage 2') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 2, drug_id = 2, prescription_date = '2022-01-02', dosage = 'Updated Dosage 2';```11. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (3, 'Drug C', 'Description for Drug C') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug C', drug_description = 'Updated Description for Drug C';```12. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (3, 'Gene Z', 'Description for Gene Z') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene Z', gene_description = 'Updated Description for Gene Z';```13. UPSERT statement for DrugGeneInteract...   ^^I have provided 20 example UPSERT SQL statements for the given database schema. Let me know if you need any further assistance.  ^^Great! Here are 20 example UPSERT SQL statements for the provided database schema:1. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (1, 'Drug A', 'Description for Drug A') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug A', drug_description = 'Updated Description... 2. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (1, 'Gene X', 'Description for Gene X') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene X', gene_description = 'Updated Description... 3. UPSERT statement for DrugGeneInteraction table:```sqlINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (1, 1, 1, 'Interaction Type 1') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 1, gene_id = 1, interact... 4. UPSERT statement for Patient table:```sqlINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (1, 'Patient 1', 30, 'Male') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 1', patient_age = 30, patient_gen... 5. UPSERT statement for DrugPrescription table:```sqlINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (1, 1, 1, '2022-01-01', 'Dosage 1') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 1, drug_id = 1, prescription_da... 6. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (2, 'Drug B', 'Description for Drug B') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug B', drug_description = 'Updated Description for Drug... 7. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (2, 'Gene Y', 'Description for Gene Y') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene Y', gene_description = 'Updated Description for Gene... 8. UPSERT statement for DrugGeneInteraction table:```sqlINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (2, 2, 2, 'Interaction Type 2') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 2, gene_id = 2, interaction_type = 'Updated Inte... 9. UPSERT statement for Patient table:```sqlINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (2, 'Patient 2', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 2', patient_age = 25, patient_gene... 10. UPSERT statement for DrugPrescription table:```sqlINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (2, 2, 2, '2022-01-02', 'Dosage 2') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 2, drug_id = 2, prescription_... 11. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (3, 'Drug C', 'Description for Drug C') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug C', drug_description = 'Updated Description for Drug... 12. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (3, 'Gene Z', 'Description for Gene Z') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene Z', gene_description = 'Updated Description for Gene... 13. UPSERT statement for DrugGeneInteraction table:```sqlINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (3, 3, 3, 'Interaction Type 3') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 3, gene_id = 3, interaction_type = 'Updated Intera... 14. UPSERT statement for Patient table:```sqlINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (3, 'Patient 3', 35, 'Male') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 3', patient_age = 35, patient_gender = 'M... 15. UPSERT statement for DrugPrescription table:```sqlINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (3, 3, 3, '2022-01-03', 'Dosage 3') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 3, drug_id = 3, prescription_... 16. UPSERT statement for Drug table:```sqlINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (4, 'Drug D', 'Description for Drug D') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Updated Drug D', drug_description = 'Updated Description for Drug... 17. UPSERT statement for Gene table:```sqlINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (4, 'Gene W', 'Description for Gene W') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'Updated Gene W', gene_description = 'Updated Description for Gene... 18. UPSERT statement for DrugGeneInteraction table:```sqlINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (4, 4, 4, 'Interaction Type 4') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 4, gene_id = 4, interaction_type = 'Updated Intera... 19. UPSERT statement for Patient table:```sqlINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (4, 'Patient 4', 40, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Updated Patient 4', patient_age = 40, patient_gender = '... 20. UPSERT statement for DrugPrescription table:```sqlINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (4, 4, 4, '2022-01-04', 'Dosage 4') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 4, drug_id = 4, prescription_...",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (1, 'Paracetamol', 'Pain reliever') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Paracetamol', drug_description = 'Pain reliever';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (1, 'BRCA1', 'Breast cancer gene') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'BRCA1', gene_description = 'Breast cancer gene';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (1, 1, 1, 'Therapeutic') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 1, gene_id = 1, interaction_type = 'Therapeutic';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (1, 'John Doe', 30, 'Male') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'John Doe', patient_age = 30, patient_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (1, 1, 1, '2022-08-01', '1 pill daily') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 1, drug_id = 1, prescription_date = '2022-08-01', dosage = '1 pill daily';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (2, 'Aspirin', 'Anti-inflammatory') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Aspirin', drug_description = 'Anti-inflammatory';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (2, 'HER2', 'Breast cancer gene') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'HER2', gene_description = 'Breast cancer gene';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (2, 2, 2, 'Therapeutic') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 2, gene_id = 2, interaction_type = 'Therapeutic';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (2, 'Jane Smith', 25, 'Female') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Jane Smith', patient_age = 25, patient_gender = 'Female';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (2, 2, 2, '2022-08-02', '2 pills daily') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 2, drug_id = 2, prescription_date = '2022-08-02', dosage = '2 pills daily';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Drug (drug_id, drug_name, drug_description) VALUES (3, 'Ibuprofen', 'Pain and fever relief') ON CONFLICT (drug_id) DO UPDATE SET drug_name = 'Ibuprofen', drug_description = 'Pain and fever relief';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Gene (gene_id, gene_name, gene_description) VALUES (3, 'EGFR', 'Lung cancer gene') ON CONFLICT (gene_id) DO UPDATE SET gene_name = 'EGFR', gene_description = 'Lung cancer gene';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugGeneInteraction (interaction_id, drug_id, gene_id, interaction_type) VALUES (3, 3, 3, 'Therapeutic') ON CONFLICT (interaction_id) DO UPDATE SET drug_id = 3, gene_id = 3, interaction_type = 'Therapeutic';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO Patient (patient_id, patient_name, patient_age, patient_gender) VALUES (3, 'Adam Johnson', 45, 'Male') ON CONFLICT (patient_id) DO UPDATE SET patient_name = 'Adam Johnson', patient_age = 45, patient_gender = 'Male';",
  "### TABLEDATA\n\nCREATE TABLE Drug (\n  drug_id INT PRIMARY KEY,\n  drug_name VARCHAR(255) NOT NULL,\n  drug_description TEXT\n)\n\nCREATE TABLE Gene (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(255) NOT NULL,\n  gene_description TEXT\n)\n\nCREATE TABLE DrugGeneInteraction (\n  interaction_id INT PRIMARY KEY,\n  drug_id INT,\n  gene_id INT,\n  interaction_type VARCHAR(50),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id),\n  FOREIGN KEY (gene_id) REFERENCES Gene(gene_id)\n)\n\nCREATE TABLE Patient (\n  patient_id INT PRIMARY KEY,\n  patient_name VARCHAR(255) NOT NULL,\n  patient_age INT,\n  patient_gender VARCHAR(10)\n)\n\nCREATE TABLE DrugPrescription (\n  prescription_id INT PRIMARY KEY,\n  patient_id INT,\n  drug_id INT,\n  prescription_date DATE,\n  dosage VARCHAR(50),\n  FOREIGN KEY (patient_id) REFERENCES Patient(patient_id),\n  FOREIGN KEY (drug_id) REFERENCES Drug(drug_id)\n)\n\n### STATEMENT\n\nINSERT INTO DrugPrescription (prescription_id, patient_id, drug_id, prescription_date, dosage) VALUES (3, 3, 3, '2022-08-03', '1 tablet twice a day') ON CONFLICT (prescription_id) DO UPDATE SET patient_id = 3, drug_id = 3, prescription_date = '2022-08-03', dosage = '1 tablet twice a day';"
]