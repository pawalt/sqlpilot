[
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE id = '1'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT gene_name FROM GeneticVariationData WHERE chromosome = 'X'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM GeneticVariationData WHERE gene_name = 'BRCA1'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE position > 1000",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, gene_name FROM GeneticVariationData WHERE variant_type = 'insertion'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT chromosome, position FROM GeneticVariationData WHERE gene_name = 'TP53'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT variant_type FROM GeneticVariationData",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT gene_name) FROM GeneticVariationData",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE gene_name LIKE 'BRCA%'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT chromosome, COUNT(*) FROM GeneticVariationData GROUP BY chromosome",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT MIN(position) FROM GeneticVariationData WHERE gene_name = 'EGFR'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT MAX(position) FROM GeneticVariationData WHERE variant_type = 'deletion'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(position) FROM GeneticVariationData WHERE gene_name = 'PTEN'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT id, gene_name FROM GeneticVariationData ORDER BY gene_name ASC",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE position BETWEEN 500 AND 1000",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) FROM GeneticVariationData WHERE chromosome IN ('1', '2', '3')",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT chromosome, gene_name FROM GeneticVariationData WHERE variant_type = 'substitution' ORDER BY chromosome DESC",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(position) FROM GeneticVariationData GROUP BY gene_name",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE gene_name = 'ALK' AND variant_type = 'fusion'",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE POSITION = (SELECT MIN(position) FROM GeneticVariationData)",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE chromosome = 'X';",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT gene_name, variant_type FROM GeneticVariationData WHERE position < 1000;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT chromosome FROM GeneticVariationData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(*) AS total_variants FROM GeneticVariationData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT gene_name, COUNT(*) AS variants_count FROM GeneticVariationData GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE gene_name LIKE 'BRCA%';",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE variant_type IN ('Deletion', 'Insertion');",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT gene_name, COUNT(*) AS total_variants FROM GeneticVariationData WHERE chromosome = 'Y' GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT position, gene_name FROM GeneticVariationData WHERE gene_name = 'TP53' ORDER BY position DESC;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(position) AS avg_position, MAX(position) AS max_position, MIN(position) AS min_position FROM GeneticVariationData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT chromosome, COUNT(*) AS total_variants FROM GeneticVariationData GROUP BY chromosome HAVING COUNT(*) > 1000;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE gene_name = 'EGFR' AND variant_type = 'Single Nucleotide Polymorphism';",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT chromosome) AS unique_chromosomes FROM GeneticVariationData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT gene_name, AVG(position) AS avg_position FROM GeneticVariationData WHERE chromosome = '1' GROUP BY gene_name HAVING AVG(position) > 500;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT DISTINCT variant_type FROM GeneticVariationData WHERE chromosome = '2' AND position > 5000;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT AVG(position) AS avg_position, STDDEV(position) AS std_dev_position FROM GeneticVariationData;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT gene_name, MIN(position) AS min_position, MAX(position) AS max_position FROM GeneticVariationData GROUP BY gene_name HAVING COUNT(*) > 100;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE chromosome = '3' LIMIT 5;",
  "### TABLEDATA\n\nCREATE TABLE GeneticVariationData (\n    id UUID PRIMARY KEY,\n    chromosome VARCHAR,\n    position INT,\n    gene_name VARCHAR,\n    variant_type VARCHAR\n)\n\n### STATEMENT\n\nSELECT * FROM GeneticVariationData WHERE chromosome = 'X' AND variant_type = 'Deletion' ORDER BY position ASC;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT id, variation_name FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT population, nucleotide_variation FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM population_metadata;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT id, location FROM population_metadata;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT sample_size FROM population_metadata;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT variation_name, nucleotide_variation FROM genetic_variations WHERE population='European';",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT id, location FROM population_metadata WHERE id=1;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE variation_name LIKE '%mutation%';",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT id, population FROM population_metadata WHERE location='USA';",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE id=100;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT MAX(id) FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT MIN(sample_size) FROM population_metadata;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT AVG(sample_size) FROM population_metadata;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT population) FROM population_metadata;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT variation_name, nucleotide_variation FROM genetic_variations WHERE id > 50;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT id, location FROM population_metadata WHERE sample_size > 1000;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE nucleotide_variation IS NOT NULL;",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT variation_name, nucleotide_variation FROM genetic_variations WHERE variation_name IN ('insertion', 'deletion');",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT COUNT(*) FROM population_metadata WHERE location='Europe';",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE population='European' AND nucleotide_variation LIKE '%AG%'",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT variation_name, nucleotide_variation FROM genetic_variations WHERE population='African'",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT population FROM genetic_variations",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE nucleotide_variation='A' OR nucleotide_variation='C'",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT g.variation_name, p.location FROM genetic_variations g JOIN population_metadata p ON g.population=p.population",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT COUNT(id) FROM genetic_variations",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT g.* FROM genetic_variations g JOIN population_metadata p ON g.population=p.population WHERE p.location='Europe'",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE id IN (SELECT id FROM population_metadata WHERE sample_size > 100)",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT AVG(sample_size) FROM population_metadata",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT variation_name FROM genetic_variations WHERE LENGTH(variation_name) > 10",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM population_metadata WHERE sample_size BETWEEN 50 AND 100",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT g.variation_name, p.location FROM genetic_variations g LEFT JOIN population_metadata p ON g.population=p.population",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations ORDER BY id DESC",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT MAX(sample_size) FROM population_metadata",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT MIN(sample_size) FROM population_metadata",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT COUNT(DISTINCT population) FROM genetic_variations",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT population, COUNT(*) FROM genetic_variations GROUP BY population",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT population, SUM(sample_size) FROM population_metadata GROUP BY population",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT * FROM genetic_variations LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE genetic_variations (\n    id INT PRIMARY KEY,\n    variation_name VARCHAR(255),\n    population VARCHAR(100),\n    nucleotide_variation TEXT\n);\n\nCREATE TABLE population_metadata (\n    id INT PRIMARY KEY,\n    population VARCHAR(100),\n    location VARCHAR(255),\n    sample_size INT\n);\n\n### STATEMENT\n\nSELECT DISTINCT g.population, p.location FROM genetic_variations g JOIN population_metadata p ON g.population=p.population",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT sample_id, study_year FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT species_name, population_name FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT variation_id, variation_type FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM gene_features;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_id, gene_name FROM gene_features;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_length, gene_description FROM gene_features;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data JOIN genetic_variations ON population_genetics_data.sample_id = genetic_variations.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data JOIN gene_features ON population_genetics_data.sample_id = gene_features.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM genetic_variations JOIN gene_features ON genetic_variations.variation_id = gene_features.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT population_name, variation_type FROM population_genetics_data JOIN genetic_variations ON population_genetics_data.sample_id = genetic_variations.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT species_name, gene_description FROM population_genetics_data JOIN gene_features ON population_genetics_data.sample_id = gene_features.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT population_name, variation_type, gene_name FROM population_genetics_data JOIN genetic_variations ON population_genetics_data.sample_id = genetic_variations.sample_id JOIN gene_features ON genetic_variations.variation_id = gene_features.gene_id;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data WHERE study_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE variation_type = 'SNP';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM gene_features WHERE gene_length > 1000;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data WHERE species_name = 'Human' AND study_year > 2010;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE allele1 = 'A' AND allele2 = 'T';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM gene_features WHERE gene_description LIKE '%function%';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT sample_id, species_name, population_name, study_year FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data WHERE species_name = 'Human';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT sample_id, variation_type, chromosome_number, position FROM genetic_variations;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM genetic_variations WHERE position > 1000 AND variation_type = 'SNP';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_name, gene_length FROM gene_features;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM gene_features WHERE gene_length > 1000;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT sample_id, variation_type, chromosome_number, position FROM genetic_variations WHERE chromosome_number = 1 AND variation_type = 'Insertion';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT species_name, population_name FROM population_genetics_data WHERE study_year = 2021;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_name, gene_description FROM gene_features WHERE gene_length < 5000;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT sample_id, variation_type, allele1, allele2 FROM genetic_variations WHERE position BETWEEN 1000 AND 2000;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT DISTINCT species_name FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT * FROM gene_features WHERE gene_description LIKE '%DNA%';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT sample_id, variation_type, allele1, allele2 FROM genetic_variations WHERE chromosome_number = 2;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_name, gene_length, gene_description FROM gene_features WHERE gene_length > 2000 ORDER BY gene_length DESC;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT species_name, COUNT(sample_id) AS sample_count FROM population_genetics_data GROUP BY species_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_name, COUNT(gene_id) AS variation_count FROM genetic_variations GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT species_name, population_name, COUNT(sample_id) AS sample_count FROM population_genetics_data GROUP BY species_name, population_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_name, COUNT(variation_id) AS variation_count FROM genetic_variations GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT species_name, study_year, AVG(sample_id) AS avg_sample_id FROM population_genetics_data GROUP BY species_name, study_year;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (\n  sample_id INT PRIMARY KEY,\n  species_name VARCHAR(50),\n  population_name VARCHAR(50),\n  study_year INT\n)\n\nCREATE TABLE genetic_variations (\n  variation_id INT PRIMARY KEY,\n  sample_id INT,\n  variation_type VARCHAR(50),\n  chromosome_number INT,\n  position INT,\n  allele1 VARCHAR(1),\n  allele2 VARCHAR(1)\n)\n\nCREATE TABLE gene_features (\n  gene_id INT PRIMARY KEY,\n  gene_name VARCHAR(50),\n  gene_length INT,\n  gene_description TEXT\n)\n\n### STATEMENT\n\nSELECT gene_name, gene_length, gene_description FROM gene_features WHERE gene_length < 3000 ORDER BY gene_length ASC;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, genotype FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT DISTINCT population_name FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT variant_type, allele_frequency FROM population_genetics_data WHERE allele_frequency > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM sample_metadata;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT sample_name, population_name, collection_date FROM sample_metadata;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT DISTINCT population_name FROM sample_metadata;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM gene_annotation;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, chromosome FROM gene_annotation;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM analysis_results;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT analysis_date, significant, p_value FROM analysis_results;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT result_id, study_name FROM analysis_results;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, chromosome, start_position, end_position FROM gene_annotation WHERE chromosome = 'X';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, genotype, allele_frequency FROM population_genetics_data WHERE genotype = 'AA';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT sample_name, collection_date FROM sample_metadata WHERE population_name = 'Europe';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, chromosome, start_position FROM gene_annotation WHERE end_position < 1000;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT study_name, p_value FROM analysis_results WHERE significant = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data WHERE allele_frequency BETWEEN 0.2 AND 0.4;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, chromosome, start_position, end_position FROM gene_annotation WHERE start_position > 500 AND end_position < 1000;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, genotype, allele_frequency FROM population_genetics_data WHERE allele_frequency < 0.1;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM population_genetics_data WHERE allele_frequency > 0.5;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, COUNT(genotype) FROM population_genetics_data GROUP BY population_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM sample_metadata WHERE collection_date BETWEEN '2022-01-01' AND '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, chromosome FROM gene_annotation WHERE start_position < 1000 AND end_position > 500;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT AVG(p_value) AS avg_p_value FROM analysis_results WHERE significant = TRUE;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, chromosome, start_position, end_position FROM gene_annotation ORDER BY chromosome, start_position;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT study_name, COUNT(result_id) AS result_count FROM analysis_results GROUP BY study_name HAVING AVG(p_value) < 0.05;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, AVG(allele_frequency) AS avg_allele_frequency FROM population_genetics_data GROUP BY population_name HAVING AVG(allele_frequency) > 0.3;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM sample_metadata s JOIN population_genetics_data p ON s.population_name = p.population_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT DISTINCT population_name FROM population_genetics_data;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_id, gene_name, chromosome, start_position, end_position FROM gene_annotation WHERE chromosome LIKE 'chr%' ORDER BY chromosome;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM analysis_results WHERE analysis_date >= '2022-01-01' AND analysis_date <= '2022-06-30';",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT sample_name, collection_date FROM sample_metadata WHERE sample_id IN (1, 2, 3);",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, MAX(allele_frequency) AS max_allele_frequency FROM population_genetics_data GROUP BY population_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, COUNT(DISTINCT chromosome) AS chromosome_count FROM gene_annotation GROUP BY gene_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT study_name, CAST(AVG(p_value) AS DECIMAL(5,2)) AS avg_p_value FROM analysis_results GROUP BY study_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT * FROM gene_annotation LIMIT 10 OFFSET 5;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT population_name, AVG(allele_frequency) AS avg_allele_frequency, MAX(allele_frequency) AS max_allele_frequency, MIN(allele_frequency) AS min_allele_frequency FROM population_genetics_data GROUP BY population_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT p.population_name, COUNT(s.sample_id) AS sample_count FROM population_genetics_data p LEFT JOIN sample_metadata s ON p.population_name = s.population_name GROUP BY p.population_name;",
  "### TABLEDATA\n\nCREATE TABLE population_genetics_data (id INT PRIMARY KEY, population_name VARCHAR(255), genotype VARCHAR(255), variant_type VARCHAR(50), allele_frequency FLOAT);\n\nCREATE TABLE sample_metadata (sample_id INT PRIMARY KEY, sample_name VARCHAR(255), population_name VARCHAR(255), collection_date DATE);\n\nCREATE TABLE gene_annotation (gene_id INT PRIMARY KEY, gene_name VARCHAR(255), chromosome VARCHAR(10), start_position INT, end_position INT);\n\nCREATE TABLE analysis_results (result_id INT PRIMARY KEY, analysis_date DATE, significant BOOLEAN, p_value FLOAT, study_name VARCHAR(255));\n\n### STATEMENT\n\nSELECT gene_name, COUNT(result_id) AS result_count, MAX(p_value) AS max_p_value FROM analysis_results GROUP BY gene_name HAVING result_count > 1;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Variants LIMIT 10",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT variant_name, chromosome FROM Variants WHERE position = 100",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Samples WHERE population = 'Europe'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT sample_name, date_collected FROM Samples WHERE sample_id = 1",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Genes WHERE chromosome = 'X'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT gene_name, start_position, end_position FROM Genes WHERE gene_id = 5",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Populations WHERE region = 'Asia'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT population_name FROM Populations WHERE population_id = 3",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Studies LIMIT 5",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT study_name, researcher_name FROM Studies WHERE start_date > '2020-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT variant_name, chromosome, position FROM Variants WHERE allele1 = 'A' AND allele2 = 'T'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT gene_name, start_position, end_position FROM Genes WHERE chromosome = 'Y'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT sample_name FROM Samples WHERE date_collected < '2019-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT population_name FROM Populations WHERE region = 'Africa'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Studies WHERE researcher_name = 'John Doe'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT study_name, researcher_name, start_date, end_date FROM Studies WHERE end_date > start_date",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Variants WHERE chromosome = '1'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT study_name FROM Studies WHERE end_date < '2022-01-01'",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT gene_name, chromosome FROM Genes WHERE start_position < 100000",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Variants WHERE chromosome = 'X';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT variant_name, position FROM Variants WHERE position > 1000;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT variant_name, allele1, allele2 FROM Variants WHERE position BETWEEN 500 AND 1000;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Samples WHERE date_collected >= '2022-01-01';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT sample_name, population FROM Samples WHERE population = 'Europe';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Genes WHERE chromosome = 'Y';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT gene_name, start_position, end_position FROM Genes WHERE start_position < 5000;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Populations WHERE region = 'Asia';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT population_name FROM Populations WHERE population_name LIKE '%Pacific%';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Studies WHERE end_date > '2022-12-31';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT study_name, researcher_name FROM Studies WHERE researcher_name = 'John Smith';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Variants v INNER JOIN Samples s ON v.id = s.sample_id;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT v.variant_name, s.sample_name FROM Variants v INNER JOIN Samples s ON v.id = s.sample_id WHERE v.chromosome = '2';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT g.gene_name, p.population_name FROM Genes g INNER JOIN Populations p ON g.chromosome = p.region;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT v.position, s.date_collected FROM Variants v INNER JOIN Samples s ON v.id = s.sample_id WHERE s.population = 'Africa';",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT DISTINCT population FROM Samples;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT * FROM Genes WHERE end_position - start_position > 5000;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT study_name, researcher_name, start_date, end_date FROM Studies ORDER BY end_date DESC;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT MIN(start_position) AS min_start, MAX(end_position) AS max_end FROM Genes;",
  "### TABLEDATA\n\nCREATE TABLE Variants (\n  id INT PRIMARY KEY,\n  variant_name TEXT,\n  chromosome TEXT,\n  position INT,\n  allele1 TEXT,\n  allele2 TEXT\n)\n\nCREATE TABLE Samples (\n  sample_id INT PRIMARY KEY,\n  sample_name TEXT,\n  population TEXT,\n  date_collected DATE\n)\n\nCREATE TABLE Genes (\n  gene_id INT PRIMARY KEY,\n  gene_name TEXT,\n  chromosome TEXT,\n  start_position INT,\n  end_position INT\n)\n\nCREATE TABLE Populations (\n  population_id INT PRIMARY KEY,\n  population_name TEXT,\n  region TEXT\n)\n\nCREATE TABLE Studies (\n  study_id INT PRIMARY KEY,\n  study_name TEXT,\n  researcher_name TEXT,\n  start_date DATE,\n  end_date DATE\n)\n\n### STATEMENT\n\nSELECT AVG(position) AS avg_position FROM Variants;"
]